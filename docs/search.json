[{"path":"/articles/Btrait.html","id":"package-btrait","dir":"Articles","previous_headings":"","what":"Package Btrait","title":"R-package Btrait: working with biological data and trait information","text":"R-package Btrait contains functions data sets work density data, trait information taxonomic relationships. package contains: functions work combination species-density (species-biomass) data, species-trait information, taxonomy two data sets density biomass data macrobenthos North Sea. several macrobenthos trait databases explain work package functions using small data set. Another vignette deals density trait databases package (vignette (“BtraitData”)). (trigger vignette R, write: vignette (“BtraitData”)).","code":""},{"path":"/articles/Btrait.html","id":"density-data","dir":"Articles","previous_headings":"","what":"Density data","title":"R-package Btrait: working with biological data and trait information","text":"Taxon density data record -certain taxon- many individuals present unit surface certain place (station). Rather abundances, also biomasses, .e. summed weight individuals taxon, may recorded. Typically, always, densities certain station estimated several times (.e. replicate measurements). two ways represent density datasets: format format. long format often used store density data; several columns (station, taxon, value, …). format special sense absences (0 densities) represented explicitly data. Thus, implicitly assumed , taxon represented data, density = 0. implicit absences need taken account performing calculations data. wide format, row represents station (data taken), columns represent taxa (), values densities biomasses. format, absences represented, make format suitable performing calculations. However, time new taxon found station, data stations also need changed (.e. extra column 0 densities added).","code":""},{"path":"/articles/Btrait.html","id":"a-small-density-dataset","dir":"Articles","previous_headings":"Density data","what":"A small density dataset","title":"R-package Btrait: working with biological data and trait information","text":"start small density dataset, data.frame station, species, density data, long format. data set, st.sampled 2000 2001 (.e. 2 replicates), st.b sampled 2002 , st.c 2003. Note also two records species “sp.1” station “st.” 2001. uncommon density data: perhaps another species later reassigned “sp.1”, separate measurements (.e. weighing) done two batches individuals species. Data.frame species density information 4 different species data set 3 different stations. Note species present stations. certain station, absence species dataset means density = 0. complete representation data : Species density added absences data, wide format : Species density wide format , averaged years: Species density wide format, averaged years","code":"S.density <- data.frame(   station = c(\"st.a\",\"st.a\",\"st.a\",\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\",\"st.c\"),   year    = c(2000  , 2000 , 2001 , 2001 , 2001,  2002 , 2002 , 2002 , 2003 ),   species = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.1\",\"sp.4\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.4\"),   density = c(    1,     2,     3,     1,     2,     5,     3,     1,     3) )"},{"path":"/articles/Btrait.html","id":"taxonomic-data","dir":"Articles","previous_headings":"","what":"Taxonomic data","title":"R-package Btrait: working with biological data and trait information","text":"taxonomy records relationships taxa. Typically order taxa species, genus, family, order, class, phylum level. real marine data, information can extracted world register marine species, conveniently abbreviated WoRMS. WoRMS database, taxon also assigned unique identifier (AphiaID). R-package worms allows access database R. Btrait, taxonomy can used several ways: fill gaps trait information, assuming closely related taxa share similar traits, estimate densities trait composition higher taxonomic levels. dataset , species belong 4 genera (“g.1”, “g.2”, “g.3”, “g.4”), 3 families (“f.1”, “f.2”, “f.3”), 2 orders (“o.1”, “o.2”) 1 class (“c.1”). Data.frame taxonomic information","code":"S.taxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.3\", \"g.3\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.2\", \"f.2\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.2\", \"o.2\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\") )"},{"path":"/articles/Btrait.html","id":"trait-data-taxa-x-trait","dir":"Articles","previous_headings":"","what":"Trait data (taxa x trait)","title":"R-package Btrait: working with biological data and trait information","text":"Traits assign certain properties taxa, generally relating taxa affect ecosystem (called “functional effects traits”), taxa deal environment react changes environment, disturbance (called “response traits”). two ways assign traits species: crisp format, trait assigned one value per species. traits fuzzy format, species can belong several modalities within one trait; trait sum modality proportions \\(1\\). possible convert traits fuzzy crisp format, reverse conversion unambiguous. Note customary store trait data wide format, taxa rows, trait modalities columns.","code":""},{"path":"/articles/Btrait.html","id":"a-fuzzy-coded-trait-dataset","dir":"Articles","previous_headings":"Trait data (taxa x trait)","what":"A fuzzy-coded trait dataset","title":"R-package Btrait: working with biological data and trait information","text":"trait dataset (S.traits) inputted , species represented two traits (T1, T2); traits 3 (T1_M1, T1_M2, T1_M3) 2 modalities (T2_M1, T2_M2) respectively. instance, trait 1 depth occurrence species, modalities “0-5cm”, “5-10cm”, “10-15cm”; trait 2 feeding type species, either “filterfeeding” “depositfeeding”. trait information stored data.frame names species first column, membership trait modality columns. Note: information sp.4 lacking trait database; sp.5 sp.6 trait database density dataset. Data.frame species trait information, fuzzy coded R knowledge traits modalities mean, data.frame called S.traits.lab describes modalities trait. also numerical value (score) assigned modalities. Data.frame trait descriptions trait score required recasting fuzzy traits crisp format:. Trait dataset crisp format, based trait score","code":"S.traits <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\",\"sp.6\"),   T1_M1   = c(0     , 0    ,   0  , 0.2  ,     1),   T1_M2   = c(1     , 0    , 0.5  , 0.3  ,     0),   T1_M3   = c(0     , 1    , 0.5  , 0.5  ,     0),   T2_M1   = c(0     , 0    ,   1  , 0.5  ,     1),   T2_M2   = c(1     , 1    ,   0  , 0.5  ,     0) ) S.traits.lab <- data.frame(   colname  =c(\"T1_M1\",\"T1_M2\" ,\"T1_M3\",  \"T2_M1\",  \"T2_M2\"),   trait    =c(\"depth\",\"depth\" ,\"depth\",  \"feeding\",\"feeding\"),   modality =c(\"0-5cm\",\"5-10cm\",\"10-15cm\",\"filter\", \"deposit\"),    score    =c(2.5    , 7.5    , 12.5    , 1      , 2     )   )"},{"path":"/articles/Btrait.html","id":"a-crisp-trait-dataset","dir":"Articles","previous_headings":"Trait data (taxa x trait)","what":"A crisp trait dataset","title":"R-package Btrait: working with biological data and trait information","text":"traits fuzzy coded, one species can belong different trait modalities, traits crisp (binary) format, species can belong ONE modality within one trait. Thus, crisp trait data.frame contains \\(0\\)s \\(1\\)s (TRUE/FALSE) ‘binary’ traits. Traits can also value ‘numerical’ traits, can also factor character string ‘categorical’ traits. Examples ‘numerical’ traits taxon , e.g. mean biomass, mean longevity, respiration rate. feeding type taxon belongs ‘categorical’ trait. example crisp trait dataset: Data.frame species trait information, crisp coded data set “fuzzy” format needs columns: Crisp trait dataset fuzzy format","code":"S.traits2 <- data.frame(   species   = c(\"sp.1\"  ,\"sp.2\"   ,\"sp.3\"   ,\"sp.5\"  ,\"sp.6\"),   Feeding   = c(\"filter\",\"deposit\",\"deposit\",\"grazer\",\"filter\"), # categorical   Longlived = c(TRUE    ,TRUE     ,FALSE    ,FALSE   ,TRUE),     # binary    Weight    = c(0.1     ,0.5      ,5        ,2       ,10   )     # numerical  )"},{"path":"/articles/Btrait.html","id":"working-with-density-data-using-btrait-functions","dir":"Articles","previous_headings":"","what":"Working with density data using Btrait functions","title":"R-package Btrait: working with biological data and trait information","text":"now demonstrate use functions R-package Btrait work combination density, taxonomic trait data","code":""},{"path":"/articles/Btrait.html","id":"generating-density-summaries","dir":"Articles","previous_headings":"Working with density data using Btrait functions","what":"Generating density summaries","title":"R-package Btrait: working with biological data and trait information","text":"first make two tables, recasting density data long wide format, using function l2wDensity, either keep years (first example), average years (2nd example). can done, now returning summaries long format using function getDensity: Btrait functions extract densities work follows: first sum value taken descriptor x taxon combinations, average taken vector passed argument averageOver, taking account hidden absences.","code":"with(S.density,   # data in long format      l2wDensity(descriptor = data.frame(station, year),                  taxon      = species,                  value      = density)     ) ##   station year sp.1 sp.2 sp.3 sp.4 ## 1    st.a 2000    1    2    0    0 ## 2    st.a 2001    4    0    0    2 ## 3    st.b 2002    0    5    3    1 ## 4    st.c 2003    0    0    0    3 with(S.density,       l2wDensity(descriptor  = station,                  averageOver = year,                  taxon       = species,                  value       = density)     ) ##   descriptor sp.1 sp.2 sp.3 sp.4 ## 1       st.a  2.5    1    0    1 ## 2       st.b  0.0    5    3    1 ## 3       st.c  0.0    0    0    3 with(S.density,       getDensity(descriptor = data.frame(station, year),                  taxon      = species,                  value      = density)     ) ##   station year taxon value ## 1    st.a 2000  sp.1     1 ## 2    st.a 2000  sp.2     2 ## 3    st.a 2001  sp.1     4 ## 4    st.a 2001  sp.4     2 ## 5    st.b 2002  sp.2     5 ## 6    st.b 2002  sp.3     3 ## 7    st.b 2002  sp.4     1 ## 8    st.c 2003  sp.4     3 with(S.density,       getDensity(descriptor  = station,                  averageOver = year,                  taxon       = species,                  value       = density)     ) ##   descriptor taxon value ## 1       st.a  sp.1   2.5 ## 2       st.a  sp.2   1.0 ## 3       st.a  sp.4   1.0 ## 4       st.b  sp.2   5.0 ## 5       st.b  sp.3   3.0 ## 6       st.b  sp.4   1.0 ## 7       st.c  sp.4   3.0"},{"path":"/articles/Btrait.html","id":"merging-density-with-taxonomic-data","dir":"Articles","previous_headings":"Working with density data using Btrait functions","what":"Merging density with taxonomic data","title":"R-package Btrait: working with biological data and trait information","text":"Base R convenient function combine (merge) several datasets, based common information. use merge function add taxonomic information higher taxonomic level density data. code , density data, species level extended taxonomic information species. using function, good practice explicitly specify name column need merge two datasets. example, column called “species” column name datasets (S.density S.taxonomy) common, theory need specify column merger done (argument “”), clarity. merge done, simple generate tables densities calculated higher taxonomic level. example, create density family level, taking yearly averages: merged dataset can also used generate summaries based taxonomic identity. request summed densities, family level, taxa belonging particular order (o.2). use argument subset extract data Often want keep names input data output, can achieve passing arguments named lists:","code":"S.density.tax <- merge(S.density,                         S.taxonomy,                         by=\"species\") head(S.density.tax) ##   species station year density genus family order class ## 1    sp.1    st.a 2000       1   g.1    f.1   o.1   c.1 ## 2    sp.1    st.a 2001       3   g.1    f.1   o.1   c.1 ## 3    sp.1    st.a 2001       1   g.1    f.1   o.1   c.1 ## 4    sp.2    st.a 2000       2   g.2    f.1   o.1   c.1 ## 5    sp.2    st.b 2002       5   g.2    f.1   o.1   c.1 ## 6    sp.3    st.b 2002       3   g.3    f.2   o.2   c.1 with(S.density.tax,       getDensity(descriptor  = station,                  averageOver = year,                  taxon       = family,                  value       = density) ) ##   descriptor taxon value ## 1       st.a   f.1   3.5 ## 2       st.a   f.2   1.0 ## 3       st.b   f.1   5.0 ## 4       st.b   f.2   4.0 ## 5       st.c   f.2   3.0 with(S.density.tax,       getDensity(descriptor  = station,                  averageOver = year,                  taxon       = family,                  subset      = (order == \"o.2\"),                 value       = density) ) ##   descriptor taxon value ## 1       st.a   f.2     1 ## 2       st.b   f.2     4 ## 3       st.c   f.2     3 with (S.density.tax,    getDensity(descriptor  = list(station=station),               taxon       = list(family =family),               averageOver = year,               value       = list(density=density)) ) ##   station family density ## 1    st.a    f.1     3.5 ## 2    st.a    f.2     1.0 ## 3    st.b    f.1     5.0 ## 4    st.b    f.2     4.0 ## 5    st.c    f.2     3.0"},{"path":[]},{"path":"/articles/Btrait.html","id":"from-wide-to-long-format","dir":"Articles","previous_headings":"Working with trait data.","what":"From wide to long format","title":"R-package Btrait: working with biological data and trait information","text":"trait data conveniently stored wide format, sometimes may easier look trait data long format. format can easily generated wide format:","code":"S.traits.long <- w2lTrait(             wide        = S.traits,              trait.names = S.traits.lab[,c(\"trait\", \"modality\")]) S.traits.long[order(S.traits.long$species),] ##    species   trait modality value ## 3     sp.1   depth   5-10cm   1.0 ## 12    sp.1 feeding  deposit   1.0 ## 6     sp.2   depth  10-15cm   1.0 ## 13    sp.2 feeding  deposit   1.0 ## 4     sp.3   depth   5-10cm   0.5 ## 7     sp.3   depth  10-15cm   0.5 ## 9     sp.3 feeding   filter   1.0 ## 1     sp.5   depth    0-5cm   0.2 ## 5     sp.5   depth   5-10cm   0.3 ## 8     sp.5   depth  10-15cm   0.5 ## 10    sp.5 feeding   filter   0.5 ## 14    sp.5 feeding  deposit   0.5 ## 2     sp.6   depth    0-5cm   1.0 ## 11    sp.6 feeding   filter   1.0"},{"path":"/articles/Btrait.html","id":"from-fuzzy-to-crisp-format","dir":"Articles","previous_headings":"Working with trait data.","what":"From fuzzy to crisp format","title":"R-package Btrait: working with biological data and trait information","text":"example trait database (S.traits) fuzzy-coded, meaning one trait represented several modalities taxon can partial membership. instance, trait T1 (depth) sp.2 can either expressed modality M1 M2, etc… summaries may instructive one number trait, .e. represent trait data crisp format. , need pass trait.class column belongs , score needs assigned modality. Data.frame species traits crisp format","code":"S.traits.crisp <- fuzzy2crisp(             trait       = S.traits,              trait.class = S.traits.lab$trait,              trait.score = S.traits.lab$score) knitr::kable(S.traits.crisp,         caption=\"Data.frame with species traits in crisp format\",         align=\"c\", row.names=FALSE)"},{"path":"/articles/Btrait.html","id":"from-crisp-to-fuzzy-format","dir":"Articles","previous_headings":"Working with trait data.","what":"From crisp to fuzzy format","title":"R-package Btrait: working with biological data and trait information","text":"also possible cast traits fuzzy crisp format:","code":"crisp2fuzzy(S.traits.crisp) ##   species depth feeding ## 1    sp.1   7.5     2.0 ## 2    sp.2  12.5     2.0 ## 3    sp.3  10.0     1.0 ## 4    sp.5   9.0     1.5 ## 5    sp.6   2.5     1.0"},{"path":"/articles/Btrait.html","id":"extending-traits-based-on-taxonomic-information","dir":"Articles","previous_headings":"Working with trait data.","what":"Extending traits based on taxonomic information","title":"R-package Btrait: working with biological data and trait information","text":"trait database information species “sp.1”, “sp.2”, “sp.3” present density data, lacks data species “sp.4”. need traits species, can use taxonomic relationships species. instance “sp.4” belongs genus “sp.3” “sp.5”, “plausible” values traits species “sp.4” can calculated mean two members genus. Using function getTrait, suffices pass taxonomy . function proceeds two steps: first traits extended information higher taxonomic levels (using function extendTrait), provided information yet trait database, , taxon present trait database, traits closest taxonomic level used. instance, unrecorded species, first checked trait known genus level, , family level . case, species “sp.4” belongs genus “g.3”, lack trait information “sp.4”, traits “g.3” used; latter estimated average traits species “sp.3” “sp.5”, trait information known. can also use taxonomy generate mean trait modalities higher taxonomic levels: first statement, deliberately forgot add taxonomic relationships; none genera explicitly included trait database S.traits, returns table NAs. second statement, traits genus level estimated averages species traits.","code":"taxaList <- unique(S.density$species) getTrait(   taxon    = taxaList,             trait    = S.traits,               taxonomy = S.taxonomy) ##   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 ## 1    sp.1   0.0   1.0   0.0  0.00  1.00 ## 2    sp.2   0.0   0.0   1.0  0.00  1.00 ## 3    sp.4   0.1   0.4   0.5  0.75  0.25 ## 4    sp.3   0.0   0.5   0.5  1.00  0.00 S.traits.extended <- extendTrait(             trait    = S.traits,              taxonomy = S.taxonomy) S.traits.extended ##    species T1_M1     T1_M2     T1_M3     T2_M1     T2_M2 ## 1      g.1  0.00 1.0000000 0.0000000 0.0000000 1.0000000 ## 2      g.2  0.00 0.0000000 1.0000000 0.0000000 1.0000000 ## 3      g.3  0.10 0.4000000 0.5000000 0.7500000 0.2500000 ## 4      g.4  1.00 0.0000000 0.0000000 1.0000000 0.0000000 ## 5      f.1  0.00 0.5000000 0.5000000 0.0000000 1.0000000 ## 6      f.2  0.10 0.4000000 0.5000000 0.7500000 0.2500000 ## 7      f.3  1.00 0.0000000 0.0000000 1.0000000 0.0000000 ## 8      o.1  0.00 0.5000000 0.5000000 0.0000000 1.0000000 ## 9      o.2  0.40 0.2666667 0.3333333 0.8333333 0.1666667 ## 10     c.1  0.24 0.3600000 0.4000000 0.5000000 0.5000000 getTrait(   taxon    = unique(S.density$species),             trait    = rbind(S.traits, S.traits.extended),              taxonomy = S.taxonomy) ##   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 ## 1    sp.1   0.0   1.0   0.0  0.00  1.00 ## 2    sp.2   0.0   0.0   1.0  0.00  1.00 ## 3    sp.4   0.1   0.4   0.5  0.75  0.25 ## 4    sp.3   0.0   0.5   0.5  1.00  0.00 # This does not work, as these genera are not in the traits database getTrait( taxon    = c(\"g.1\", \"g.2\", \"g.3\"),           trait    = S.traits) ##   taxon T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 ## 1   g.1    NA    NA    NA    NA    NA ## 2   g.2    NA    NA    NA    NA    NA ## 3   g.3    NA    NA    NA    NA    NA getTrait( taxon    = c(\"g.1\", \"g.2\", \"g.3\"),           trait    = S.traits,           taxonomy = S.taxonomy) ##   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 ## 1     g.1   0.0   1.0   0.0  0.00  1.00 ## 2     g.2   0.0   0.0   1.0  0.00  1.00 ## 3     g.3   0.1   0.4   0.5  0.75  0.25"},{"path":"/articles/Btrait.html","id":"from-taxon-density-to-trait-density","dir":"Articles","previous_headings":"","what":"From taxon density to trait density","title":"R-package Btrait: working with biological data and trait information","text":"Often want combine density trait information, find mean values traits certain locations. community weighted mean trait scores station estimated combining density, taxonomy, trait data. can done one step, using function getTraitDensity. , fuzzy-coded traits, also pass trait classes trait scores, fuzzy traits cast crisp format; pass information, result remain fuzzy format. pass taxonomical information taxa, trait scores unknown species estimated based taxonomic closeness. next example, combine yearly-averaged density data S.density, fuzzy-coded trait database S.traits. trait database records 5 modalities 2 traits (columns). data.frame S.traits.lab describes trait modalities belong. passing information, result crisp format. Without taxonomy, trait scores station “st.c” calculated, trait information lacking “sp.4”, taxon present station. Also scores stations differ, estimated without “sp.4”. pass trait classes scores, function getTraitDensity return trait scores fuzzy format. fuzzy traits can later recast crisp format, gives stations trait scores .","code":"cwm <- getTraitDensity(         descriptor  = S.density$station,          taxon       = S.density$species,         averageOver = S.density$year,         value       = S.density$density,          trait       = S.traits,             # fuzzy coded traits per station         trait.class = S.traits.lab$trait,   # fuzzy trait class for S.trait columns         trait.score = S.traits.lab$score,   # modality value          taxonomy    = S.taxonomy) knitr::kable(cwm, row.names=FALSE) cwm2 <- getTraitDensity(          descriptor  = S.density$station,           averageOver = S.density$year,          taxon       = S.density$species,           value       = S.density$density,           trait       = S.traits,                       trait.class = S.traits.lab$trait,              trait.score = S.traits.lab$score) knitr::kable(cwm2, row.names=FALSE) cwm.fuz <- getTraitDensity(             descriptor  = S.density$station,              averageOver = S.density$year,             taxon       = S.density$species,              value       = S.density$density,              trait       = S.traits,           # fuzzy coded traits per station             taxonomy    = S.taxonomy) knitr::kable(cwm.fuz, row.names=FALSE) fuzzy2crisp(trait      = cwm.fuz,             trait.class = S.traits.lab$trait,               trait.score = S.traits.lab$score) ##   descriptor     depth  feeding ## 1       st.a  9.166667 1.777778 ## 2       st.b 11.388889 1.555556 ## 3       st.c 10.000000 1.000000"},{"path":"/articles/Btrait.html","id":"show-results","dir":"Articles","previous_headings":"","what":"Show results","title":"R-package Btrait: working with biological data and trait information","text":"plotting, need coordinates stations (longitude x, latitude y): Data.frame station positions mean trait values per station can plotted using function mapBtrait. function work, need add stations coordinates community weighted mean data. use R-function merge ; column merge station cwm data first one datasets (specify name common column rather position).","code":"S.stations <- data.frame(   station = c(\"st.a\",\"st.b\",\"st.c\"),   x       = c(   3.1,   3.2,   3.5),   y       = c(  52.2,  53.7,  53.4) ) Stations.traits <- merge(S.stations, cwm, by=1)  par(mfrow=c(1,2)) nscore <- colnames(cwm) nunits <- c(\"cm\", \"-\") for (i in 2:length(nscore))  mapBtrait(x      = S.stations$x,    #x-positions            y      = S.stations$y,    #y-positions            colvar = cwm[,i],         #color-variable                        contours=MWTL$contours,   #contourlines            draw.levels=TRUE,                        main    =nscore[i],       #main title            clab    =nunits[i],       #title above color bar            pch=16, cex=2)"},{"path":"/articles/Btrait.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"R-package Btrait: working with biological data and trait information","text":"Beauchard O, Brind’Amour , Schratzberger M, Laffargue P, Hintzen NT, Somerfield PJ, Piet G (2021) generic approach develop trait-based indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52. https://doi.org/10.3354/meps13840 Wilson, R. J., Speirs, D. C., Sabatino, ., Heath, M. R. (2018). synthetic map north-west European Shelf sedimentary environment applications marine science. Earth Sys. Sci. Data 10, 109–130. doi: 10.5194/essd-10-109-2018 R Core Team (2022). R: Language Environment Statistical Computing. R Foundation Statistical Computing, Vienna, Austria. https://www.R-project.org/. Soetaert K (2021). plot3D: Plotting Multi-Dimensional Data. R package version 1.4, https://CRAN.R-project.org/package=plot3D. Soetaert K, Beauchard O (2023). Btrait: Working Biological density, taxonomy, trait composition data. R package version 0.0.0. Holstein J (2018). worms: Retriving Aphia Information World Register Marine Species. R package version 0.2.2, https://CRAN.R-project.org/package=worms.","code":""},{"path":"/articles/BtraitData.html","id":"introduction-","dir":"Articles","previous_headings":"","what":"Introduction.","title":"Benthic density and trait databases in R-package Btrait","text":"R-package Btrait facilitates working combination biological density, trait, taxonomic data. contains: functions working density trait data (getDensity, getTraits, getTraitDensity, …), two data sets macrobenthos species density biomass data Northsea (MWTL, NSBS), data sets functional trait data (Traits_nioz, Traits_cefas, Traits_Db, Traits_irr). main vignette Btrait demonstrates use functions package using small data set. vignette introduces benthic databases.","code":""},{"path":"/articles/BtraitData.html","id":"the-northsea-macrobenthos-density-data","dir":"Articles","previous_headings":"","what":"The Northsea macrobenthos density data","title":"Benthic density and trait databases in R-package Btrait","text":"macrobenthos animals living sediment retained sieve mesh size 1mm. important ecosystem services deliver, .e. impact biogeochemistry (nutrient dynamics), important food source fishes. Btrait contains two data sets contain Northsea macrobenthos density biomass: MWTL data, (one three-) yearly data Dutch part North Sea, NSBS (Northsea Benthos Survey) data, one-time survey covers entire North Sea.","code":""},{"path":"/articles/BtraitData.html","id":"the-mwtl-dataset","dir":"Articles","previous_headings":"The Northsea macrobenthos density data","what":"The MWTL dataset","title":"Benthic density and trait databases in R-package Btrait","text":"Dutch Rijkswaterstaat (RWS) performed regular macrobenthos sampling Dutch part Northsea, 1995 till 2018. activity called “MWTL monitoring” . monitoring done yearly basis 1995 till 2010, sampling less frequent, occurring 2012, 2015, 2018. stations always sampled though; 5 stations sampled 18 rather 19 times; another 6 stations sampled less equal 12 times. sampling region extends inbetween (2.68, 6.6) dg East (51.62, 55.47) dg North, water depths varying (5.8, 53.7) m. 41849 records macrofauna data set 103 stations. Sampling started 01-03-2001; last sample taken 31-05-1995. Taxonomy adjusted account rare taxa, determined high taxonomic level. sampled organisms belonged 400 different taxa (adjustment); adjustment 525 taxa distinguished. Biomass, expressed ash-free dry weight per square m ([gDWT/m2]), estimated similar taxonomic level density estimates. data monitoring campaigns available RWS; made available framework EMODNET biology project. Note database atypical sense sometimes station x sampling date x taxon can present multiple times. sometimes organisms taxon different sizes weighed separately, taxa later reclassified another taxon already available. One example double occurrence : example double occurrence MWTL dataset","code":"DOUBLE <- subset(MWTL$density,     subset=(station==\"TERHDE1\" & year==2018 & taxon == \"Donax vittatus\"))  knitr::kable(DOUBLE, caption = \"example of a double occurrence in the MWTL dataset\",              row.names=FALSE)"},{"path":"/articles/BtraitData.html","id":"the-nsbs-dataset","dir":"Articles","previous_headings":"The Northsea macrobenthos density data","what":"The NSBS dataset","title":"Benthic density and trait databases in R-package Btrait","text":"1986, large macrofauna survey took place covering entire Northsea (Heip et al., 1992). Benthic samples taken standardised way, regular grid covering whole North Sea, analysed scientists 10 laboratories. Extensive work done standardise taxonomy identifications across different laboratories. sampling region data extends inbetween (-3, 9) dg East (51, 60.75) dg North, depths varying inbetween (4.1999998, 195.1999969) m. 11150 records macrofauna data set 234 stations. Sampling took place 1986; actual sampling time recorded. sampled organisms belonged 552 different taxa. Biomass, expressed ash-free dry weight per square m ([gDWT/m2]), estimated low taxonomic level, distinguishing Polychaeta (class), Mollusca, Echinodermata, Crustacea (phylum) even higher level (Animalia). much lower resulution density estimates, biomass stored separate data.frame.","code":""},{"path":"/articles/BtraitData.html","id":"structure-of-the-density-data-sets","dir":"Articles","previous_headings":"The Northsea macrobenthos density data","what":"Structure of the density data sets","title":"Benthic density and trait databases in R-package Btrait","text":"density data gathered list called MWTL NSBS contains number data.frames: MWTL$density, NSBS$density, NSBS$biomass: species (taxon) density biomass data, long format. MWTL$density data.frame, provides stations, date, taxon, density (ind/m2) biomass (ashfree dry weight/m2). column “taxon.original” refers original taxon, “taxon” selected taxon ‘taxonomic adjustment’ (see help file, help(“MWTL$density”), taxa adjusted). Density biomass data separate dataframes NSBS data. MWTL$stations, NSBS$stations: coordinates stations referred MWTL$density NSBS$density, WGS84 format. MWTL$sediment, MWTL$abiotics, MWTL$types, NSBS$abiotics: abiotic conditions various sources (Wilson et al., 2018; MWTL, Deltares). MWTL$contours: bathymetric contour lines quick plotting data. Contours generated applying contourLines function base R (R core team 2021), based high-resolution GEBCO bathymetry data Northsea. taxonomic relationships taxa data.frame called Taxonomy, generated worms package (Holstein, 2018). positions names MWTL NSBS stations following figures, colors either denote area (MWTL) water depths (NSBS). data.frames, description attributes, can extracted function metadata.","code":"metadata(MWTL$density) ##             name                                description          units ## 1        station                               station name                ## 2           date                    sampling date, a string                ## 3          taxon taxon name, checked by worms, and adjusted                ## 4        density                      species total density individuals/m2 ## 5        biomass          species total ash-free dry weight       gAFDW/m2 ## 6 taxon.original                        original taxon name"},{"path":"/articles/BtraitData.html","id":"station-positions","dir":"Articles","previous_headings":"The Northsea macrobenthos density data","what":"Station positions","title":"Benthic density and trait databases in R-package Btrait","text":"use function mapBtrait generate figures station positions, passing respective contours dataset. R-function merge used augment data.frame types (contains area station belongs), longitudes (x) latitudes (y) stations data.frame.","code":"MWTLab   <- merge(MWTL$stations,                    MWTL$types, by=\"station\")  MWTLab$area <- factor(MWTLab$area)  par(las=1, oma=c(0,0,1,0), cex.axis=1.2, cex.main=2, cex.lab=1.2) with(MWTLab,    mapBtrait(contours=MWTL$contours, x=x, y=y, col=c(1:4)[area],              pch=c(15:18)[area], cex=2, main=\"MWTL station positions\",              clab=\"m\", draw.levels=TRUE)) with(MWTL$stations, text(x, y+0.05, label=station, cex=0.8, adj=0)) legend (\"bottomright\", legend=levels(MWTLab$area), col=1:4, pch=15:18, cex=2) NSBSabio <- merge(NSBS$stations, NSBS$abiotics, by=\"station\")  par(las=1, oma=c(0,0,1,0), cex.axis=1.2, cex.main=2, cex.lab=1.2) with(NSBSabio,    mapBtrait(contours=NSBS$contours, x=x, y=y, colvar=depth,              pch=16, cex=2, main=\"NSBS station positions\",              clab=\"m\", draw.levels=TRUE)) # remove the \"ICES\" from the station names with(NSBS$stations, text(x=x+0.05, y=y+0.08,       label=substr(station, 5, 7), cex=0.9, adj=0))"},{"path":"/articles/BtraitData.html","id":"consistency-of-the-density-databases","dir":"Articles","previous_headings":"The Northsea macrobenthos density data","what":"Consistency of the density databases","title":"Benthic density and trait databases in R-package Btrait","text":"test consistency data sets, looking total density, biomass, number taxa stations sampled common. find common stations, merge station information datasets, coordinates (x, y): stations common MWTL NSBS dataset test whether density, biomass number taxa comparable datasets, estimate quantities common stations plot versus one another, adding 1:1 line. biomass density data compatible. total number taxa found NSBS data set much lower MWTL data set, surprising, MWTL data sampled regular basis 19 years, whereas NSBS data gathered one-time event.  figures , maps total density number taxa created data sets.","code":"Common <- merge(MWTL$stations,                  NSBS$stations,                  by=c(\"x\", \"y\")) colnames(Common)[3:4] <- c(\"MWTL\", \"NSBS\") knitr::kable(Common, caption=\"stations in common by MWTL and NSBS dataset\",              row.names=FALSE) MWTL.summ <-  with (MWTL$density,      getSummary(descriptor  = station,                 averageOver = year,                 taxon       = taxon,                 value       = density))  NSBS.summ <-  with (NSBS$density,      getSummary(descriptor = station,                 taxon      = taxon,                 value      = density)) par(mfrow=c(2,2)) par(las=1, oma=c(1,1,1,1), cex.main=2)  with(merge(MWTL$stations, MWTL.summ$density, by=1),    mapBtrait(contours=MWTL$contours, x=x, y=y, colvar=density,              pch=18, cex=2, main=\"MWTL total density\",               clab=\"ind/m2\", draw.levels=TRUE)) with(merge(NSBS$stations, NSBS.summ$density, by=1),    mapBtrait(contours=NSBS$contours, x=x, y=y, colvar=density,              pch=18, cex=2, main=\"NSBS total density\",              clab=\"ind/m2\", draw.levels=TRUE))  with(merge(MWTL$stations, MWTL.summ$taxa, by=1),    mapBtrait(contours=MWTL$contours, x=x, y=y, colvar=taxa,              pch=18, cex=2, main=\"MWTL number of taxa\",              clab=\"/m2\", draw.levels=TRUE)) with(merge(NSBS$stations, NSBS.summ$taxa, by=1),    mapBtrait(contours=NSBS$contours, x=x, y=y, colvar=taxa,              pch=18, cex=2, main=\"NSBS number of taxa\",              clab=\"/m2\", draw.levels=TRUE))"},{"path":"/articles/BtraitData.html","id":"benthic-trait-databases","dir":"Articles","previous_headings":"","what":"Benthic trait databases","title":"Benthic density and trait databases in R-package Btrait","text":"Four benthic trait datasets included R-package Btrait: Beauchard et al. (2021, press) compiled 32 traits 281 taxa. traits comprise “functional effects” traits, affect ecosystem properties, “response” traits, affect species’ response changes environment, disturbance. traits fuzzy coded; taxonomic level mainly species level. extensive trait database called Traits_nioz. Clare et al (2022) compiled 10 traits 1025 taxa; mainly genus level. fuzzy coded traits Traits_cefas. Traits necessary estimate Bioturbation potential 1060 taxa compiled Queiros et al 2013; data extended data ilvo (courtesy Gert van Hoey). traits data set numerical traits, .e. value assigned reworking (Ri), mobility (Mi) feeding type (Fti) traits. Many traits recorded species level. traits Traits_Db. Traits necessary estimate Bio-irrigation potential (Wrede et al., 2018) derived nioz trait database; contains numeric values bottom traits (BT), injection depth (ID), feeding type (FT), 281 taxa. traits data set numerical traits, .e. value assigned . traits Traits_Irr.","code":""},{"path":"/articles/BtraitData.html","id":"species-groups","dir":"Articles","previous_headings":"Benthic trait databases","what":"Species groups","title":"Benthic density and trait databases in R-package Btrait","text":"data.frame Groups contains 11 typological species groups representing sea floor functions, derived cluster analysis species traits Beauchard et al. (press).","code":""},{"path":"/articles/BtraitData.html","id":"structure-of-the-trait-databases","dir":"Articles","previous_headings":"Benthic trait databases","what":"Structure of the trait databases","title":"Benthic density and trait databases in R-package Btrait","text":"trait information stored (\\(taxa \\times traits\\)) data.frame, first column represents taxon name, subsequent columns trait scores various trait modalities; column names represent trait modalities. example, first part NIOZ trait data : ET1.M1 shorthand modality 1 effect trait 1. trait database, meaning traits modalities explained attribute description data.frame, can extracted function metadata. first two rows description Traits_nioz: description attribute data.frame following columns: colname, trait, modality, indic, value, score units. Finding traits macrofauna taxa lot work, many taxa recorded benthos databases represented trait databases. respect northsea data sets (MWTL NSBS) instance, percentage taxa represented trait databases : Note low presence species cefas Trait dataset due fact dataset traits recorded genus level, MWTL NSBS datasets provide data mainly species level.","code":"head(Traits_nioz, n=c(3,3)) ##                   taxon ET1.M1 ET1.M2 ## 1          Abludomelita    0.5    0.5 ## 2 Abludomelita obtusata    0.5    0.5 ## 3             Abra alba    0.0    0.5 head(metadata(Traits_nioz), n=2) ##   colname                         trait modality indic value score units ## 1  ET1.M1 Substratum depth distribution        0     1   0.0  1.00    cm ## 2  ET1.M2 Substratum depth distribution      0-5     1   2.5  0.75    cm"},{"path":"/articles/BtraitData.html","id":"taxonomy","dir":"Articles","previous_headings":"Benthic trait databases","what":"Taxonomy","title":"Benthic density and trait databases in R-package Btrait","text":"taxonomic tree comprises taxonomic information taxa trait databases density databases included database Taxonomy. names taxa databases checked worms database, using R-package worms (Holstein, 2018).","code":""},{"path":"/articles/BtraitData.html","id":"consistency-of-the-trait-databases","dir":"Articles","previous_headings":"Benthic trait databases","what":"Consistency of the trait databases","title":"Benthic density and trait databases in R-package Btrait","text":"number traits present cefas nioz datasets; Body Length (nioz) Maximum size (cefas). Life span (nioz) Lifespan (cefas). Substratum depth distribution (nioz) Sediment position (cefas). trait datasets also record feeding type/feeding modes. data represented : CEFAS traits common NIOZ traits common traits cefas database now matched nioz database, function getTrait. species data nioz database calculated genus level, can compared cefas data. done passing taxonomic tree genus level. large number genera cefas database, traits found; removed (NA returned data). 1025 taxa cefas data set, traits 193 taxa calculated nioz data. data converted crisp format, merged crisp cefas data. feeding type nioz data feeding mode cefas extracted made consistent. CEFAS feeding types NIOZ feeding types consistency trait databases shown plotting deviation datasets. deviations close 0, showing datasets comparable. Comparison common traits nioz cefas database statistics deviations cefas nioz trait data","code":"cefas_select <- subset(metadata(Traits_cefas),       trait %in% c(\"Maximum size\", \"Lifespan\", \"Sediment position\")) nioz_select <- subset(metadata(Traits_nioz),       trait %in% c(\"Body length\", \"Life span\", \"Substratum depth distribution\"))  knitr::kable(cefas_select[,c(1,2,3,5,7)], caption=\"CEFAS traits in common\",              row.names=FALSE) knitr::kable(nioz_select [,c(1,2,3,5,7)], caption=\"NIOZ traits in common\",              row.names=FALSE) # Select nioz traits for the taxa in the cefas database TR_nioz <- getTrait(   taxon    = Traits_cefas$taxon,      trait    = Traits_nioz[,c(\"taxon\", nioz_select$colname)],   taxonomy = Taxonomy[,c(\"taxon\", \"genus\")]   ) TR_nioz <- na.omit(TR_nioz) TR_nioz <- TR_nioz[order(TR_nioz$taxon),] trnioz <- fuzzy2crisp(   trait       = TR_nioz,   trait.class = nioz_select$trait,   trait.score = nioz_select$value ) trcefas <- fuzzy2crisp(     trait       = Traits_cefas[,c(\"taxon\", cefas_select$colname)],   trait.class = cefas_select$trait,   trait.score = cefas_select$value ) trall <- merge(trnioz, trcefas, by=1) dim(trall) ## [1] 193   7 trall[1:2,] ##          taxon Body.length Life.span Substratum.depth.distribution Lifespan ## 1 Abludomelita         0.5       0.5                        1.2500      0.5 ## 2         Abra         2.0       2.0                        3.4375      2.0 ##   Maximum.size Sediment.position ## 1            5               0.0 ## 2           15               2.5"},{"path":[]},{"path":"/articles/BtraitData.html","id":"community-weighted-mean-cwm-of-mwtl-northsea-data-based-on-cefas-traits-","dir":"Articles","previous_headings":"Combining density and trait data","what":"Community Weighted Mean (CWM) of MWTL Northsea data based on cefas traits.","title":"Benthic density and trait databases in R-package Btrait","text":"Community Weighted Mean (CWM) traits estimated, based (stations x taxon density) (taxon x traits) matrix; use cefas data. function getTraitDensity, pass value modalities (trait.score) trait classes, average modality value calculated. also pass taxonomy table, traits unknown taxa generated, based taxonomic relationship. mean trait values per station plotted sediment position, maximum size lifespan. Community weighed trait values based MWTL density cefas trait data","code":"Tcefas.lab <- metadata(Traits_cefas)  MWTL.cwm <- getTraitDensity(                 descriptor  = MWTL$density$station,                  taxon       = MWTL$density$taxon,                  averageOver = MWTL$density$year,                 value       = MWTL$density$density,                   trait       = Traits_cefas,                  trait.class = Tcefas.lab$trait,                  trait.score = Tcefas.lab$value,                  taxonomy    = Taxonomy) Station.traits <- merge(MWTL$stations, MWTL.cwm, by=1) par(mfrow=c(1,2), mar=c(3,3,3,2), oma=c(2,2,0,0)) units          <-  rbind(unique(Tcefas.lab[,c(\"trait\", \"units\")])) units$colnames <- make.names(units$trait)  ii <- which(units$trait %in% c(\"Sediment position\", \"Lifespan\")) for (i in ii)  mapBtrait(x=Station.traits$x, y=Station.traits$y, contours=MWTL$contours,       colvar= Station.traits[,units$colnames[i]],        cex=2, clab=units[i,2], main=units[i,1], pch=18)"},{"path":"/articles/BtraitData.html","id":"estimating-the-bioturbation-and-bio-irrigation-potential","dir":"Articles","previous_headings":"Combining density and trait data","what":"Estimating the bioturbation and bio-irrigation potential","title":"Benthic density and trait databases in R-package Btrait","text":"use data Dutch part Northsea, 1995, estimate bioturbation potential index sensu Solan et al., 2004 Queiros et al., 2013. contribution species, \\(\\) bioturbation potential (\\(BPc\\)) based mean individual weight (\\(W_i\\)), abundance (\\(A_i\\)), mobility (\\(M_i\\)) sediment reworking mode (\\(R_i\\)); station BPc simply sum species bioturbation potential. \\[BPc = \\sum_i \\sqrt{W_i} \\times A_i \\times M_i \\times R_i\\] Mobility scales, \\(M_i\\) value \\(1\\) organisms living fixed tube, \\(2\\) indicates limited movement; \\(3\\) indicates slow, free movement sediment matrix; \\(4\\) indicates free movement, via burrow system. sediment reworking (\\(R_i\\)) takes value \\(1\\) epifauna bioturbate sediment–water interface, \\(2\\) surficial modifiers; \\(3\\) upward downward conveyors; \\(4\\) biodiffusors; \\(5\\) regenerators excavate holes, transferring sediment depth surface. contribution species, \\(\\) bio-irrigation potential (\\(IPc\\)) (sensu Wrede et al., 2018.), based mean individual weight (\\(W_i\\)), abundance (\\(A_i\\)), burrow type (\\(BT_i\\)), feeding TYPE (\\(FT_i\\)) depth injection pocket, centimeter (\\(ID_i\\)); station \\(IPc\\) simply sum species bio-irrigation potential. \\[IPc = \\sum_i {W_i}^{3/4} \\times A_i \\times BT_i \\times FT_i \\times ID_i\\] Scores burrowtype, \\(BT_i\\) \\(1\\) epifauna, species internal irrigation (e.g. using siphons), \\(2\\) open irrigation (e.g. U- Y- shaped burrows), \\(3\\) blind ended irrigation (e.g. blind ended burrows, burrow systems). Scores feeding types, \\(FT_i\\) \\(1\\) surface filter feeders, \\(2\\) predators, \\(3\\) deposit feeders \\(4\\) sub surface filter feeders. Injection pockets, \\(IP_i\\), depths 0-2, 2-5, 5-10 >10 cm depth get ID score \\(1\\), \\(2\\), \\(3\\) \\(4\\) respectively. bioturbation index can easily estimated function getDbIndex, database Traits_Db. bioirrigation index can estimated function getIrrIndex, database Traits_Irr. MWTL taxa represented Traits_Db Traits_irr, use information closely related species nearest taxonomic level, also provide values taxa represented. suffices pass taxonomic information function getDbIndex getIrrIndex achieve . functions return total bioturbation bioirrigation index stations, average BPc IPC taxa. code , first Northsea data selected; select data 1995 . bioturbation bioirrigation index estimated based data. functions return list several data.frames: descriptor gives total BPc IPc value descriptor stations. taxon gives average BPc IPc value taxa 10 stations largest bioturbation potential 10 taxa average largest bioturbation potential 10 stations largest bioirrigation potential 10 taxa average largest bioirrigation potential one taxon bioturbation trait derived, 3 taxa bio-irrigation calculated adding coordinates station, (present MWTL$stations), map can generated, BPc IPc used color dots.","code":"MWTL1995 <- with (MWTL$density,       getDensity(descriptor = list(station=station),                 subset     = (year == 1995),                 taxon      = taxon,                 value      = data.frame(density, biomass)))   MWTLDb <- with(MWTL1995,    getDbIndex (descriptor = station,                taxon      = taxon,                density    = density,                biomass    = biomass,                trait      = Traits_Db,                taxonomy   = Taxonomy))  MWTLIrr <- with(MWTL1995,    getIrrIndex(descriptor = station,                taxon      = taxon,                density    = density,                biomass    = biomass,                trait      = Traits_irr,                taxonomy   = Taxonomy)) MWTLbpc            <- MWTLDb$descriptor row.names(MWTLbpc) <- NULL knitr::kable(head(MWTLbpc[order(MWTLbpc$BPc, decreasing=TRUE),], n=10),              caption=\"10 stations with largest bioturbation potential\",              row.names=FALSE) TAXbpc             <- MWTLDb$taxon row.names(TAXbpc)  <- NULL knitr::kable(head(TAXbpc[order(TAXbpc$BPc, decreasing=TRUE),], n=10),              caption=\"10 taxa with average largest bioturbation potential\",              row.names=FALSE) MWTLipc            <- MWTLIrr$descriptor row.names(MWTLipc) <- NULL knitr::kable(head(MWTLipc[order(MWTLipc$IPc, decreasing=TRUE),], n=10),              caption=\"10 stations with largest bioirrigation potential\",              row.names=FALSE) TAXipc             <- MWTLIrr$taxon row.names(TAXipc)  <- NULL knitr::kable(head(TAXipc[order(TAXipc$IPc, decreasing=TRUE),], n=10),              caption=\"10 taxa with average largest bioirrigation potential\",              row.names=FALSE) attributes(MWTLDb )$notrait ## [1] \"Entoprocta\" attributes(MWTLIrr)$notrait ## [1] \"Nemertea\"        \"Platyhelminthes\" \"Entoprocta\" par(mfrow=c(1,2)) BPCMWTL <- merge(MWTL$stations,                   MWTLbpc      ,                   by          = 1) IPCMWTL <- merge(MWTL$stations,                   MWTLipc      ,                   by          = 1) with (BPCMWTL,    mapBtrait(x=x, y=y, colvar=BPc, cex=2, main=\"BPc for 1995\",             pch=18, contours=MWTL$contours, draw.levels=TRUE)) with (IPCMWTL,    mapBtrait(x=x, y=y, colvar=IPc, cex=2, main=\"IPc for 1995\",             pch=18, contours=MWTL$contours, draw.levels=TRUE))"},{"path":[]},{"path":"/articles/BtraitData.html","id":"r-packages-and-data-sources","dir":"Articles","previous_headings":"References","what":"R-packages and data sources","title":"Benthic density and trait databases in R-package Btrait","text":"R Core Team (2022). R: Language Environment Statistical Computing. R Foundation Statistical Computing, Vienna, Austria. https://www.R-project.org/. Soetaert K (2021). plot3D: Plotting Multi-Dimensional Data. R package version 1.4, https://CRAN.R-project.org/package=plot3D. Soetaert K, Beauchard O (2023). Btrait: Working Biological density, taxonomy, trait composition data. R package version 0.0.0. Holstein Jan (2018). worms: Retrieving Aphia Information World Register Marine Species. R package version 0.2.2. https://CRAN.R-project.org/package=worms EMODnet Biology (2022) Full Occurrence Data Parameters downloaded EMODnet Biology project, consulted 2022-08-05. Beauchard O, Brind’Amour , Schratzberger M, Laffargue P, Hintzen NT, Somerfield PJ, Piet G (2021) generic approach develop trait-based indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52. https://doi.org/10.3354/meps13840 Olivier Beauchard, Kari Elsa Ellingsen, Murray S.. Thompson, Gerjan Piet, Pascal Laffargue, Karline Soetaert, press. Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Series Clare, David S. / Bolam, Stefan G. / McIlwaine, Paul S.O. / Garcia, Clement / Murray, Joanna M. / Eggleton, Jacqueline D. (2022). Ten key biological traits marine benthic invertebrates surveyed Northwest Europe. Cefas, UK. V2. doi: https://doi.org/10.14466/CefasDataHub.123 Heip, C.H.R.; Basford, D.; Craeymeersch, J..; Dewarumez, J.-M.; Dorjes, J.; de Wilde, P.; Duineveld, G.; Eleftheriou, .; Herman, P.M.J.; Kingston, K.; Niermann, U.; Kunitzer, .; Rachor, E.; Rumohr, H.; Soetaert, K.; Soltwedel, T. (1992). Trends biomass, density diversity North Sea macrofauna. ICES J. Mar. Sci./J. Cons. int. Explor. Mer 49: 13-22 L. Leewis, E.C. Verduin, R. Stolk, 2017. Eurofins AquaSense Macrozoobenthosonderzoek de Rijkswateren met boxcorer, jaarrapportage MWTL 2015 : waterlichaam: Noordzee. Publicatiedatum: 31-03-2017, 75 p. Projectnummer Eurofins AquaSense: J00002105, Revisie 2; opdracht van Ministerie van Infrastructuur en Milieu, Rijkswaterstaat Centrale Informatievoorziening (RWS, CIV) Queiros, Ana M., Silvana N. R. Birchenough, Julie Bremner, Jasmin . Godbold, Ruth E. Parker, Alicia Romero-Ramirez, Henning Reiss, Martin Solan, Paul J. Somerfield, Carl Van Colen, Gert Van Hoey, Stephen Widdicombe, 2013. bioturbation classification European marine infaunal invertebrates. Ecology Evolution 3 (11), 3958-3985 Solan M, Cardinale BJ, Downing AL, Engelhardt KAM, Ruesink JL, Srivastava DS. 2004. Extinction ecosystem function marine benthos. Science 306:1177–80. Wilson, R. J., Speirs, D. C., Sabatino, ., Heath, M. R. (2018). synthetic map north-west European Shelf sedimentary environment applications marine science. Earth Sys. Sci. Data 10, 109–130. doi: 10.5194/essd-10-109-2018 . Wrede, J.Beermann, J.Dannheim, L.Gutow, T.Brey, 2018. Organism functional traits ecosystem supporting services – novel approach predict bioirrigation. Ecological indicators, 91, 737-743.","code":""},{"path":[]},{"path":"/articles/BtraitData.html","id":"description-of-the-mwtl-dataset","dir":"Articles","previous_headings":"Appendix","what":"Description of the MWTL dataset","title":"Benthic density and trait databases in R-package Btrait","text":"contents data.frame ‘stations’ MWTL data contents data.frame ‘density’ MWTL data contents data.frame ‘abiotics’ MWTL data contents data.frame ‘sediment’ MWTL data contents data.frame ‘fishing’ MWTL data","code":""},{"path":"/articles/BtraitData.html","id":"description-of-the-nsbs-dataset","dir":"Articles","previous_headings":"Appendix","what":"Description of the NSBS dataset","title":"Benthic density and trait databases in R-package Btrait","text":"contents data.frame ‘stations’ NSBS data contents data.frame ‘density’ NSBS data contents data.frame ‘abiotics’ NSBS data contents data.frame ‘fishing’ NSBS data","code":""},{"path":"/articles/BtraitData.html","id":"traits-and-modalities-in-the-nioz-database-traits","dir":"Articles","previous_headings":"Appendix","what":"Traits and modalities in the NIOZ database Traits","title":"Benthic density and trait databases in R-package Btrait","text":"Effect traits, modalities, values scores NIOZ database Response traits, modalities, values scores NIOZ database","code":""},{"path":"/articles/BtraitData.html","id":"traits-and-modalities-in-the-cefas-database-traits_cefas","dir":"Articles","previous_headings":"Appendix","what":"Traits and modalities in the CEFAS database Traits_cefas","title":"Benthic density and trait databases in R-package Btrait","text":"Effect traits, modalities, values scores Traits_cefas","code":""},{"path":"/articles/BtraitData.html","id":"traits-and-modalities-in-the-bioturbation-database-traits_db","dir":"Articles","previous_headings":"Appendix","what":"Traits and modalities in the bioturbation database Traits_Db","title":"Benthic density and trait databases in R-package Btrait","text":"Effect traits, modalities, values scores Traits_Db","code":""},{"path":"/articles/BtraitData.html","id":"traits-and-modalities-in-the-bioirrigation-database-traits_irr","dir":"Articles","previous_headings":"Appendix","what":"Traits and modalities in the bioirrigation database Traits_irr","title":"Benthic density and trait databases in R-package Btrait","text":"Effect traits, modalities, values scores Traits_irr","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karline Soetaert. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Soetaert K, Beauchard O (2023). Btrait: Working Biological density, taxonomy, trait composition data. R package version 0.0.0.","code":"@Manual{,   title = {Btrait: Working with Biological density, taxonomy, and trait composition data},   author = {Karline Soetaert and Olivier Beauchard},   year = {2023},   note = {R package version 0.0.0}, }"},{"path":"/index.html","id":"btrait-working-with-biological-data-and-trait-information","dir":"","previous_headings":"","what":"Working with Biological density, taxonomy, and trait composition data","title":"Working with Biological density, taxonomy, and trait composition data","text":"Btrait R-package facilitates working species density data, combined species traits R.  Apart several R-functions, also contains: Several species density data sets (northsea macrobenthos) Several trait databases (macrobenthos) interactive shiny visualise data","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Working with Biological density, taxonomy, and trait composition data","text":"installing Btrait package, need first install following R-packages dependencies: plot3D, simple plotting functions; shinydashboard, shiny, interactive visualisation tool; devtools, required seamless installation Btrait package github repository. creation, made use R-package worms, taxonomic relationships; packages installed, type following command R-console install Btrait package: , type require(Btrait) R-console load package R. ’s ! step, able use package. may want try interactive tool. can triggered :","code":"devtools::install_github(\"EMODnet/Btrait\", depend=TRUE) webMWTL()"},{"path":"/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Working with Biological density, taxonomy, and trait composition data","text":"R-package, can get extra help entering ?Btrait R console. two vignettes package, can triggered vignette(\"Btrait\") vignette(\"BtraitData\") R console.","code":""},{"path":"/index.html","id":"uninstall","dir":"","previous_headings":"","what":"Uninstall","title":"Working with Biological density, taxonomy, and trait composition data","text":"uninstall Btrait package, locate “Packages” tab Rstudio, click encircled “x” button (“Remove package”) right margin. uninstall package manually, type following command R-console (version library may differ, assume 4.1): Windows users: Linux users: Last updates: 2023-02-18","code":"remove.packages(\"Btrait\", lib=\"~/R/win-library/4.1\") remove.packages(\"Btrait\", lib=\"~/R/x86_64-pc-linux-gnu-library/4.1\")"},{"path":"/reference/Bgroupdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Benthic typological groups — Benthic typology data","title":"Benthic typological groups — Benthic typology data","text":"Macrofauna main typological groups.","code":""},{"path":"/reference/Bgroupdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Benthic typological groups — Benthic typology data","text":"**Groups** contains 11 typological species groups representing sea floor functions, derived cluster analysis species traits Beauchard et al. (submitted). Epi3D, Epibenthic 3D, Builders large complex 3D-structures sediment; high biodeposition ability. Foul, Small fouling species various substrata, barnacles epibenthic tube builders; can create extended organic mats; high biodeposition ability Neutral, species deprived ability alter sediments; also characteristic biodeposition; also slowly mobile species hard substrata ShalShel, Shallow shell, mostly sub-sediment surface buried bivalves; dominantly biodiffusors, shell providers; low high biodepositors SurfDiff, Surficial biodiffusors, variable degrees burying ability; specific attribute SmalTub, Small tube dweller; mostly superficial tubicolous occurring wide lawns tubes tube protrusions ; commonly biostabilisers, advectors (downward upward conveying, moderate ventilation ability, degree biodeposition DeepTub, Deep tube dweller; similar smalTub, les tubicolous burrow dwellers (- J-shaped), deeper burrowers; higher ventilation ability MinBiot, Minor bioturbator, larger less sedentary, deeper burrowing ability DeepTub; mostly advectors SesBio, Sessile bioturbator, deep burrowing ability, great bioirrigation potential due wider burrow MajBiot, Major bioturbator, deep burrowing, mobile non-shelly; diffusive mixing Deep3D, Deepest burrowers, long term burrows, high level sediment mixing irrigation Explanation contents given attribute description (use metadata(Groups) derive )","code":""},{"path":"/reference/Bgroupdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Benthic typological groups — Benthic typology data","text":"See Beauchard et al., subm.","code":""},{"path":"/reference/Bgroupdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Benthic typological groups — Benthic typology data","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":"/reference/Bgroupdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Benthic typological groups — Benthic typology data","text":"species typology described following manuscript: Olivier Beauchard, Kari Elsa Ellingsen, Murray S.. Thompson, Gerjan Piet,  Pascal Laffargue, Karline Soetaert, subm.  Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Series","code":""},{"path":[]},{"path":"/reference/Bgroupdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benthic typological groups — Benthic typology data","text":"","code":"##----------------------------------------------------- ## Show content ##-----------------------------------------------------  NSt <- metadata(Groups) NSt #>    typology         description #> 1     Epi3D       Epibenthic 3D #> 2      Foul              Fouler #> 3   Neutral             Neutral #> 4  ShalShel       Shallow shell #> 5  SurfDiff  Surficial diffusor #> 6   SmalTub  Small tube dweller #> 7   DeepTub   Deep tube dweller #> 8   MinBiot   Minor bioturbator #> 9   SesBiot Sessile bioturbator #> 10  MajBiot   Major bioturbator #> 11   Deep3D    Deep 3D burrower  ##----------------------------------------------------- ## 10 most commonly found organisms per group ##-----------------------------------------------------  MWTL.groups <- merge(MWTL$density, Groups)  for (i in 1:nrow(NSt)){    NSdta <- subset(MWTL.groups,                    subset= (typology == NSt[i,1]))      st    <- sort(table(NSdta$taxon), decreasing=TRUE)      cat(NSt[i,2], \" : \",       paste(names(st)[1:min(10, length(st))],             deparse=\", \", sep=\"\"), \"\\n\\n\") } #> Epibenthic 3D  :  Modiolus,  Mytilus edulis,  Sabella spallanzanii,   #>  #> Fouler  :  Monocorophium insidiosum,  Photis longicaudata,  Thecostraca,  Jassa marmorata,  Spirobranchus triqueter,   #>  #> Neutral  :  Electra pilosa,  Cucumaria,  Astarte montagui,  Myrianida,  Musculus,  Sphenia binghami,   #>  #> Shallow shell  :  Kurtiella bidentata,  Euspira nitida,  Tellimya ferruginosa,  Fabulina fabula,  Nucula nitidosa,  Varicorbula gibba,  Abra alba,  Chamelea striatula,  Phaxas pellucidus,  Ensis leei,   #>  #> Surficial diffusor  :  Bathyporeia elegans,  Urothoe poseidonis,  Ophiura,  Harpinia antennaria,  Bathyporeia guilliamsoniana,  Pseudocuma (Pseudocuma) longicorne,  Pholoe minuta,  Oxydromus flexuosus,  Urothoe brevicornis,  Megaluropus agilis,   #>  #> Small tube dweller  :  Spiophanes bombyx,  Spio filicornis,  Owenia,  Ampelisca tenuicornis,  Ampelisca brevicornis,  Prionospio,  Polydora,  Spio goniocephala,  Spio martinensis,  Spio decorata,   #>  #> Deep tube dweller  :  Phoronis,  Lanice conchilega,  Lagis koreni,  Capitella capitata,  Galathowenia oculata,  Heteromastus filiformis,  Ampharete,  Corophium,  Thelepus cincinnatus,   #>  #> Minor bioturbator  :  Magelona,  Goniada maculata,  Chaetozone setosa,  Poecilochaetus serpens,  Lumbrineris,  Scolelepis bonnieri,  Mediomastus fragilis,  Aonides paucibranchiata,  Terebellides,  Tharyx,   #>  #> Sessile bioturbator  :  Amphiura filiformis,  Thracia phaseolina,  Thyasira flexuosa,  Chaetopterus variopedatus,  Acrocnida brachiata,  Paraonis fulgens,  Macoma balthica,  Amphiura chiajei,  Turritellinella tricarinata,  Lucinoma borealis,   #>  #> Major bioturbator  :  Nephtys,  Echinocardium,  Scoloplos armiger,  Notomastus latericeus,  Sigalion mathildae,  Glycera,  Scolelepis (Scolelepis) squamata,  Scalibregma inflatum,  Brissopsis lyrifera,  Scoletoma fragilis,   #>  #> Deep 3D burrower  :  Callianassa,  Upogebia deltaura,  Gilvossius tyrrhenus,  Upogebia stellata,  Nephrops norvegicus,  Arenicola,   #>   ##----------------------------------------------------- ## Distribution of deep 3D burrowers ##-----------------------------------------------------  Data <- with (MWTL.groups,              long2wide(row         = station,                        column      = typology,                        value       = density,                       averageOver = year,                        subset      = (typology==\"Deep3D\"))) head(Data) #>   descriptor      Deep3D #> 1  BREEVTN02 148.3954457 #> 2  BREEVTN03   2.2116053 #> 3  BREEVTN04   1.3495277 #> 4  BREEVTN05   0.7684211 #> 5  BREEVTN06   0.6747632 #> 6  BREEVTN07   0.6747638 Data.st <- merge(MWTL$stations, Data, by.x=\"station\", by.y=\"descriptor\")  with (Data.st, mapBtrait(x=x, y=y, colvar=Deep3D, main=\"deep 3D\",                           clab=\"ind/m2\", log=\"c\"))"},{"path":"/reference/Btrait.html","id":null,"dir":"Reference","previous_headings":"","what":"Benthic fauna and trait characteristics — Btrait-package","title":"Benthic fauna and trait characteristics — Btrait-package","text":"Trait-based analyses macrofauna data.","code":""},{"path":"/reference/Btrait.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Benthic fauna and trait characteristics — Btrait-package","text":"Karline Soetaert, Olivier Beauchard, Anna van der Kaaden","code":""},{"path":"/reference/Btrait.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Benthic fauna and trait characteristics — Btrait-package","text":"trait databases: Beauchard O, Brind Amour , Schratzberger M, Laffargue P, Hintzen NT,  Somerfield PJ, Piet G (2021) generic approach develop trait-based  indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52.  https://doi.org/10.3354/meps13840 Olivier Beauchard, Kari Elsa Ellingsen, Murray S.. Thompson, Gerjan Piet,  Pascal Laffargue, Karline Soetaert, subm.  Assessing sea floor functional diversity vulnerability. Marine Ecology Progress Series density data sets: Heip, C.H.R.; Basford, D.; Craeymeersch, J..; Dewarumez, J.-M.; Dorjes, J.; de Wilde, P.; Duineveld, G.; Eleftheriou, .; Herman, P.M.J.; Kingston, K.; Niermann, U.; Kunitzer, .; Rachor, E.; Rumohr, H.; Soetaert, K.; Soltwedel, T. (1992). Trends biomass, density diversity North Sea macrofauna. ICES J. Mar. Sci./J. Cons. int. Explor. Mer 49: 13-22 L. Leewis, E.C. Verduin, R. Stolk ; Eurofins AquaSense Macrozoobenthosonderzoek de Rijkswateren met boxcorer, jaarrapportage MWTL 2015 : waterlichaam: Noordzee. ublicatiedatum:\t31-03-201775 p. Projectnummer Eurofins AquaSense: J00002105. Revisie 2, opdracht van Ministerie van Infrastructuur en Milieu, Rijkswaterstaat Centrale Informatievoorziening (RWS, CIV)","code":""},{"path":"/reference/Btrait.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benthic fauna and trait characteristics — Btrait-package","text":"","code":"if (FALSE) {   Bweb()   # an interactive application }"},{"path":"/reference/Btraitdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","title":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","text":"Macrofauna species trait information datasets.  Traits_nioz: 32 effect response traits benthic macrofauna (Beauchard et al, 2021) Traits_cefas: 10 effect response traist benthic macrofauna (Clare et al, 2022) Traits_Db: traits estimate bioturbation potential index (Queiros et al., 2013) Traits_irr: traits estimate bioirrigation potential index (Wrede et al., 2018) Taxonomy: taxonomic information taxa trait density datasets","code":""},{"path":"/reference/Btraitdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","text":"**Traits_nioz** contains 15 effect 15 response traits 281 macrobenthos taxa (Beauchard et al., 2021), mainly species level. Traits fuzzy coded, .e. modalities can range inbetween 0 1, taxon can attributed score several modalities. Within trait, taxon, scores sum 1. **Traits_cefas** contains 10 traits 1025 macrobenthos taxa (Beauchard et al., 2021), mainly genus level. Traits fuzzy coded. **Traits_Db** traits 1094 macrobenthos taxa (Queiros et al., 2013), mainly species level. original 1032 traits amended additional species (Ilvo - courtesy Gert van Hoey). **Traits_irr** traits 281 macrobenthos taxa, necessary estimate irrigation potential index Wrede et al., 2018. information derived Traits_nioz dataset (see last example). **Taxonomy** taxonomic information taxa, derived WoRMS.","code":""},{"path":"/reference/Btraitdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","text":"Dataset Taxonomy data.frame column names taxon, genus, family, order, class, phylum AphiaID. Dataset Traits_nioz data.frame column names taxon, ET1.M1, ET1.M2, ... RT10.M3, RT10.M4; latter trait modalities, e.g. RT10.M4 modality 4 response trait 10. Dataset Traits_cefas data.frame column names taxon, sr_Less_than_10, sr_11_to_20, sr_21_to_100, sr_101_to_200, ... b_Downward_conveyer, b_None. Dataset Traits_Db data.frame column names taxon, Ri, Mi Fti source. trait datasets data.frame called description attributes explains meaning traits, modalities units, value score.  score number 0 1, representing vulnerability taxon perturbations response traits, relate complexity size effect traits. motility: score 0 (sessile) 1 (swimmer) given;  higher score, mobile taxon.   value represents average value modality class. unitless modalities, equal score. metadata(Traits_nioz), metadata(Traits_cefas), metadata(Traits_Db), extract desciption databases; attributes(Traits_nioz)$origin, attributes(Traits_cefas)$origin, attributes(Traits_Db)$origin, show source data. *** nioz trait database*** , Traits_nioz (Beauchard et al., 2021), following effect traits included: Substratum depth distribution ET1.Mx, cm, 5 modalities, 0 cm (ET1.M1), 0-5 cm (ET1.M2), 5-15 cm (ET1.M3), 15-30 cm(ET1.M4), >30 cm (ET1.M5) Biodiffusion ET2.Mx, random dispersion sediment particles organisms; 3 modalities: Null, (ET2.M1), Low (ET2.M2) High  (ET2.M3). Downward conveying ET3.Mx, downward displacement sediment particles (including faeces production); 3 modalities: Null, (ET3.M1), Low (ET3.M2) High  (ET3.M3). Upward conveying ET4.Mx, upward displacement sediment particles, mostly burrying; 3 modalities: Null, (ET4.M1), Low (ET4.M2) High  (ET4.M3). Regeneration ET5.Mx, instantaneous -downward particle displacement, usually done crabs; 3 modalities: Null, (ET5.M1), Low (ET5.M2) High  (ET5.M3). Biodeposition ET6.Mx, pelagic-benthic sediment transfer suspension feeding; 3 modalities: Null, (ET6.M1), Low (ET6.M2) High  (ET6.M3). Bioerosion ET7.Mx, degradation animal secretion; 3 modalities: Null, (ET7.M1), Low (ET7.M2) High  (ET7.M3). Biostabilisation ET8.Mx, activity mitigates sediment erodability hydrological modulation (zoic tubes, mounds reefs); 3 modalities: Null, (ET8.M1), Low (ET8.M2) High  (ET8.M3). Ventilation/Pumping ET9.Mx, generation water fluxes substrate body appendix undulation; leads bioirrigation combined burrows endo-3D structure depth; 3 modalities: Null, (ET9.M1), Low (ET9.M2) High  (ET9.M3). Burrow width ET10.Mx; 4 modalities: None,  0 mm (ET10.M1), Narrow <5mm (ET10.M2), Intermediate 5-10mm (ET10.M3) Wide >10mm  (ET10.M4). Endo-3D structure type ET11.Mx; 7 modalities: None (ET11.M1), Chimney/Funnel  (ET11.M2), Tube (ET11.M3), IJ-shaped burrow (ET11.M4), UY-shaped burrow  (ET11.M5), Branched burrow (ET11.M6) Anastomosed burrow (ET11.M7). chimney/funnel respiratory function, tube constructed organic mineral material, UY-shaped differs IJ shaped enhancing water flux bioturbation; similar anastomosed branched burrows (generally deep structures); Endo-3D structure depth ET12.Mx, endobenthic vertical effect size (semi- permanent burrows), cm; 5 modalities: None (ET12.M1), 0-5 cm (ET12.M2), 5-15 cm (ET12.M3), 15-30 cm (ET12.M4), >30 cm (ET12.M5) Epi-3D structure type ET13.Mx, type epibenthic structure, top sediment; 7 modalities: None (ET13.M1), Mat (ET13.M2), Mound (ET13.M3), Tube/Tubular protrusion (ET13.M4), Shell (ET13.M5), Stalk/Feather (ET13.M6), Protuberance (ET13.M7) Epi-3D structure extensions ET14.xx, type epibenthic structure aggregations; 5 modalities: None (ET14.M1), Isolated/Clumped (ET14.M2), Mat/Lawn (ET14.M3), Simple reef (ET14.M4), Complex reef (ET14.M5) **response traits** modalities :  Body mass RT1.Mx, gram ash free dry weight (gADWt); 6 modalities: <0.001  gADWt (RT1.M1), 0.001-0.010 gADWt (RT1.M2), 0.010-0.100 gADWt (RT1.M3), 0.100-1.000 gADWt (RT1.M4), 1.000-10.000 gADWt (RT1.M5), >10.000 gADWt (RT1.M6) Body length RT2.Mx, cm; 5 modalities: <1  cm (RT2.M1), 1-3 cm (RT2.M2), 3-10 cm (RT2.M3), 10-20  cm  (RT2.M4), 20-50  cm (RT2.M5) Body resistance RT3.Mx; 5 modalities: low (RT3.M1), Low  (RT3.M2), Intermediate  (RT3.M3),      High (RT3.M4), high (RT3.M5) Motility RT4.Mx, 4 modalities: Sessile (RT4.M1), Tubicolous (RT4.M2), Crawler (RT4.M3), Swimmer (RT4.M4) Burrowing/Sheltering depth RT5.Mx, 4 modalities: 0 cm  (RT5.M1), 0-5 cm (RT5.M2), 5-15 cm (RT5.M3), >15 cm (RT5.M4) Feeding type RT6.Mx; 4 modalities: Deposit feeder (RT6.M1), Suspension feeder (RT6.M2), Herbivore/Grazer (RT6.M3), Carnivore/Scavenger (RT6.M4) Life span RT7.Mx, time necessary achieve life cycle least one reproductive success ensured, years; 5 modalities: < 1 yr (RT7.M1), 1-3 yr (RT7.M2), 3-10  yr (RT7.M3), 10-20 yr (RT7.M4), >20 yr (RT7.M5) Age maturity RT8.Mx, time reproductive successs can expected, years; 3 modalities: <1  yr (RT8.M1), 1-3 yr (RT8.M2), 3-5 yr (RT8.M3) Offspring type RT12.Mx; 3 modalities: Egg  (RT12.M1), Larva (RT12.M2), Juvenile (RT12.M3) Offspring size RT13.Mx, mm; 4 modalities: <0.1 mm (RT13.M1),0.1-0.5 mm (RT13.M2), 0.5-1.5 mm (RT13.M3), 1.5-5 mm (RT13.M4). *** cefas trait database*** , Traits_cefas (Clare et al., 2022), following traits included: Maximum size, maximum size (mm) taxon known reach adult stage, sr_x, mm, 5 modalities: sr_Less_than_10, sr_11_to_20, sr_21_to_100, sr_101_to_200, sr_201_to_500,     sr_More_than_500 Morphology m_xx 6 modalities: m_Soft, m_Tunic , m_Exoskeleton, m_Crustose, m_Cushion, m_Stalked Lifespan, maximum reported lifespan (years) adult stage, l_xx, 4 modalities: l_Less_than_1, l_1_to_3, l_3_to_10, l_More_than_10 Egg development location, ed_xx, 4 modalities: ed_Asexual, ed_Sexual_pelagic, ed_Sexual_benthic, ed_Sexual_brooded Larva development location, ld_xx, 3 modalities: ld_Pelagic_planktotrophic, ld_Pelagic_lecithotrophic, ld_Benthic_direct Living habit, lh_xx, 5 modalities: lh_Burrow_dwelling, lh_Free_living, lh_Crevice_hole_under_stones, lh_Epi_endo_biotic , lh_Attached_to_substratum Sediment position, sp_xx, 4 modalities: sp_Surface, sp_Shallow_infauna_0_to_5cm, sp_Mid_depth_infauna_5_to_10cm, sp_Deep_infauna_more_than_10cm Feeding mode, f_xx, 6 modalities: f_Suspension, f_Surface_deposit, f_Subsurface_deposit, f_Scavenger, f_Predator, f_Parasite Mobility, mob_xx, 4 modalities: mob_Sessile, mob_Swim, mob_Crawl_creep_climb, mob_Burrower Bioturbation mode, b_xx, 5 modalities: b_Diffusive_mixing, b_Surface_deposition, b_Upward_conveyor, b_Downward_conveyer, b_None *** bioturbation trait database*** , Traits_Db (Queiros et al., 2013), contains *Mi* *Ri* scores, well reworking types (*Fti*) necessary estimate bioturbation potential index. meaning :  Mi, mobility scores: 1 organisms live fixed tubes; 2 indicates limited movement; 3 indicates slow, free movement sediment matrix; 4 indicates free movement, , via burrow system. Ri, reworking scores: 1 epifauna; 2 surficial modifiers; 3 upward downward conveyors; 4 biodiffusors; 5 regenerators. Fti, reworking types: E epifauna; S surficial modifiers; UC upward conveyors; DC downward conveyors; B biodiffusors; R regenerators.","code":""},{"path":"/reference/Btraitdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":"/reference/Btraitdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","text":"NIOZ trait database described following paper: Beauchard O, Brind'Amour , Schratzberger M, Laffargue P, Hintzen NT, Somerfield PJ, Piet G (2021) generic approach develop trait-based indicator trawling-induced disturbance. Mar Ecol Prog Ser 675:35-52. https://doi.org/10.3354/meps13840 CEFAS trait dataset: Clare, David S. Bolam, Stefan G. McIlwaine, Paul S.O. Garcia, Clement Murray, Joanna M. Eggleton, Jacqueline D.  (2022). Ten key biological traits marine benthic invertebrates surveyed Northwest Europe. Cefas, UK. V2. doi: https://doi.org/10.14466/CefasDataHub.123 bioturbation data: Ana M. Queiros, Silvana N. R. Birchenough, Julie Bremner, Jasmin . Godbold, Ruth E. Parker, Alicia Romero-Ramirez, Henning Reiss, Martin Solan, Paul J. Somerfield, Carl Van Colen, Gert Van Hoey, Stephen Widdicombe, 2013.  bioturbation classification European marine infaunal invertebrates. Ecology Evolution 3 (11), 3958-3985 bioirrigation traits: . Wrede, J.Beermann, J.Dannheim, L.Gutow, T.Brey, 2018. Organism functional traits ecosystem supporting services - novel approach predict bioirrigation. Ecological indicators, 91, 737-743.","code":""},{"path":[]},{"path":"/reference/Btraitdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benthic effect and response trait characteristics, and taxonomy. — Benthic trait data","text":"","code":"##----------------------------------------------------- ## Show contents of the trait data sets - NIOZ data ##-----------------------------------------------------  traits.lab <- attributes(Traits_nioz)$description  head  (traits.lab) #>   colname                         trait modality indic value score units #> 1  ET1.M1 Substratum depth distribution        0     1   0.0  1.00    cm #> 2  ET1.M2 Substratum depth distribution      0-5     1   2.5  0.75    cm #> 3  ET1.M3 Substratum depth distribution     5-15     1  10.0  0.50    cm #> 4  ET1.M4 Substratum depth distribution    15-30     1  22.5  0.25    cm #> 5  ET1.M5 Substratum depth distribution      >30     1  30.0  0.00    cm #> 6  ET2.M1                  Biodiffusion     Null     2   0.0  0.00     - unique(traits.lab$trait) #>  [1] \"Substratum depth distribution\"    \"Biodiffusion\"                     #>  [3] \"Downward conveying\"               \"Upward conveying\"                 #>  [5] \"Regeneration\"                     \"Biodeposition\"                    #>  [7] \"Bioerosion\"                       \"Biostabilisation\"                 #>  [9] \"Ventilation/Pumping\"              \"Burrow width\"                     #> [11] \"Endo-3D structure type\"           \"Endo-3D structure depth\"          #> [13] \"Epi-3D structure type\"            \"Epi-3D structure extension\"       #> [15] \"Epi-3D structure size\"            \"Body mass\"                        #> [17] \"Body length\"                      \"Body resistance\"                  #> [19] \"Motility\"                         \"Burrowing/Sheltering depth\"       #> [21] \"Feeding type\"                     \"Life span\"                        #> [23] \"Age at maturity\"                  \"Reproductive frequency\"           #> [25] \"Fertilisation\"                    \"Annual fecundity\"                 #> [27] \"Offspring type\"                   \"Offspring size\"                   #> [29] \"Offspring protection\"             \"Offspring development\"            #> [31] \"Offspring benthic stage duration\" \"Offspring pelagic stage duration\"  # types of burrows subset(traits.lab, subset = (trait==\"Endo-3D structure type\")) #>    colname                  trait           modality indic     value     score #> 34 ET11.M1 Endo-3D structure type               None    11 0.0000000 0.0000000 #> 35 ET11.M2 Endo-3D structure type     Chimney/Funnel    11 0.1666667 0.1666667 #> 36 ET11.M3 Endo-3D structure type               Tube    11 0.3333333 0.3333333 #> 37 ET11.M4 Endo-3D structure type   IJ-shaped burrow    11 0.5000000 0.5000000 #> 38 ET11.M5 Endo-3D structure type   UY-shaped burrow    11 0.6666667 0.6666667 #> 39 ET11.M6 Endo-3D structure type    Branched burrow    11 0.8333333 0.8333333 #> 40 ET11.M7 Endo-3D structure type Anastomosed burrow    11 1.0000000 1.0000000 #>    units #> 34     - #> 35     - #> 36     - #> 37     - #> 38     - #> 39     - #> 40     -  # taxa with U- or Y-shaped burrows (ET9M5): subset(Traits_nioz, subset = ET11.M5 > 0)$taxon #>  [1] \"Acrocnida brachiata\"       \"Acteon tornatilis\"         #>  [3] \"Amphiura chiajei\"          \"Amphiura filiformis\"       #>  [5] \"Aoridae\"                   \"Arenicola\"                 #>  [7] \"Brissopsis lyrifera\"       \"Callianassa\"               #>  [9] \"Callianassa subterranea\"   \"Chaetopterus variopedatus\" #> [11] \"Corophium\"                 \"Lagis koreni\"              #> [13] \"Marphysa sanguinea\"        \"Natatolana borealis\"       #> [15] \"Poecilochaetus serpens\"    \"Polydora\"                  #> [17] \"Prionospio\"                \"Prionospio cirrifera\"      #> [19] \"Pygospio elegans\"          \"Streblospio\"               #> [21] \"Streblospio shrubsolii\"    \"Thracia convexa\"           #> [23] \"Thracia phaseolina\"        \"Thracia pubescens\"         #> [25] \"Upogebia deltaura\"         \"Upogebia stellata\"          ##----------------------------------------------------- ## Show contents of the trait data sets - CEFAS data ##-----------------------------------------------------  traits_cefas.lab <- attributes(Traits_cefas)$description  head  (traits_cefas.lab) #>            colname        trait modality indic value score units #> 1  sr_Less_than_10 Maximum size      <10     1     5   0.0    mm #> 2      sr_11_to_20 Maximum size    11-20     1    15   0.2    mm #> 3     sr_21_to_100 Maximum size   21-100     1    60   0.4    mm #> 4    sr_101_to_200 Maximum size  101-200     1   150   0.6    mm #> 5    sr_201_to_500 Maximum size  201-500     1   350   0.8    mm #> 6 sr_More_than_500 Maximum size     >500     1   750   1.0    mm #>                                                                      description #> 1 The maximum size (mm) that the taxon is known to reach during the adult stage. #> 2 The maximum size (mm) that the taxon is known to reach during the adult stage. #> 3 The maximum size (mm) that the taxon is known to reach during the adult stage. #> 4 The maximum size (mm) that the taxon is known to reach during the adult stage. #> 5 The maximum size (mm) that the taxon is known to reach during the adult stage. #> 6 The maximum size (mm) that the taxon is known to reach during the adult stage. unique(traits_cefas.lab$trait) #>  [1] \"Maximum size\"               \"Morphology\"                 #>  [3] \"Lifespan\"                   \"Egg development location\"   #>  [5] \"Larva development location\" \"Living habit\"               #>  [7] \"Sediment position\"          \"Feeding mode\"               #>  [9] \"Mobility\"                   \"Bioturbation mode\"           # Living habit subset(traits_cefas.lab, subset = (trait==\"Living habit\")) #>                         colname        trait                  modality indic #> 24             lh_Tube_dwelling Living habit             Tube_dwelling     7 #> 25           lh_Burrow_dwelling Living habit           Burrow_dwelling     7 #> 26               lh_Free_living Living habit               Free_living     7 #> 27 lh_Crevice_hole_under_stones Living habit Crevice_hole_under_stones     7 #> 28           lh_Epi_endo_biotic Living habit           Epi_endo_biotic     7 #> 29    lh_Attached_to_substratum Living habit    Attached_to_substratum     7 #>    value score units #> 24   0.0   0.0     - #> 25   0.2   0.2     - #> 26   0.4   0.4     - #> 27   0.6   0.6     - #> 28   0.8   0.8     - #> 29   1.0   1.0     - #>                                                                                       description #> 24               Adults live in a tube, which may be lined with sand, mucus or calcium carbonate. #> 25                                                Adults live in a permanent or temporary burrow. #> 26 Adults do not inhabit a restrictive structure. Able to move freely within and/or on sediments. #> 27   Adults typically cryptic and inhabit spaces within coarse/rock substrate or algal holdfasts. #> 28                                                         Adults live on or in another organism. #> 29                                               Adults are attached to coarse substrate or rock.  # taxa that live predominantly in a tube (lh_Tube_dwelling): subset(Traits_cefas, subset = lh_Tube_dwelling > 0.5)$taxon  # more than 50% #>   [1] \"Aponuphis\"          \"Paradiopatra\"       \"Panthalis\"          #>   [4] \"Platynereis\"        \"Fabricia\"           \"Acromegalomma\"      #>   [7] \"Branchiomma\"        \"Chone\"              \"Euchone\"            #>  [10] \"Jasmineira\"         \"Laonome\"            \"Perkinsiana\"        #>  [13] \"Pseudopotamilla\"    \"Sabella\"            \"Sabellidae\"         #>  [16] \"Apomatus\"           \"Circeis\"            \"Ditrupa\"            #>  [19] \"Hydroides\"          \"Protula\"            \"Serpula\"            #>  [22] \"Vermiliopsis\"       \"Serpulidae\"         \"Siboglinum\"         #>  [25] \"Poecilochaetus\"     \"Pygospio\"           \"Trochochaeta\"       #>  [28] \"Ampharete\"          \"Amphicteis\"         \"Anobothrus\"         #>  [31] \"Eclysippe\"          \"Lysippe\"            \"Samytha\"            #>  [34] \"Sosane\"             \"Ampharetidae\"       \"Dodecaceria\"        #>  [37] \"Melinna\"            \"Amphictene\"         \"Lagis\"              #>  [40] \"Pectinaria\"         \"Petta\"              \"Pectinariidae\"      #>  [43] \"Amphitrite\"         \"Lanice\"             \"Loimia\"             #>  [46] \"Neoamphitrite\"      \"Nicolea\"            \"Paramphitrite\"      #>  [49] \"Pista\"              \"Pistella\"           \"Streblosoma\"        #>  [52] \"Thelepus\"           \"Terebellides\"       \"Trichobranchus\"     #>  [55] \"Capitella\"          \"Heteromastus\"       \"Mediomastus\"        #>  [58] \"Chaetopterus\"       \"Phyllochaetopterus\" \"Spiochaetopterus\"   #>  [61] \"Chaetopteridae\"     \"Clymenella\"         \"Clymenura\"          #>  [64] \"Euclymene\"          \"Heteroclymene\"      \"Lumbriclymene\"      #>  [67] \"Maldane\"            \"Microclymene\"       \"Nicomache\"          #>  [70] \"Notoproctus\"        \"Petaloproctus\"      \"Praxillella\"        #>  [73] \"Praxillura\"         \"Rhodine\"            \"Maldanidae\"         #>  [76] \"Galathowenia\"       \"Myriochele\"         \"Owenia\"             #>  [79] \"Oweniidae\"          \"Lygdamis\"           \"Sabellaria\"         #>  [82] \"Ampelisca\"          \"Byblis\"             \"Haploops\"           #>  [85] \"Ampeliscidae\"       \"Ampithoe\"           \"Lembos\"             #>  [88] \"Microdeutopus\"      \"Crassicorophium\"    \"Monocorophium\"      #>  [91] \"Protomedeia\"        \"Ericthonius\"        \"Jassa\"              #>  [94] \"Siphonoecetes\"      \"Ischyroceridae\"     \"Microprotopus\"      #>  [97] \"Gammaropsis\"        \"Photis\"             \"Tanais\"             #> [100] \"Phascolion\"          ##----------------------------------------------------- ## Feeding type - NIOZ data ##-----------------------------------------------------  FT <- subset(traits.lab, trait==\"Feeding type\") FT #>    colname        trait            modality indic     value     score units #> 88  RT6.M1 Feeding type      Deposit feeder     6 0.0000000 0.0000000     - #> 89  RT6.M2 Feeding type   Suspension feeder     6 0.3333333 0.3333333     - #> 90  RT6.M3 Feeding type    Herbivore/Grazer     6 0.6666667 0.6666667     - #> 91  RT6.M4 Feeding type Carnivore/Scavenger     6 1.0000000 1.0000000     - head(Traits_nioz[,c(\"taxon\", FT$colname)]) #>                   taxon RT6.M1 RT6.M2 RT6.M3 RT6.M4 #> 1          Abludomelita    1.0    0.0      0      0 #> 2 Abludomelita obtusata    1.0    0.0      0      0 #> 3             Abra alba    0.5    0.5      0      0 #> 4           Abra nitida    0.5    0.5      0      0 #> 5       Abra prismatica    0.5    0.5      0      0 #> 6           Abra tenuis    0.5    0.5      0      0  # Select for all taxa the feeding type to which they belong FTspec <- apply(Traits_nioz[ ,FT$colname],                  MARGIN = 2,             # apply on columns                 FUN    = function(x) Traits_nioz$taxon[x>0])  names(FTspec) <- FT$modality FTspec$\"Herbivore/Grazer\" #>  [1] \"Alitta virens\"         \"Apherusa\"              \"Aplysia\"               #>  [4] \"Caprellidae\"           \"Carcinus maenas\"       \"Echinus esculentus\"    #>  [7] \"Gammarus\"              \"Lepidonotus squamatus\" \"Liocarcinus\"           #> [10] \"Liocarcinus holsatus\"  \"Marphysa sanguinea\"    \"Nereis\"                #> [13] \"Ophryotrocha\"          \"Pagurus bernhardus\"    \"Paraonis fulgens\"      #> [16] \"Portumnus latipes\"     \"Psammechinus miliaris\" \"Pygospio elegans\"      #> [19] \"Schistomysis\"           ## Number of occurrences of feeding types FTtable <- apply(Traits_nioz[,FT$colname],                   MARGIN = 2,                   FUN    = function(x) sum(x>0))  data.frame(FT$modality, numberOfOccurrences = FTtable) #>                FT.modality numberOfOccurrences #> RT6.M1      Deposit feeder                 149 #> RT6.M2   Suspension feeder                 117 #> RT6.M3    Herbivore/Grazer                  19 #> RT6.M4 Carnivore/Scavenger                  93  ##----------------------------------------------------- ## Feeding type - CEFAS data ##-----------------------------------------------------  FT_cefas <- subset(traits_cefas.lab, trait== \"Feeding mode\") FT_cefas #>                 colname        trait           modality indic value score units #> 34         f_Suspension Feeding mode         Suspension     9   0.0   0.0     - #> 35    f_Surface_deposit Feeding mode    Surface_deposit     9   0.2   0.2     - #> 36 f_Subsurface_deposit Feeding mode Subsurface_deposit     9   0.4   0.4     - #> 37          f_Scavenger Feeding mode          Scavenger     9   0.6   0.6     - #> 38           f_Predator Feeding mode           Predator     9   0.8   0.8     - #> 39           f_Parasite Feeding mode           Parasite     9   1.0   1.0     - #>                                                              description #> 34    Feeds on particulate food resources suspended in the water column. #> 35 Feeds on detritus (including algal material) on the sediment surface. #> 36                 Feeds on detritus located within the sediment matrix. #> 37                                      Feeds on dead animals (carrion). #> 38           Actively predates on animals (including small zooplankton). #> 39                             Derives nutrition from its host organism.  FT_cefasSpec <- apply(Traits_cefas[ ,FT_cefas$colname],                  MARGIN = 2,             # apply on columns                 FUN    = function(x) Traits_cefas$taxon[x>0])                  names(FT_cefasSpec) <- FT_cefas$modality FT_cefasSpec$\"Parasite\" #>  [1] \"Drilonereis\"    \"Notocirrus\"     \"Oenonidae\"      \"Rhodinicola\"    #>  [5] \"Notodelphys\"    \"Melinnacheres\"  \"Epimeria\"       \"Metopa\"         #>  [9] \"Parametopa\"     \"Stenothoe\"      \"Stenula\"        \"Stenothoidae\"   #> [13] \"Pinnotheres\"    \"Pseudione\"      \"Bopyridae\"      \"Cirolana\"       #> [17] \"Cirolanidae\"    \"Gnathia\"        \"Ione\"           \"Isopoda\"        #> [21] \"Galatheascus\"   \"Triangulus\"     \"Eulima\"         \"Melanella\"      #> [25] \"Vitreolina\"     \"Brachystomia\"   \"Odostomia\"      \"Pyramidellidae\"  ## number of occurrences FTtable_cefas <- apply(Traits_cefas[,FT_cefas$colname],                   MARGIN = 2,                   FUN    = function(x) sum(x>0))  data.frame(FT_cefas$modality, numberOfOccurrences = FTtable_cefas) #>                       FT_cefas.modality numberOfOccurrences #> f_Suspension                 Suspension                 488 #> f_Surface_deposit       Surface_deposit                 346 #> f_Subsurface_deposit Subsurface_deposit                 147 #> f_Scavenger                   Scavenger                 230 #> f_Predator                     Predator                 385 #> f_Parasite                     Parasite                  28  ##----------------------------------------------------- ## Community mean weighted score. ## Traits from all taxa in the dataset, yearly averaged  ##-----------------------------------------------------  trait.lab <- attributes(Traits_nioz)$description  # traits are extended with taxonomic information (via taxonomy),  # and converted to crisp values (by passing trait.class, trait.score)  cwm.weight.score <- with (MWTL$density,        getTraitDensity(descriptor     = station,                        taxon          = taxon,                        value          = density,                        averageOver    = year,                        trait          = Traits_nioz,                        taxonomy       = Taxonomy,                       trait.class    = trait.lab$trait,                        trait.score    = trait.lab$score,                        scalewithvalue = TRUE))  head(cwm.weight.score, n=c(3,4))   #>   descriptor Age.at.maturity Annual.fecundity Biodeposition #> 1  BREEVTN02       0.3292563        0.3976374     0.2097908 #> 2  BREEVTN03       0.3214742        0.4633356     0.1636630 #> 3  BREEVTN04       0.1273492        0.3011162     0.1416944  Stations.traits <- merge(MWTL$stations, cwm.weight.score,                           by.x=\"station\", by.y=\"descriptor\")  par(mfrow=c(2,2))  with(Stations.traits, mapBtrait(x, y, colvar=Biodeposition,                                 main=\"Biodeposition\")) with(Stations.traits, mapBtrait(x, y, colvar=Biodiffusion,                                 main=\"Biodiffusion\")) with(Stations.traits, mapBtrait(x, y, colvar=Biostabilisation,                                 main=\"Biostabilisation\")) with(Stations.traits, mapBtrait(x, y, colvar=Burrow.width,                                 main=\"Burrow width\"))   ##----------------------------------------------------- ## Deriving the bio-irrigation traits from the NIOZ dataset ##-----------------------------------------------------  # the burrow types are derived from the nioz traits \"Endo-3D structure type\",  # the injection depth from traits \"Endo-3D structure depth\"  # the feeding type is derived from the nioz traits \"Feeding type\".   # traits and modalities in Traits_nioz usable for bio-irrigation estimates Irr.meta <- rbind(   subset(metadata(Traits_nioz), subset = trait == \"Endo-3D structure type\"),  #BT   subset(metadata(Traits_nioz), subset = trait == \"Endo-3D structure depth\"), #ID   subset(metadata(Traits_nioz), subset = trait == \"Feeding type\"))            #FT  # Add irrigation scores Irr.meta$IR.type  <- c(rep(\"BT\", times=7),  rep(\"ID\", times=5), rep(\"FT\", times=4)) Irr.meta$IR.value <- c(1, 1, 1, 2, 2, 3, 3,     1, 2, 3, 4, 4,    3, 2, 1, 1)  # Show the metadata usable together with Traits_nioz Irr.meta[, c(1:3,8:9)] #>    colname                   trait            modality IR.type IR.value #> 34 ET11.M1  Endo-3D structure type                None      BT        1 #> 35 ET11.M2  Endo-3D structure type      Chimney/Funnel      BT        1 #> 36 ET11.M3  Endo-3D structure type                Tube      BT        1 #> 37 ET11.M4  Endo-3D structure type    IJ-shaped burrow      BT        2 #> 38 ET11.M5  Endo-3D structure type    UY-shaped burrow      BT        2 #> 39 ET11.M6  Endo-3D structure type     Branched burrow      BT        3 #> 40 ET11.M7  Endo-3D structure type  Anastomosed burrow      BT        3 #> 41 ET12.M1 Endo-3D structure depth                None      ID        1 #> 42 ET12.M2 Endo-3D structure depth                 0-5      ID        2 #> 43 ET12.M3 Endo-3D structure depth                5-15      ID        3 #> 44 ET12.M4 Endo-3D structure depth               15-30      ID        4 #> 45 ET12.M5 Endo-3D structure depth                 >30      ID        4 #> 88  RT6.M1            Feeding type      Deposit feeder      FT        3 #> 89  RT6.M2            Feeding type   Suspension feeder      FT        2 #> 90  RT6.M3            Feeding type    Herbivore/Grazer      FT        1 #> 91  RT6.M4            Feeding type Carnivore/Scavenger      FT        1  cnames <- c(\"taxon\", Irr.meta$colname)  # columns to be extracted from Traits_nioz  Irr.traits <- fuzzy2crisp(trait       = Traits_nioz[, cnames],                            trait.class = Irr.meta$IR.type,                            trait.score = Irr.meta$IR.value)  # metadata Irr.traits.meta <- data.frame(    trait      = c(rep(\"BT\", times=3), rep(\"ID\", times=4),  rep(\"FT\", times=4),    modality   = c(1:3               , 1:4               , 1:4),     description= c(\"epifauna, internal irrigation (e.g. siphons)\",                    \"open irrigation (e.g. U- or Y- shaped burrows)\",                    \"blind ended irrigation\",                    \"injection pocket 0-2cm\", \"injection pocket 2-5cm\",                    \"injection pocket 5-10cm\", \"injection pocket >10 cm depth\",                    \"surface filter feeders\", \"predators\",                    \"deposit feeders\", \"sub surface filter feeders\"))) attributes(Irr.traits)$description <- Irr.traits.meta"},{"path":"/reference/BtraitMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple plotting function for trait or density data — Btrait plotting","title":"Simple plotting function for trait or density data — Btrait plotting","text":"mapBtrait: plots contourlines dataset data superimposed","code":""},{"path":"/reference/BtraitMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple plotting function for trait or density data — Btrait plotting","text":"","code":"mapBtrait (x = NULL, y = NULL, colvar = NULL, main = NULL, col = NULL,         colkey = list(length = 0.3, width = 0.5, cex.axis = 0.8,                   cex.clab = par(\"cex.lab\")), xlim = NULL, ylim = NULL,          contours = NULL, draw.levels = FALSE, col.levels = NULL,          key.levels = FALSE, lwd.levels = 1, axes = TRUE, frame.plot = TRUE, ...)"},{"path":"/reference/BtraitMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple plotting function for trait or density data — Btrait plotting","text":"x, y coordinates points plot. colvar color variable. col colors used color variable. vector; default jet.col(100). colkey specifications color key. See colkey.    color key drawn draw.levels = TRUE. main title plot. xlim, ylim (approximate) ranges plot. approximate, actual ranges tuned aspect ratio, calculated function. contours list x, y, z    specifies contours. Usually, z water depth. NULL,   contour specification dataset MWTL used (MWTL$contours) draw.levels Whether depth levels added;   FALSE levels >= 0 added. col.levels Colors depth levels (applicable draw.levels=TRUE); default grey colors. Also allowed function takes input number colors - see last example. lwd.levels line width depth lines. key.levels Whether add color key depth levels; applicable draw.levels=TRUE).    can TRUE FALSE, list specifies color key (see colkey). axes, frame.plot arguments main plotting function (opens window) ... additional arguments passed plot function points2D, e.g. type symbol use (pch, cex, ...), whether use log-transformed color variables (log=\"c\").","code":""},{"path":"/reference/BtraitMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple plotting function for trait or density data — Btrait plotting","text":"returns nothing","code":""},{"path":"/reference/BtraitMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple plotting function for trait or density data — Btrait plotting","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"/reference/BtraitMap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple plotting function for trait or density data — Btrait plotting","text":"quick--dirty plotting function, may better alternatives around. scale x- y-axis, aspect ratio estimated : asp = 1/ cos((mean(ylim) * pi)/180).","code":""},{"path":"/reference/BtraitMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple plotting function for trait or density data — Btrait plotting","text":"","code":"MWTLabiotics <- merge(MWTL$stations, MWTL$abiotics) with (MWTLabiotics, mapBtrait(x, y, colvar=depth, pch=18, cex=2,      contours=MWTL$contours, clab=\"m\", main=\"Water depth\"))   # Change the colorkey and the contours (use NSBS contours)  with (MWTLabiotics, mapBtrait(x, y , colvar=depth, pch=18, cex=2,      clab=\"m\", main=\"Water depth\", contours=NSBS$contours,     colkey = list(dist=-0.05, length=0.5, width=0.5, cex.axis=0.6)))   # zoom in on an area (not full control due to the overruling aspect ratio) with (MWTLabiotics, mapBtrait(x, y , colvar=depth, pch=18, cex=2,      clab=\"m\", main=\"Water depth\", ylim=c(51, 54), xlim=c(3,5),     colkey = list(dist=-0.08, length=0.5, width=0.5, cex.axis=0.6)))   # adding also the contours  with (MWTLabiotics, mapBtrait(x, y, colvar=D50, contours=MWTL$contours,         pch=18, cex=2, clab=\"micrometer\", main=\"Median grain\",          draw.levels=TRUE,          colkey = list(dist=-0.08, length=0.5,                        width=0.5, cex.axis=0.6)))   # adding also the contours with color key # note: - main color key then positioned elsewhere (side=1)  # Use a different color scheme  collev <- function(n) ramp.col(col=c(\"darkorange\", \"darkblue\"), n=n)  with (MWTLabiotics, mapBtrait(x, y, colvar=D50, pch=18, cex=1.5,      clab=c(\"\",\"micrometer\"), main=\"Median grain\", contours=MWTL$contours,      draw.levels=TRUE, key.levels=TRUE, col.levels=collev,     colkey = list(side=1, dist=-0.08, length=0.25,                    width=0.5, cex.axis=0.6)))   # Change the appearance of the colorkey for levels:  with (MWTLabiotics, mapBtrait(x, y, colvar=D50, contours=MWTL$contours,     pch=18, cex=1.5, clab=c(\"grain size\",\"micrometer\"),      main=\"Median grain\",       draw.levels=TRUE, key.levels=list(length=0.5, width=0.5),      col.levels=collev, colkey = list(side=1, dist=-0.08, length=0.25,                    width=0.5, cex.axis=0.6)))   # Show the depth contours mapBtrait(contours=NSBS$contours, draw.levels=TRUE, key.levels=TRUE)   # Use a different color scheme  collev <- function(n) ramp.col(col=c(\"darkgreen\", \"darkblue\"), n=n) mapBtrait(contours=NSBS$contours, draw.levels=TRUE, col.levels=collev,   key.levels=TRUE)   #------------------------------ # log-transformed color variables #------------------------------  # average densities of Abra alba in the MWTL data. A.alba <- getDensity(descriptor  = MWTL$density$station,                      averageOver = MWTL$density$year,                      taxon       = MWTL$density$taxon,                       value       = MWTL$density$density,                      subset      = MWTL$density$taxon == \"Abra alba\")                       # add positions of stations  # all.x=TRUE: also stations without A.alba are selected # the NAs are converted to 0  A.alba <- merge(MWTL$stations, A.alba, by=1, all.x=TRUE)  A.alba$value[which(is.na(A.alba$value))] <- 0  # plot with density values log-transfored # 0-values will be transformed to NAs in mapBtrait;  # we set the NA color=\"grey\"  mapBtrait(A.alba$x, A.alba$y, colvar=A.alba$value, pch=18,            cex=2, contours=MWTL$contours, NAcol=\"grey\", log=\"c\")"},{"path":"/reference/BTRAITweb.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive visualisation of the MWTL Northsea macrofauna data — Interactive Tool for Northsea Macrofauna data","title":"Interactive visualisation of the MWTL Northsea macrofauna data — Interactive Tool for Northsea Macrofauna data","text":"shiny interface see distribution macrofauna Dutch Northsea.","code":""},{"path":"/reference/BTRAITweb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive visualisation of the MWTL Northsea macrofauna data — Interactive Tool for Northsea Macrofauna data","text":"","code":"webMWTL(...)"},{"path":"/reference/BTRAITweb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interactive visualisation of the MWTL Northsea macrofauna data — Interactive Tool for Northsea Macrofauna data","text":"Karline Soetaert (R-coding), Anna van der Kaaden (artwork)","code":""},{"path":"/reference/BTRAITweb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive visualisation of the MWTL Northsea macrofauna data — Interactive Tool for Northsea Macrofauna data","text":"... Arguments passed shiny application (used).","code":""},{"path":"/reference/BTRAITweb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive visualisation of the MWTL Northsea macrofauna data — Interactive Tool for Northsea Macrofauna data","text":"","code":"if (FALSE) {   webMWTL() }"},{"path":"/reference/densityfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for working with station x taxon data. — Density functions","title":"Functions for working with station x taxon data. — Density functions","text":"getDensity takes subset density data, possibly higher taxonomic level. getProportion estimates proportional values (subset ) density data. addAbsences adds taxon absences density data long format.","code":""},{"path":"/reference/densityfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for working with station x taxon data. — Density functions","text":"","code":"getDensity(descriptor, taxon, value, averageOver = NULL,          taxonomy = NULL, subset, wide.output = FALSE,          full.output = FALSE, verbose=FALSE)  getProportion(descriptor, taxon, value, averageOver = NULL,          taxonomy = NULL, verbose=FALSE)  addAbsences(descriptor, taxon, value, averageOver = NULL)"},{"path":"/reference/densityfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for working with station x taxon data. — Density functions","text":"descriptor name(s) descriptor, .e. ** data taken, e.g. station names. Either vector, list, data.frame matrix (multiple columns). can type numerical, character, factor. data.frame list \"names\" used output; vector, argument name used output. theory, also one number NA; however, care needs taken case combined subset averageOver taxon vector describing ** data ; gives taxonomic name (e.g. species). length (number rows ) descriptor. Can list (data.frame one column), vector. data.frame list \"name\" used output; vector, argument name used. value vector list contains *values* data, usually density. length (number rows ) descriptor taxon. function getDensity, value can also multi-column data.frame matrix. averageOver vector *replicates* averages need taken. length (number rows ) descriptor. subset logical expression indicating elements keep: missing values taken FALSE. NULL, absent, elements used. Note subset taken ** number samples average per descriptor calculated, also work selecting certain taxa may present replicates averaged. taxonomy taxonomic information; first column matched taxon, regardless name. full.output TRUE, also return descriptors value 0. can relevant case selection made taxonomic composition. Note taxon case undefined. wide.output TRUE, recast output wide format (default long format). makes sense value multiple columns. wide format, row holds taxa descriptor, column holds values one taxon descriptors. verbose TRUE, may write warnings screen.","code":""},{"path":"/reference/densityfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for working with station x taxon data. — Density functions","text":"getDensity returns data.frame combining descriptor, taxon, value, LONG format. Unless argument full.output TRUE, contain absences   (.e. value = 0), unless already present input. value consists summed values (descriptor, averageOver,    taxon) combinations, followed averaging averageOver.","code":""},{"path":"/reference/densityfun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for working with station x taxon data. — Density functions","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":[]},{"path":"/reference/densityfun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for working with station x taxon data. — Density functions","text":"getDensity. function summed value      taxa x descriptor first calculated, value      divided number replicates (averageOver) per descriptor. suitable density biomass data, mean individual weight instance.","code":""},{"path":"/reference/densityfun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for working with station x taxon data. — Density functions","text":"","code":"## ==================================================== ## A small dataset with replicates ## ====================================================  # 2 stations, 2 replicates for st.a, one replicate for st.b Bdata.rep <- data.frame(   station   = c(\"st.a\",\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\"),   replicate = c(     1,     1,    2,     1,     1,     1),   species   = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.3\",\"sp.4\",\"sp.5\"),   density   = c(     1,     2,    3,     3,     1,     3) ) Bdata.rep #>   station replicate species density #> 1    st.a         1    sp.1       1 #> 2    st.a         1    sp.2       2 #> 3    st.a         2    sp.1       3 #> 4    st.b         1    sp.3       3 #> 5    st.b         1    sp.4       1 #> 6    st.b         1    sp.5       3  # Proportion of each species with (Bdata.rep,    getProportion (value       = density,                   descriptor  = data.frame(station, replicate),                   taxon       = species)) #>   station replicate taxon         p #> 1    st.a         1  sp.1 0.3333333 #> 2    st.a         1  sp.2 0.6666667 #> 3    st.a         2  sp.1 1.0000000 #> 4    st.b         1  sp.3 0.4285714 #> 5    st.b         1  sp.4 0.1428571 #> 6    st.b         1  sp.5 0.4285714   ##----------------------------------------------------- ## average of replicates ##-----------------------------------------------------  with (Bdata.rep,    getDensity (value       = density,                descriptor  = station,                taxon       = species,                averageOver = replicate)) #>   descriptor taxon value #> 1       st.a  sp.1     2 #> 2       st.a  sp.2     1 #> 3       st.b  sp.3     3 #> 4       st.b  sp.4     1 #> 5       st.b  sp.5     3  # using named lists to have good column headings with (Bdata.rep,    getDensity (value       = list(density=density),                descriptor  = list(station=station),                taxon       = species,                averageOver = replicate)) #>   station taxon density #> 1    st.a  sp.1       2 #> 2    st.a  sp.2       1 #> 3    st.b  sp.3       3 #> 4    st.b  sp.4       1 #> 5    st.b  sp.5       3                   # estimating proportions with (Bdata.rep,    getProportion (value    = list(density=density),                descriptor  = list(station=station),                taxon       = species,                averageOver = replicate)) #>   station taxon         p #> 1    st.a  sp.1 0.6666667 #> 2    st.a  sp.2 0.3333333 #> 3    st.b  sp.3 0.4285714 #> 4    st.b  sp.4 0.1428571 #> 5    st.b  sp.5 0.4285714                   # averaging multiple value columns at once  # extending the data with biomass - assume no biomass for st b  Bdata.rep$biomass = c(0.1, 0.2, 0.3, NA, NA, NA) Bdata.rep #>   station replicate species density biomass #> 1    st.a         1    sp.1       1     0.1 #> 2    st.a         1    sp.2       2     0.2 #> 3    st.a         2    sp.1       3     0.3 #> 4    st.b         1    sp.3       3      NA #> 5    st.b         1    sp.4       1      NA #> 6    st.b         1    sp.5       3      NA  with (Bdata.rep,    getDensity (value       = list(density=density, biomass=biomass),                descriptor  = list(station=station),                taxon       = species,                averageOver = replicate)) #>   station taxon density biomass #> 1    st.a  sp.1       2     0.2 #> 2    st.a  sp.2       1     0.1 #> 3    st.b  sp.3       3      NA #> 4    st.b  sp.4       1      NA #> 5    st.b  sp.5       3      NA  ##----------------------------------------------------- ## Select information for one species ##-----------------------------------------------------  with (Bdata.rep,    getDensity (subset      = species==\"sp.2\",               value       = density,                descriptor  = list(station=station),                taxon       = species,                averageOver = replicate)) #>   station taxon value #> 1    st.a  sp.2     1  # returns also the 0 value  with (Bdata.rep,    getDensity (subset      = species==\"sp.2\",               value       = density,                descriptor  = list(station=station),                taxon       = species,                averageOver = replicate,                full.output = TRUE)) #>   station taxon value #> 1    st.a  sp.2     1 #> 2    st.b  sp.2     0  ##----------------------------------------------------- ## Extend the long format with absences ##-----------------------------------------------------  # take averages over replicates with(Bdata.rep,    addAbsences (value      = density,                 descriptor = cbind(station, replicate),                 taxon      = species)) #>    station replicate taxon value #> 1     st.a         1  sp.1     1 #> 2     st.b         1  sp.1     0 #> 3     st.a         2  sp.1     3 #> 4     st.a         1  sp.2     2 #> 5     st.b         1  sp.2     0 #> 6     st.a         2  sp.2     0 #> 7     st.a         1  sp.3     0 #> 8     st.b         1  sp.3     3 #> 9     st.a         2  sp.3     0 #> 10    st.a         1  sp.4     0 #> 11    st.b         1  sp.4     1 #> 12    st.a         2  sp.4     0 #> 13    st.a         1  sp.5     0 #> 14    st.b         1  sp.5     3 #> 15    st.a         2  sp.5     0  # keep replicates with(Bdata.rep,    addAbsences (value       = density,                 descriptor  = station,                 taxon       = species,                 averageOver = replicate)) #>    descriptor taxon value #> 1        st.a  sp.1     2 #> 2        st.b  sp.1     0 #> 3        st.a  sp.2     1 #> 4        st.b  sp.2     0 #> 5        st.a  sp.3     0 #> 6        st.b  sp.3     3 #> 7        st.a  sp.4     0 #> 8        st.b  sp.4     1 #> 9        st.a  sp.5     0 #> 10       st.b  sp.5     3  ## ==================================================== ## A small dataset without replicates ## ====================================================  Bdata <- data.frame(   station = c(\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\",\"st.c\"),   species = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.3\",\"sp.4\",\"sp.5\"),   density = c(1, 2, 3, 3, 1, 3) )  ## ==================================================== ## Small dataset: taxonomy ## ====================================================  Btaxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.2\", \"g.2\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.1\", \"f.1\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.1\", \"o.1\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\")   )  ##----------------------------------------------------- ## density on higher taxonomic level ##-----------------------------------------------------  # species density for a particular genus  sp.g2 <- with (Bdata,    getDensity(descriptor = station,               taxon      = species,              value      = density,              taxonomy   = Btaxonomy,              subset     = genus == \"g.2\")               )  # select data for station st.a Bselect <- with (Bdata,     getDensity (value      = density,                 descriptor = station,                 taxon      = species,                 subset     = station==\"st.a\")                 ) Bselect #>   descriptor taxon value #> 1       st.a  sp.1     1 #> 2       st.a  sp.2     2  # pass taxonomy to select only species that belong to g.1 with (Bdata,     getDensity (value      = density,                 descriptor = station,                 taxon      = species,                 taxonomy   = Btaxonomy,                 subset     = genus==\"g.1\")) #>   descriptor taxon value #> 1       st.a  sp.1     1 #> 2       st.b  sp.1     3  ## ==================================================== ## Northsea dataset ## ====================================================  #----------------------------------------------------- ## Occurrence of Abra alba, averaged per station ##-----------------------------------------------------  Abra_alba <- with(MWTL$density,     getDensity(subset      = taxon==\"Abra alba\",               descriptor  = station,               averageOver = year,               taxon       = taxon,               value       = density)) head(Abra_alba) #>   descriptor     taxon      value #> 1  BREEVTN02 Abra alba 55.6795892 #> 2  BREEVTN04 Abra alba  0.6747638 #> 3  BREEVTN07 Abra alba  0.7684211 #> 4  BREEVTN08 Abra alba  3.5663961 #> 5  BREEVTN09 Abra alba  0.6747632 #> 6  BREEVTN10 Abra alba  0.6747632  # Mean of all Abra species over all stations # This should be done in two steps.  Abra <- with(MWTL$density,     getDensity(subset      = genus==\"Abra\",               descriptor  = station,               averageOver = year,               taxon       = taxon,               taxonomy    = Taxonomy,               value       = density,                full.output = TRUE)) head(Abra) #>   descriptor           taxon     value #> 1  BREEVTN02       Abra alba 55.679589 #> 2  BREEVTN02     Abra nitida  1.349526 #> 3  BREEVTN02 Abra prismatica  0.000000 #> 4  BREEVTN02     Abra tenuis  0.000000 #> 5  BREEVTN03       Abra alba  0.000000 #> 6  BREEVTN03     Abra nitida  0.000000  tapply(Abra$value, INDEX=list(Abra$taxon), FUN=mean) #>       Abra alba     Abra nitida Abra prismatica     Abra tenuis  #>      22.0298979       1.1496596       0.9196846       0.0196533"},{"path":"/reference/getIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"getDbIndex estimates BPc index sensu Querios et al., 2013 Solan et al., 2004. getIrrIndex estimates IPc index sensu Wrede et al., 2018.","code":""},{"path":"/reference/getIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"","code":"getDbIndex (descriptor, taxon, density, biomass, averageOver = NULL,            subset, trait = Traits_Db, taxonomy = NULL,         full.output = FALSE, verbose = FALSE)  getIrrIndex (descriptor, taxon, density, biomass, averageOver = NULL,            subset, trait = Traits_irr, taxonomy = NULL,         full.output = FALSE, verbose = FALSE)"},{"path":"/reference/getIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"descriptor name(s) descriptor, .e. ** data taken, e.g. station names. Either vector, list, data.frame matrix (multiple columns). can type numerical, character, factor. data.frame list \"names\" used output; vector, argument name used output. taxon vector describing ** data ; gives taxonomic name (e.g. species). length (number rows ) descriptor. Can list (data.frame one column), vector. data.frame list \"name\" used output; vector, argument name used. density, biomass vector list contains *density* *biomass* data. length (number rows ) descriptor taxon. averageOver vector *replicates* averages need taken. length (number rows ) descriptor. subset logical expression indicating elements keep density data: missing values taken FALSE. NULL, absent, elements used. Note subset taken ** number samples average per descriptor calculated, also work selecting certain taxa may present replicates averaged. trait (taxon x trait) data, *WIDE* format, containing numerical values . first column contain name taxa. function getDbIndex, also columns named Mi Ri, denoting mobility reworking mode (values 1-4 1-5 respectively) present. function getIrrIndex, columns named BT (burrowtype, 1-3), FT (feeding type, 1-3), ID (injection depth, 1-4) present. Good choices Traits_Db Traits_irr (defaults). verbose TRUE, write warnings screen. full.output TRUE, output full data.frame descriptor x taxon indices (called . See value. taxonomy taxonomic information (relationships taxa), data.frame; first column matched taxon, regardless name. used estimate traits taxa accounted , estimated based taxa nearest taxonomic level. See details.","code":""},{"path":"/reference/getIndices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"algorithm first calls function getDensity, obtain (depending averageOver averaged) taxon densities biomass per descriptor. weight estimated biomass density. , taxon obtained dataset, required traits extracted trait database using function getTrait. two data.frames merged (based taxon), descriptor x taxon occurrence, density, weight required traits. bioturbation bioirrigation Index estimated using appropriate formula, Finally, sums taxon indices taken per descriptor, averages estimated taxa, using R-function aggregate.","code":""},{"path":"/reference/getIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"return list following elements:  descriptor data.frame two columns, descriptor, index (BPc IPc),      consist *summed* values taxa taxon data.frame two columns, taxon name, index (BPc IPc),      *averaged* descriptors , present full.output TRUE: full dataset indices estimated.","code":""},{"path":"/reference/getIndices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"/reference/getIndices.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"Queiros, Ana M., Silvana N. R. Birchenough, Julie Bremner, Jasmin . Godbold, Ruth E. Parker,  Alicia Romero-Ramirez, Henning Reiss, Martin Solan, Paul J. Somerfield, Carl Van Colen,  Gert Van Hoey, Stephen Widdicombe, 2013.  bioturbation classification European marine infaunal invertebrates.  Ecology Evolution 3 (11), 3958-3985 Solan M, Cardinale BJ, Downing AL, Engelhardt KAM, Ruesink JL, Srivastava DS. 2004. Extinction ecosystem function marine benthos. Science 306:1177-80. . Wrede, J.Beermann, J.Dannheim, L.Gutow, T.Brey, 2018. Organism functional traits ecosystem supporting services - novel approach predict bioirrigation. Ecological indicators, 91, 737-743.","code":""},{"path":"/reference/getIndices.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"Equations: formula estimating bioturbation Index taxon (Querios et al., 2013): BPc_i = sqrt(Wi) * density_i * Ri*Mi, Mi Ri, denote mobility reworking mode (values 1-4 1-5 respectively). See Traits_Db numbers mean. formula estimating bioirrigation Index taxon (Wrede et al., 2018) : IPc_i = (Wi)^(0.75) * density_i * BTi*FTi*IDi, BT burrowtype (1-3), FT  feeding type (1-3), ID injection depth (BF1-4). See Traits_irr numbers mean. stations Index sum species indices.","code":""},{"path":"/reference/getIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for obtaining the bioturbation and bio-irrigation potential index. — Bioturbation and Bioirrigation potential indices","text":"","code":"##----------------------------------------------------- ## The bioturbation potential for one species ##-----------------------------------------------------  # Amphiura filiformis, for increasing density  DbAmp <- getDbIndex(               taxon   = rep(\"Amphiura filiformis\", times=10),                density = 1:10,                biomass = (1:10)*4.5e-3,                full.output=TRUE,                trait   = Traits_Db) head(DbAmp$all) #>                 taxon descriptor density biomass Weight Ri Mi       BPc #> 1 Amphiura filiformis          1       1  0.0045 0.0045  4  3 0.8049845 #> 3 Amphiura filiformis          2       2  0.0090 0.0045  4  3 1.6099689 #> 4 Amphiura filiformis          3       3  0.0135 0.0045  4  3 2.4149534 #> 5 Amphiura filiformis          4       4  0.0180 0.0045  4  3 3.2199379 #> 6 Amphiura filiformis          5       5  0.0225 0.0045  4  3 4.0249224 #> 7 Amphiura filiformis          6       6  0.0270 0.0045  4  3 4.8299068  ##----------------------------------------------------- ## The bioirrigation potential for one species ##-----------------------------------------------------  # Amphiura filiformis, in dutch part of the northsea  IrrAmp <- with (MWTL$density,       getIrrIndex(               descriptor  = station,                        taxon       = taxon,                subset      = taxon == \"Amphiura filiformis\",                averageOver = year,               density     = density,                biomass     = biomass,                full.output = TRUE,                trait       = Traits_irr))  # irrigation activity per station head(IrrAmp$descriptor)  #>   descriptor        IPc #> 1  BREEVTN02 3.39001010 #> 2  BREEVTN26 0.57202895 #> 3  BREEVTN34 1.56014062 #> 4   DOGGBK02 0.89370665 #> 5   DOGGBK03 0.22054641 #> 6   DOGGBK04 0.03289779  # add coordinates of the stations IRR.amphiura <- merge(MWTL$stations, IrrAmp$descriptor, by=1)  # create a map with(IRR.amphiura, mapBtrait(x=x, y=y, colvar=IPc, pch=18,                      contours=MWTL$contours, draw.levels=TRUE))                        IrrAmp$taxon  # average irrigation activity #>                 taxon     IPc #> 1 Amphiura filiformis 56.0902  ##----------------------------------------------------- ## The bioturbation potential index for communities ##----------------------------------------------------- # BPc = sqrt(weight) * density * Mi * Ri  # BPc for the Dutch part of the Northsea, in 1995 BPC <- with (MWTL$density,       getDbIndex(descriptor = list(station=station),                      subset     = (year == 1995),                      taxon      = taxon,                       density    = density,                       biomass    = biomass,                       trait      = Traits_Db,                            taxonomy   = Taxonomy))    # There is one taxon for which trait could not be derived attributes(BPC)$notrait   #> [1] \"Entoprocta\"  # Total BPC per station head(BPC$descriptor) #>     station      BPc #> 1 BREEVTN02 627.3342 #> 2 BREEVTN03 254.4773 #> 3 BREEVTN04 367.8208 #> 4 BREEVTN05 292.6285 #> 5 BREEVTN06 278.8084 #> 6 BREEVTN07 343.3364  # Average BPC per taxon (only where taxon is present) head(BPC$taxon) #>                   taxon        BPc #> 1             Abra alba  11.837624 #> 2       Abra prismatica   7.703744 #> 3     Acidostoma obesum   2.770155 #> 4   Acrocnida brachiata 170.679651 #> 5 Ampelisca brevicornis   1.189973 #> 6 Ampelisca tenuicornis   1.511491  # Plot the results (after adding the coordinates) BPC_MWTL <- merge(MWTL$stations, BPC$descriptor, by=1)  with (BPC_MWTL, mapBtrait(x=x, y=y, colvar=BPc, pch=18,         contours=MWTL$contours, draw.levels=TRUE, main= \"BPc\"))   # The 10 main bioturbators in the data set: head(BPC$taxon[order(BPC$taxon$BPc, decreasing=TRUE), ], n=10) #>                   taxon       BPc #> 7   Amphiura filiformis 549.47920 #> 24          Callianassa 284.34819 #> 43           Ensis leei 266.91010 #> 38        Echinocardium 266.41715 #> 4   Acrocnida brachiata 170.67965 #> 141 Spisula subtruncata 133.51702 #> 89             Magelona 126.64536 #> 153   Upogebia deltaura 114.46170 #> 23  Brissopsis lyrifera 103.86270 #> 44        Ensis siliqua  91.17133  ##----------------------------------------------------- ## The bioirrigation Index ##----------------------------------------------------- # IPc = (weight_i)^0.75 * density * FTi * BTi * IDi  # IPc for the NSBS station OESTGDN19 in the OysterGrounds IPC <- with (MWTL$density,       getIrrIndex(descriptor  = list(station=station),                   subset      = (station == \"OESTGDN19\"),                   taxon       = taxon,                    averageOver = year,                   density     = density,                    biomass     = biomass,                    trait       = Traits_irr,                         taxonomy    = Taxonomy,                   full.output = TRUE))    # The 10 main bioirrigators in the data set, and why : head(IPC$all[order(IPC$all$IPc, decreasing=TRUE), ], n=10) #>                        taxon   station    density   biomass      Weight #> 31             Echinocardium OESTGDN19  12.355175 7.6178121 0.616568521 #> 63     Notomastus latericeus OESTGDN19  27.258948 1.2724267 0.046679231 #> 55                  Magelona OESTGDN19 386.563533 0.3492551 0.000903487 #> 62                   Nephtys OESTGDN19  48.488303 0.6977140 0.014389326 #> 9        Amphiura filiformis OESTGDN19 163.526663 0.7331815 0.004483559 #> 19               Callianassa OESTGDN19  10.891484 0.2309406 0.021203780 #> 96         Thyasira flexuosa OESTGDN19 210.743760 0.2532416 0.001201657 #> 53         Lanice conchilega OESTGDN19   8.884480 0.5046557 0.056801933 #> 86        Sigalion mathildae OESTGDN19  31.626840 0.2567129 0.008116931 #> 20 Chaetopterus variopedatus OESTGDN19   2.033738 0.6440768 0.316696025 #>          BT   FT   ID        IPc #> 31 1.500000 3.00 3.40 131.530463 #> 63 2.000000 3.00 4.00  65.699657 #> 55 2.000000 2.75 3.00  33.238870 #> 62 3.000000 1.40 3.25  27.497928 #> 9  1.500000 2.50 2.50  26.562996 #> 19 2.500000 3.00 4.00  18.155920 #> 96 1.714286 2.00 3.00  13.990217 #> 53 1.500000 2.50 3.40  13.179974 #> 86 3.000000 1.00 4.00  10.263156 #> 20 1.333333 2.00 4.00   9.158107"},{"path":"/reference/getTraitDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"getTraitDensity combines (descriptor x taxon) density data (taxon x trait) data (descriptor x trait) data set.","code":""},{"path":"/reference/getTraitDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"","code":"getTraitDensity(descriptor, taxon, value, averageOver = NULL,          wide = NULL, d.column = 1, trait, t.column = 1,          trait.class = NULL, trait.score = NULL, taxonomy = NULL,          scalewithvalue = TRUE, verbose = FALSE)"},{"path":"/reference/getTraitDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"descriptor name(s) descriptor, .e. ** data taken, e.g. station names. Either vector, list, data.frame matrix (multiple columns). can type numerical, character, factor. data.frame list \"names\" used output; vector, argument name used output. taxon vector describing ** data ; gives taxonomic name (e.g. species). length (number rows ) descriptor. Can list (data.frame one column), vector. data.frame list \"name\" used output; vector, argument name used. value vector list contains *values* data, usually density. length (number rows ) descriptor taxon. function getDensity, value can also multi-column data.frame matrix. averageOver vector *replicates* averages need taken. length (number rows ) descriptor. wide density data, *WIDE* format. data.frame matrix (descriptor x taxon) information. NULL, data.frame calculated descriptor, taxon, (replicate) value data. number descriptor columns specified d.column. data.frame first column usually contains descriptor name; case dimensions wide (number descriptors x number species+1), d.column=1. also allowed descriptors row.names data.frame -requires setting d.column=0. trait (taxon x trait) data (descriptor x trait) data, *WIDE* format, containing numerical values . Traits can fuzzy coded. number columns taxonomic information specified t.column. default first column contain name taxon, t.column=1. also allowed taxa row.names data.frame; case, t.column=0. See last example deal cgtegorical traits. trait.class indices trait levels, vector. length vector equal number columns trait wide minus value t.column. present, -together trait.score- used convert trait matrix fuzzy crisp format. trait.score trait values scores, vector. length trait.class scalewithvalue TRUE, standardize respect total density, average trait value obtained (summed value). Note total density estimated taxa whose traits known. verbose TRUE, write warnings screen. taxonomy taxonomic information (relationships taxa), data.frame; first column matched taxon, regardless name. used estimate traits taxa accounted , estimated based taxa nearest taxonomic level. See details. d.column, t.column position(s) name(s) column(s) holds descriptor density data set (data.frame wide), taxa trait data set (data.frame trait). default first column holding descriptors taxa. NULL, 0, separate column names, row.names dataset used descriptor taxon names.","code":""},{"path":"/reference/getTraitDensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"taxonomy used fill gaps trait information, assuming closely related taxa share similar traits. done two steps: trait database first extended information higher taxonomic levels (using *extendTrait*). traits taxonomic level estimated average traits lower level. instance, traits genus level averages known traits species database belonging genus. , taxon present trait database, traits closest taxonomic level used. instance,  unrecorded species, first checked trait known genus level, , family level .","code":""},{"path":"/reference/getTraitDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"getTraitDensity returns descriptor x trait density matrix.","code":""},{"path":"/reference/getTraitDensity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":[]},{"path":"/reference/getTraitDensity.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"traits certain taxa found, put equal 0  calculation proceed; notified verbose set  TRUE.  happens, taxa ignored can found attributes(..)$notrait","code":""},{"path":"/reference/getTraitDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for combining station x taxon and trait data. — Combining Density and Trait data","text":"","code":"## ==================================================== ## A small dataset with replicates ## ====================================================  # 2 stations, 2 replicates for st.a, one replicate for st.b Bdata.rep <- data.frame(   station   = c(\"st.a\",\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\"),   replicate = c(     1,     1,    2,     1,     1,     1),   species   = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.3\",\"sp.4\",\"sp.5\"),   density   = c(     1,     2,    3,     3,     1,     3) ) Bdata.rep #>   station replicate species density #> 1    st.a         1    sp.1       1 #> 2    st.a         1    sp.2       2 #> 3    st.a         2    sp.1       3 #> 4    st.b         1    sp.3       3 #> 5    st.b         1    sp.4       1 #> 6    st.b         1    sp.5       3  ##----------------------------------------------------- ## From long to wide format, averaging over replicates ##-----------------------------------------------------  Bwide <- with (Bdata.rep,    l2wDensity (value      = density,               descriptor  = station,               averageOver = replicate,              taxon       = species)) Bwide #>   descriptor sp.1 sp.2 sp.3 sp.4 sp.5 #> 1       st.a    2    1    0    0    0 #> 2       st.b    0    0    3    1    3  ##----------------------------------------------------- ## Small dataset: fuzzy-coded traits ##-----------------------------------------------------  # Note: no data for \"sp.4\"  Btraits <- data.frame(   taxon   = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\",\"sp.6\"),   T1_M1   = c(0     , 0    ,   0  , 0.2  ,     1),   T1_M2   = c(1     , 0    , 0.5  , 0.3  ,     0),   T1_M3   = c(0     , 1    , 0.5  , 0.5  ,     0),   T2_M1   = c(0     , 0    ,   1  , 0.5  ,     1),   T2_M2   = c(1     , 1    ,   0  , 0.5  ,     0) )  # The metadata for this trait Btraits.lab <- data.frame(   colname  =c(\"T1_M1\",\"T1_M2\",\"T1_M3\",\"T2_M1\",\"T2_M2\"),   trait    =c(\"T1\"   ,\"T1\"   ,\"T1\"   ,\"T2\"   ,\"T2\"),   modality =c(\"M1\"   ,\"M2\"   ,\"M3\"   ,\"M1\"   ,\"M2\"),    score    =c(0      , 0.5   , 1     , 0.2   , 2) )  ##----------------------------------------------------- ## Small dataset: taxonomy ##-----------------------------------------------------  Btaxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.2\", \"g.2\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.1\", \"f.1\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.1\", \"o.1\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\")   )  ##----------------------------------------------------- ## Community weighted mean score ##-----------------------------------------------------  # if verbose=TRUE, a warning will be given, as there is no trait information # for sp4 - this affects the trait density for station \"b\"  cwm.trait <- getTraitDensity (                         wide           = Bwide,                           trait          = Btraits,                          trait.class    = Btraits.lab$trait,                          trait.score    = Btraits.lab$score,                          scalewithvalue = TRUE,                          verbose        = FALSE)  cwm.trait #>   descriptor        T1   T2 #> 1       st.a 0.6666667 2.00 #> 2       st.b 0.7000000 0.65 attributes(cwm.trait)$notrait   # species that was ignored #> [1] \"sp.4\"  # same, but total trait values cwm.trait.2 <- getTraitDensity (                         wide           = Bwide,                           trait          = Btraits,                          trait.class    = Btraits.lab$trait,                          trait.score    = Btraits.lab$score,                          scalewithvalue = FALSE,                          verbose        = FALSE)  cwm.trait.2 #>   descriptor  T1  T2 #> 1       st.a 2.0 6.0 #> 2       st.b 4.2 3.9  # Traits from all taxa in the dataset, including high-level information   cwm.trait.2 <- getTraitDensity (                         wide           = Bwide,                           trait          = Btraits,                          trait.class    = Btraits.lab$trait,                          trait.score    = Btraits.lab$score,                          taxonomy       = Btaxonomy,                         scalewithvalue = TRUE)  cwm.trait.2 #>   descriptor        T1        T2 #> 1       st.a 0.6666667 2.0000000 #> 2       st.b 0.7250000 0.7142857 attributes(cwm.trait.2)$notrait #> [1] NA  # Same but keeping fuzzy scores  cwm.trait.3 <- getTraitDensity (                         wide           = Bwide,                           trait          = Btraits,                          taxonomy       = Btaxonomy,                         scalewithvalue = TRUE)  cwm.trait.3 #>   descriptor      T1_M1     T1_M2     T1_M3     T2_M1     T2_M2 #> 1       st.a 0.00000000 0.6666667 0.3333333 0.0000000 1.0000000 #> 2       st.b 0.08571429 0.3785714 0.5357143 0.7142857 0.2857143  ##----------------------------------------------------- ## categorical traits ##-----------------------------------------------------  # Note: no data for \"sp.4\"  Bcategory <- data.frame(   taxon   = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\",\"sp.6\"),   C1      = c(   \"A\",   \"B\",   \"A\",   \"C\",   \"C\") )  if (FALSE) { # this will not work, as trait should be numerical cwm.trait.4 <- getTraitDensity (                         wide           = Bwide,                           trait          = Bcategory,                          taxonomy       = Btaxonomy,                         scalewithvalue = TRUE) }  crisp2fuzzy(Bcategory) #>   taxon C1_A C1_B C1_C #> 1  sp.1    1    0    0 #> 2  sp.2    0    1    0 #> 3  sp.3    1    0    0 #> 4  sp.5    0    0    1 #> 5  sp.6    0    0    1  # this will  work, as categorical traits -> numerical cwm.trait.4 <- getTraitDensity (                         wide           = Bwide,                           trait          = crisp2fuzzy(Bcategory),                          taxonomy       = Btaxonomy,                         scalewithvalue = TRUE) cwm.trait.4 #>   descriptor      C1_A       C1_B      C1_C #> 1       st.a 0.6666667 0.33333333 0.0000000 #> 2       st.b 0.5000000 0.07142857 0.4285714"},{"path":"/reference/long2wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for conversion from long to wide format and vice versa. — Conversion functions","title":"Functions for conversion from long to wide format and vice versa. — Conversion functions","text":"long2wide casts data long wide format. w2lDensity casts density data wide long format. w2lTrait casts trait data wide long format. wide2long casts data wide long format. l2wDensity casts density data long wide format. l2wTrait casts trait data long wide format.","code":""},{"path":"/reference/long2wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for conversion from long to wide format and vice versa. — Conversion functions","text":"","code":"wide2long(wide, d.column = 1, w.names = NULL,            absences = FALSE)  w2lDensity(wide, d.column = 1, taxon.names = NULL,             absences = FALSE)   w2lTrait(wide, t.column = 1, trait.names = NULL,             absences = FALSE)   long2wide(row, column, value, averageOver = NULL,          taxonomy = NULL, subset)          l2wDensity(descriptor, taxon, value, averageOver = NULL,          taxonomy = NULL, subset)          l2wTrait(trait, taxon, value, averageOver = NULL,          taxonomy = NULL, subset)"},{"path":"/reference/long2wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for conversion from long to wide format and vice versa. — Conversion functions","text":"wide data, *WIDE* format. density data, data.frame matrix (descriptor x taxon) information (density data), first column usually contains descriptor name. trait data data.frame (taxon x trait) information, first column generally contains names taxa. also allowed descriptors row.names data.frame -requires setting d.column=0. row vector data.frame contains data used label rows wide format. can consist multiple colums. column vector data used label columns wide format. descriptor name(s) descriptor, .e. ** data taken, e.g. station names. Either vector, list, data.frame matrix (multiple columns). can type numerical, character, factor. data.frame list \"names\" used output; vector, argument name used output. taxon gives taxonomic name(s) (e.g. species). length (number rows ) descriptor. Can list (data.frame one column), vector. data.frame list \"name\" column used output; vector, argument name used. value vector list contains *values* data, usually density. length (number rows ) descriptor taxon. function getDensity, value can also multi-column data.frame matrix. averageOver vector *replicates* averages need taken. length (number rows ) descriptor. subset logical expression indicating elements keep: missing values taken FALSE. NULL, absent, elements used. Note subset taken ** number samples average per descriptor calculated, also work selecting certain taxa may present replicates averaged. taxonomy taxonomic information; first column matched taxon, regardless name. d.column position(s) name(s) column(s) holds descriptors (density) data set, removed calculations. default first column holding descriptors. NULL, 0, separate column names, row.names dataset used descriptor names. t.column position(s) name(s) column(s) holds taxon names (trait) data set, removed calculations. default first column holding taxa. NULL, 0, separate column names, row.names dataset used taxon names. trait (taxon x trait) data (descriptor x trait) data, WIDE format. Traits can fuzzy coded. default setting, first column contains name taxon, t.column=1. also allowed taxa row.names data.frame - set t.column=0. w.names, taxon.names, trait.names names items constituting columns wide dataset. given, columnames (minus d.column) used. Input data.frame want set names columns long format. absences TRUE long format contains 0's absences","code":""},{"path":"/reference/long2wide.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for conversion from long to wide format and vice versa. — Conversion functions","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":[]},{"path":"/reference/long2wide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for conversion from long to wide format and vice versa. — Conversion functions","text":"long2wide wide2long: two ways density data can inputted: descriptor, taxon, value, replicates, ... vectors density data *LONG* format: (, , replicates (averageOver), value); vectors equal length (NULL). wide density data *WIDE* format, .e. matrix descriptor (perhaps replicates) first column, taxon column names (excluding first column), content data density.","code":""},{"path":"/reference/long2wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for conversion from long to wide format and vice versa. — Conversion functions","text":"","code":"## ==================================================== ## Long to wide format ## ====================================================  ##----------------------------------------------------- ## A small dataset with replicates ##-----------------------------------------------------  # 2 stations, 2 replicates for st.a, one replicate for st.b Bdata.rep <- data.frame(   station   = c(\"st.a\",\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\"),   replicate = c(     1,     1,    2,     1,     1,     1),   species   = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.3\",\"sp.4\",\"sp.5\"),   density   = c(     1,     2,    3,     3,     1,     3) ) Bdata.rep #>   station replicate species density #> 1    st.a         1    sp.1       1 #> 2    st.a         1    sp.2       2 #> 3    st.a         2    sp.1       3 #> 4    st.b         1    sp.3       3 #> 5    st.b         1    sp.4       1 #> 6    st.b         1    sp.5       3  ##----------------------------------------------------- ## Go to wide format, average of replicates ##-----------------------------------------------------  with (Bdata.rep,    l2wDensity(value      = density,              descriptor  = station,              taxon       = species,              averageOver = replicate)) #>   descriptor sp.1 sp.2 sp.3 sp.4 sp.5 #> 1       st.a    2    1    0    0    0 #> 2       st.b    0    0    3    1    3  ##----------------------------------------------------- ## Go to wide format, keep replicates ##-----------------------------------------------------  with (Bdata.rep,    l2wDensity(value      = density,              descriptor = cbind(station, replicate),              taxon      = species)) #>   station replicate sp.1 sp.2 sp.3 sp.4 sp.5 #> 1    st.a         1    1    2    0    0    0 #> 2    st.b         1    0    0    3    1    3 #> 3    st.a         2    3    0    0    0    0  ##----------------------------------------------------- ## Go to wide format, ADD replicates ##-----------------------------------------------------  with (Bdata.rep,    l2wDensity(value      = density,              descriptor = station,               taxon      = species)) #>   descriptor sp.1 sp.2 sp.3 sp.4 sp.5 #> 1       st.a    4    2    0    0    0 #> 2       st.b    0    0    3    1    3   ## ==================================================== ## A small dataset without replicates ## ====================================================  Bdata <- data.frame(   station = c(\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\",\"st.c\"),   species = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.3\",\"sp.4\",\"sp.5\"),   density = c(1, 2, 3, 3, 1, 3) )  ##----------------------------------------------------- ## From long to wide format ##-----------------------------------------------------  Bwide <- with (Bdata,    l2wDensity (value      = density,               descriptor = station,               taxon      = species)) Bwide #>   descriptor sp.1 sp.2 sp.3 sp.4 sp.5 #> 1       st.a    1    2    0    0    0 #> 2       st.b    3    0    3    1    0 #> 3       st.c    0    0    0    0    3   ## ==================================================== ## Small dataset: taxonomy ## ====================================================  Btaxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.2\", \"g.2\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.1\", \"f.1\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.1\", \"o.1\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\")   )  ##----------------------------------------------------- ## density on higher taxonomic level ##-----------------------------------------------------  # add genus, family... to the density data  Bdata.ext <- merge(Bdata, Btaxonomy) head(Bdata.ext)    #>   species station density genus family order class #> 1    sp.1    st.a       1   g.1    f.1   o.1   c.1 #> 2    sp.1    st.b       3   g.1    f.1   o.1   c.1 #> 3    sp.2    st.a       2   g.2    f.1   o.1   c.1 #> 4    sp.3    st.b       3   g.2    f.1   o.1   c.1 #> 5    sp.4    st.b       1   g.2    f.1   o.1   c.1 #> 6    sp.5    st.c       3   g.3    f.2   o.2   c.1  # estimate (summed) density on genus level  Bwide.genus <- with (Bdata.ext,    l2wDensity(descriptor = station,               taxon      = genus,              value      = density)                     )  Bwide.genus #>   descriptor g.1 g.2 g.3 #> 1       st.a   1   2   0 #> 2       st.b   3   4   0 #> 3       st.c   0   0   3  ##----------------------------------------------------- ## select part of the data ##-----------------------------------------------------  # return species density for g.2 only with (Bdata.ext,    l2wDensity(value     = density,              descriptor = station,              taxon      = species,              subset     = genus==\"g.2\")       ) #>   descriptor sp.2 sp.3 sp.4 #> 1       st.a    2    0    0 #> 2       st.b    0    3    1  # create summed values for g.2 only with (Bdata.ext,    l2wDensity(value     = density,              descriptor = station,              taxon      = genus,              subset     = genus==\"g.2\")       ) #>   descriptor g.2 #> 1       st.a   2 #> 2       st.b   4  ## ==================================================== ## From wide to long format ## ====================================================  Bwide <- data.frame(station=c(\"Sta\", \"Stb\", \"Stc\"),                     sp1    =c(    1,     3,     0),                     sp2    =c(    2,     0,     0),                     sp3    =c(    0,     0,     3))  # this long format includes the 0 densities wide2long (wide = Bwide, absences=TRUE) #>   station name value #> 1     Sta  sp1     1 #> 2     Stb  sp1     3 #> 3     Stc  sp1     0 #> 4     Sta  sp2     2 #> 5     Stb  sp2     0 #> 6     Stc  sp2     0 #> 7     Sta  sp3     0 #> 8     Stb  sp3     0 #> 9     Stc  sp3     3  # this labels the species column appropriately wide2long (wide = Bwide, w.name=data.frame(species=colnames(Bwide)[-1])) #>   station species value #> 1     Sta     sp1     1 #> 2     Stb     sp1     3 #> 3     Sta     sp2     2 #> 4     Stc     sp3     3"},{"path":"/reference/MWTLdensitydata.html","id":null,"dir":"Reference","previous_headings":"","what":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"MWTL Northsea macrobenthos data (1995 - 2018) dataset contains: Macrofauna species density biomass (MWTL$density) abiotic conditions (MWTL$abiotics), station types (MWTL$types),    sediment composition (MWTL$sediment) station positions (MWTL$stations) MWTL$contour: depth contourlines mapping.","code":""},{"path":"/reference/MWTLdensitydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"","code":"data(MWTL)"},{"path":"/reference/MWTLdensitydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"================== **MWTL$density**:  main Northsea MWTL benthos data set, containing species  information 103 stations sampled yearly basis 1995 till 2010,  sampling less frequent: 2012, 2015 2018. data, long format, data.frame following columns: station, MWTL station name (details MWTL$stations). date, sampling date.     Note, string; can converted POSIXct :     .POSIXct(MWTL$density$date, format='%d-%m-%Y').      year can extracted      1900+.POSIXlt(MWTL$density$date, format='%d-%m-%Y')$year. year, year sampling taxon, taxon name used (usually species); derived original taxon MWTL data follows:     original taxon e.g. species kept, minimum 90% individual     organisms taxon species level, genus otherwise, family etc. taxon name checked worms database (details dataset Taxonomy). density, number individuals per m2. biomass, total biomass per m2, AFDW/m2 (ash-free dry weight) taxon.original, original taxon name data set (see details). ================== data.frame following columns:  taxon, genus, family, order, class,  phylum, AphiaID. ========================================= **MWTL$abiotics MWTL$types**:  abiotic conditions sampling stations, numerical values (MWTL$abiotics) typologies (MWTL$types), averaged years. MWTL$abiotics data.frame following columns:   CHECK ! station, MWTL station name. current, mean current speed, [m/s] wave,   wave energy              [Pa] disturb,           ???             [???] sal,      salinity                  [-] pelag.PP, pelagic Primary Production (spring) [?? mg C m-2 d-1???] mud,                        mud             [-] gravel,                     gravel          [-] sand,                       sand            [-] PP,        pelagic PP (sping) [??  mg C m-2 d-1??] POM, particulate organic matter               [%] POC, particulate organic carbon               [%] Aspect,                     Aspect          [???] Curvature,                  Curvature       [???] Rugosity,                  Rugosity2       [???] Northing,                   Northing        [???] Slope,                      Slope           [???] MWTL$types categorizes stations number types: station, MWTL station name. depth (m) shallow: < 10, Shallow: [10; 20[, Intermediate: [20; 30[, Deep: [30; 40[, deep: >= 40 current (m/s): low: < 0.15, Low: [0.15; 0.20[, Intermediate: [0.20; 0.25[, High: [0.25; 0.30[, high: >= 0.30 numbers Monthly median values, meters per second averaged 1996 2008 wave energy (Pa): low: < 0.5, Low: [0.5; 1.0[, Intermediate: [1.0; 1.5[, High: [1.5; 2.0[, high: >= 2.0 ; data monthly median values pascals averaged 1996 2008. stratification PM : Permanently mixed FI : Freshwater influence : Intermittently stratified SS : Seasonally stratified TR : Transitional sediment Muddy includes Mud, Sandy mud, Sandy slightly gravely mud, Muddy sand; Sandy means Sand; Coarse includes: Gravel muddy sand, Slightly gravely sand, Gravely sand, Sandy gravel, Gravel stone; Mixed includes Gravely slightly muddy sand, clay <8 um, silt: 8-63,  fine sand: 62-125, fine sand: 125-250, medium sand: 250-500, coarse sand: 500-1000, coarse sand: 1000-2000, gravel: >2000 um (micrometer). BPI_xx Benthic Terrain Classification parameters, bathymetric position index dynamics L: low H: high area DOG: Doggersbank OYS: Oystergrounds : Offshore COA: Coastal zone ================== **MWTL$stations**: positions different stations, WGS84 format station, MWTL station name. x, degrees longitude y, degrees latitude ================== **MWTL$sediment**:  records sediment characteristics (median grain size silt content) different stations years. data \"BREEVTN11\" \"BREEVTN16\" \"WADDKT05\" missing. data.frame : station, MWTL station name. year, sampling year. D50, median grain size sediment, micrometer silt, silt clay content (< 63 micrometer), percentage De sediment grainsize determined laserdiffraction using Malvern Mastersizer.  Values denote weight percentages dryweight total sediment sample, big shells large animals removed. ================== **MWTL$contours**: data plotting depth contours area.   contourlines (x-, y) derived GEBCO high-resolution bathymetry,   using contourLines R-function. data set contains: x: longitude, [dgE] y: latitude, [dgN] z: corresponding depths, [m]","code":""},{"path":"/reference/MWTLdensitydata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"dataset **Taxonomy**:  contains taxonomic information original adjusted taxon MWTL$density,  derived World Register Marine Species (WORMS), using R-package worms.","code":""},{"path":"/reference/MWTLdensitydata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"macrobenthos data Northsea (MWTL) commissioned   \"Ministerie van Infrastructuur en Milieu, Rijkswaterstaat Centrale   Informatievoorziening (RWS, CIV)\". MWTL stands Monitoring Waterstaatkundige Toestand des Lands (dutch). Sediment sampled Reineck Boxcorer (0,078 m2). Macrofauna sieved 1 mm mesh.  animals determined, except much residue organisms,  case samples subsampled, molluscs crustaceans  least 100 individuals, polychaetes least 150 individuals determined. Biomass determined ash-free dryweight: individuals dried >48 hours  65 dgC, cooled exsiccator least 30 minutes weighed  (precision 0,01 mg), determining dryweight. ashed  oven 530 dgC (2,5, 4 8 hour, depending size organisms).  Following ashing, weighed, cooling least 45 minutes  exsiccator. Bivalvia Gastropoda =7 mm ashed without shell,  smaller 7 mm shell removed. AFDW = (dryweight + weight cup) ? (ash weight + weight cup).","code":""},{"path":"/reference/MWTLdensitydata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":"/reference/MWTLdensitydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"taxonomic information created using worms package: Jan Holstein (2018). worms: Retrieving Aphia Information World Register Marine Species. R package version 0.2.2. https://CRAN.R-project.org/package=worms L. Leewis, E.C. Verduin, R. Stolk ; Eurofins AquaSense Macrozoobenthosonderzoek de Rijkswateren met boxcorer, jaarrapportage MWTL 2015 : waterlichaam: Noordzee Publicatiedatum: 31-03-201775 p. Projectnummer Eurofins AquaSense: J00002105.  Revisie 2, opdracht van Ministerie van Infrastructuur en Milieu,  Rijkswaterstaat Centrale Informatievoorziening (RWS, CIV)","code":""},{"path":[]},{"path":"/reference/MWTLdensitydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The benthic fauna data from the Dutch part of the Northsea, including abiotic conditions. — Dutch Northsea data","text":"","code":"##----------------------------------------------------- ## Show contents of the data set ##-----------------------------------------------------  metadata(MWTL$sediment) #>   name                               description      units #> 1  D50          median grain size, in micrometer micrometer #> 2 Silt Silt+Clay fraction (< 63 micrometer) in %          % metadata(MWTL$abiotics) #>               name                       description      units #> 1            depth                       water depth          m #> 2              D50                 Median grain size micrometer #> 3              mud             mud fraction (<63 um)          - #> 4             sand       sand fraction (64 -2000 um)          - #> 5           gravel        gravel fraction (>2000 um)          - #> 6         salinity                          salinity            #> 7         porosity          volumetric water content          - #> 8     permeability                      permeability         m2 #> 9              POC particulate organic C in sediment          % #> 10              TN               total N in sediment          % #> 11   surfaceCarbon particulate organic C in upper cm          % #> 12 surfaceNitrogen               total N in upper cm          % #> 13  orbitalVelMean             mean orbital velocity        m/s #> 14   orbitalVelMax          maximal orbital velocity        m/s #> 15    tidalVelMean               mean tidal velocity        m/s #> 16     tidalVelMax            maximal tidal velocity        m/s #> 17       bedstress                  bed shear stress         Pa #> 18       EUNIScode                         EUNIScode          - #> 19             SAR      swept area ratio (fisheries) m2/m2/year metadata(MWTL$types) #> $stratification #> [1] \"PM=Permanently mixed, FI=Freshwater influence, IS=Intermittently stratified, SS=Seasonally stratified, TR=Transitional\" #>  #> $sediment #> [1] \"'Muddy'=[Mud, Sandy mud, Sandy and slightly gravely mud, Muddy sand]; 'Sandy'= [Sand]; 'Coarse'=[Gravel and muddy sand, Slightly gravely sand, Gravely sand, Sandy gravel, Gravel and stone]; 'Mixed' = [Gravely and slightly muddy sand], where 'clay'=[<8 um], 'silt'=[8-63], ' 'very fine sand'=[62-125], 'fine sand'=[125-250], 'medium sand'=[250-500], 'coarse sand'=[500-1000], 'very coarse sand'=[1000-2000], 'gravel'=[>2000 um] (micrometer).\" #>  #> $depth #> [1] \"'Very shallow'=[<10m]; 'Shallow'=[10; 20[; 'Intermediate'=[20; 30[; 'Deep'=[30; 40[; 'Very deep'=[>= 40m]\" #>  #> $current #> [1] \"'Very low'=[<0.15]; 'Low'=[0.15; 0.20[; 'Intermediate'=[0.20; 0.25[; 'High'=[0.25; 0.30[; 'Very high'=[>=0.30m/s]\" #>  #> $wave #> [1] \"Very low < 0.5; Low [0.5; 1.0[; Intermediate [1.0; 1.5[; High [1.5; 2.0[; Very high >= 2.0\" #>  #> $BPx #> [1] \"bathymetric position index derived from ship-borne multibeam swath acoustic data\" #>  #> $dynamics #> [1] \"L=low; H=high\" #>  #> $area #> [1] \"Coast (COA), Doggerbank (DOG), Offshore (OFF), Oystergrounds (OYS)\" #>  #> $group #> [1] \"derived from first part of station name\" #>  metadata(MWTL$density) #>             name                                description          units #> 1        station                               station name                #> 2           date                    sampling date, a string                #> 3          taxon taxon name, checked by worms, and adjusted                #> 4        density                      species total density individuals/m2 #> 5        biomass          species total ash-free dry weight       gAFDW/m2 #> 6 taxon.original                        original taxon name                 ##----------------------------------------------------- ## SPECIES data ##-----------------------------------------------------  head(MWTL$density) #>     station       date year                       taxon density biomass #> 1 BREEVTN02 27-06-1995 1995 Bathyporeia guilliamsoniana    14.6  0.0044 #> 2 BREEVTN02 27-06-1995 1995                 Callianassa    58.5  1.3986 #> 3 BREEVTN02 27-06-1995 1995           Chaetozone setosa    14.6  0.0073 #> 4 BREEVTN02 27-06-1995 1995          Chamelea striatula    14.6  2.7738 #> 5 BREEVTN02 27-06-1995 1995               Echinocardium    43.9  0.0044 #> 6 BREEVTN02 27-06-1995 1995               Echinocardium    14.6  4.9435 #>                taxon.original #> 1 Bathyporeia guilliamsoniana #> 2     Callianassa subterranea #> 3           Chaetozone setosa #> 4          Chamelea striatula #> 5               Echinocardium #> 6      Echinocardium cordatum  # The number of species per station (over all years)  Nspecies <- tapply(X     = MWTL$density$taxon,                     INDEX = MWTL$density$station,                     FUN   = function(x)length(unique(x)))  summary(Nspecies) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   16.00   58.50   88.00   82.14  105.50  132.00   # Per year Nspyear <- tapply(X     = MWTL$density$taxon,                    INDEX = list(MWTL$density$station, MWTL$density$year),                    FUN   = function(x)length(unique(x)))  colMeans(Nspyear, na.rm=TRUE) #>     1995     1996     1997     1998     1999     2000     2001     2002  #> 24.07000 18.60606 21.00000 21.33000 20.46000 22.01000 22.39000 24.01000  #>     2003     2004     2005     2006     2007     2008     2009     2010  #> 22.14000 21.95000 21.00980 20.37000 18.24000 19.09000 18.88000 20.97000  #>     2012     2015     2018  #> 19.56000 20.30303 19.60204   # The number of times a species has been found Nocc <- tapply(X     = MWTL$density$station,                 INDEX = MWTL$density$taxon,                 FUN   = length) head(sort(Nocc, decreasing = TRUE))     #most often encountered taxa #>           Nephtys          Magelona          Nemertea Spiophanes bombyx  #>              2785              1760              1272              1198  #>          Phoronis     Echinocardium  #>               996               948   # total density densyear <- tapply(X     = MWTL$density$density,                     INDEX = list(MWTL$density$station, MWTL$density$year),                     FUN   = sum) boxplot(densyear, log=\"y\")   ##----------------------------------------------------- ## ABIOTICS data ##-----------------------------------------------------  summary(MWTL$abiotics) #>    station              depth            D50             mud          #>  Length:103         Min.   : 5.80   Min.   : 90.0   Min.   :0.00002   #>  Class :character   1st Qu.:24.10   1st Qu.:148.4   1st Qu.:0.00100   #>  Mode  :character   Median :29.60   Median :205.1   Median :0.01105   #>                     Mean   :30.37   Mean   :222.6   Mean   :0.05160   #>                     3rd Qu.:39.50   3rd Qu.:273.4   3rd Qu.:0.06319   #>                     Max.   :53.70   Max.   :527.1   Max.   :0.34772   #>                                     NA's   :3                         #>       sand            gravel             salinity        porosity      #>  Min.   :0.6523   Min.   :0.0001033   Min.   :27.63   Min.   :0.3821   #>  1st Qu.:0.9368   1st Qu.:0.0001251   1st Qu.:32.91   1st Qu.:0.3955   #>  Median :0.9889   Median :0.0001861   Median :34.30   Median :0.4056   #>  Mean   :0.9483   Mean   :0.0010354   Mean   :33.46   Mean   :0.4158   #>  3rd Qu.:0.9990   3rd Qu.:0.0005031   3rd Qu.:34.53   3rd Qu.:0.4312   #>  Max.   :1.0000   Max.   :0.0201886   Max.   :34.77   Max.   :0.5102   #>                                                                        #>   permeability            POC                TN          surfaceCarbon     #>  Min.   :4.759e-15   Min.   :0.04682   Min.   :0.03000   Min.   :0.07304   #>  1st Qu.:9.380e-14   1st Qu.:0.16854   1st Qu.:0.03426   1st Qu.:0.26410   #>  Median :3.882e-13   Median :0.22429   Median :0.03690   Median :0.34363   #>  Mean   :1.112e-12   Mean   :0.27913   Mean   :0.04310   Mean   :0.42828   #>  3rd Qu.:1.030e-12   3rd Qu.:0.41189   3rd Qu.:0.04940   3rd Qu.:0.62366   #>  Max.   :1.530e-11   Max.   :0.69416   Max.   :0.08074   Max.   :1.11217   #>                      NA's   :1         NA's   :1         NA's   :1         #>  surfaceNitrogen   orbitalVelMean    orbitalVelMax     tidalVelMean    #>  Min.   :0.04522   Min.   :0.02655   Min.   :0.2493   Min.   :0.1100   #>  1st Qu.:0.05343   1st Qu.:0.04995   1st Qu.:0.4157   1st Qu.:0.1569   #>  Median :0.05742   Median :0.06651   Median :0.5075   Median :0.2261   #>  Mean   :0.06652   Mean   :0.08495   Mean   :0.5785   Mean   :0.2408   #>  3rd Qu.:0.07421   3rd Qu.:0.08331   3rd Qu.:0.6041   3rd Qu.:0.2998   #>  Max.   :0.12846   Max.   :0.77342   Max.   :3.3570   Max.   :0.4878   #>  NA's   :1                                                             #>   tidalVelMax       bedstress       EUNIScode              SAR         #>  Min.   :0.2501   Min.   :0.0500   Length:103         Min.   :0.1100   #>  1st Qu.:0.3352   1st Qu.:0.1350   Class :character   1st Qu.:0.4766   #>  Median :0.4862   Median :0.3300   Mode  :character   Median :0.6968   #>  Mean   :0.5128   Mean   :0.4562                      Mean   :1.1262   #>  3rd Qu.:0.6432   3rd Qu.:0.6900                      3rd Qu.:1.3009   #>  Max.   :0.9724   Max.   :1.3950                      Max.   :6.8926   #>                   NA's   :4                                             MWTLabiot <- merge(MWTL$stations, MWTL$abiotics) with(MWTLabiot, mapBtrait(x, y, colvar=sand,                            pch=16, main=\"sand fraction\"))   # mud, plotted on large Northsea map with(MWTLabiot, mapBtrait(x, y, colvar=mud, contours=NSBS$contours,                            pch=16, main=\"mud fraction\"))   # show the different abiotic data sets metadata(MWTL$abiotics) #>               name                       description      units #> 1            depth                       water depth          m #> 2              D50                 Median grain size micrometer #> 3              mud             mud fraction (<63 um)          - #> 4             sand       sand fraction (64 -2000 um)          - #> 5           gravel        gravel fraction (>2000 um)          - #> 6         salinity                          salinity            #> 7         porosity          volumetric water content          - #> 8     permeability                      permeability         m2 #> 9              POC particulate organic C in sediment          % #> 10              TN               total N in sediment          % #> 11   surfaceCarbon particulate organic C in upper cm          % #> 12 surfaceNitrogen               total N in upper cm          % #> 13  orbitalVelMean             mean orbital velocity        m/s #> 14   orbitalVelMax          maximal orbital velocity        m/s #> 15    tidalVelMean               mean tidal velocity        m/s #> 16     tidalVelMax            maximal tidal velocity        m/s #> 17       bedstress                  bed shear stress         Pa #> 18       EUNIScode                         EUNIScode          - #> 19             SAR      swept area ratio (fisheries) m2/m2/year  ##----------------------------------------------------- ## COMBINATIONS ##-----------------------------------------------------  NSsp_abi <- merge(MWTL$density, MWTL$sediment) ECH      <- subset(NSsp_abi, subset=taxon==\"Echinocardium\")  with(ECH, points2D(D50, density, log=\"xc\", colvar=density, pch=16))   # add station coordinates ECH <- merge(ECH, MWTL$stations)  ##----------------------------------------------------- ## From long format to wide format (stations x species) ##-----------------------------------------------------  NSwide <- with (MWTL$density,       l2wDensity(descriptor  = station,                  taxon       = taxon,                  value       = density,                  averageOver = year))  PP <- princomp(t(NSwide[,-1])) if (FALSE) {  biplot(PP) }  ##----------------------------------------------------- ## Community weighted mean score. ##-----------------------------------------------------  # Traits estimated for absences, by including taxonomy   NStrait.lab <- metadata(Traits_nioz) trait.cwm <- getTraitDensity (wide           = NSwide,                                trait          = Traits_nioz,                                taxonomy       = Taxonomy,                               trait.class    = NStrait.lab$trait,                                trait.score    = NStrait.lab$score,                                scalewithvalue = TRUE)  head(trait.cwm, n=c(3,4))   #>   descriptor Age.at.maturity Annual.fecundity Biodeposition #> 1  BREEVTN02       0.3292563        0.3976374     0.2097908 #> 2  BREEVTN03       0.3214742        0.4633356     0.1636630 #> 3  BREEVTN04       0.1273492        0.3011162     0.1416944  Stations.traits <- merge(MWTL$stations,  trait.cwm,                           by.x=\"station\", by.y=\"descriptor\")  ##----------------------------------------------------- ## Maps ##-----------------------------------------------------  par(mfrow=c(2,2))  with(Stations.traits, mapBtrait(x, y, colvar=Biodeposition,                                 main=\"Biodeposition\", pch=16)) with(Stations.traits, mapBtrait(x, y, colvar=Biodiffusion,                                 main=\"Biodiffusion\", pch=16)) with(Stations.traits, mapBtrait(x, y, colvar=Biostabilisation,                                 main=\"Biostabilisation\", pch=16)) with(Stations.traits, mapBtrait(x, y, colvar=Burrow.width,                                 main=\"Burrow width\", pch=16))   ##----------------------------------------------------- ## Show the depth contours ##-----------------------------------------------------  mapBtrait(contours=MWTL$contours, draw.levels=TRUE, key.levels=TRUE)  # Use a different color scheme collev <- function(n) c(\"black\",    ramp.col(col=c(\"darkgreen\", \"darkblue\"), n=n-1)) mapBtrait(contours=MWTL$contours, draw.levels=TRUE, col.levels=collev,   key.levels=TRUE)"},{"path":"/reference/NSBSdensitydata.html","id":null,"dir":"Reference","previous_headings":"","what":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"NSBS Northsea macrobenthos data (1986). Samples within (-3 9) dgE (51.00 60.75) dgN data contain:  Macrofauna species density biomass (NSBS$density) Abiotic conditions (NSBS$abiotics), station positions (NSBS$stations) NSBS$contours: contourlines mapping.","code":""},{"path":"/reference/NSBSdensitydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"","code":"data(NSBS)"},{"path":"/reference/NSBSdensitydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"================== **NSNS$density**:  main Northsea NSBS benthos data set, containing species  information 234 stations sampled 1985-1986. data, long format, data.frame following columns: station, NSBS station name (details NSBS$stations). date, sampling date.     Note, string; can converted POSIXct :     \".POSIXct(NSBS$density$date, format='%d-%m-%Y')\".     year can extracted      1900+.POSIXlt(NSBS$density$date, format='%d-%m-%Y')$year. year, year sampling taxon, taxon name used (usually species), checked worms database (details dataset Taxonomy). density, number individuals per m2. biomass, total biomass per m2, AFDW/m2 (ash-free dry weight). ================== **NSBS$abiotics**:  abiotic conditions sampling stations. NSBS$abiotics data.frame following columns: station, NSBS station name depth, water depth [m] mud, mud content sediment, fraction [-] porosity, volumetric water content [-] permeability, sediment permeability [m2] max.currentspeed, maximum current speed [m/s] ================== **NSBS$stations**: positions different stations, WGS84 format station, NSBS station name x, degrees longitude y, degrees latitude ================== **NSBS$contour**: data mapping contours. contourlines (x-, y) derived   GEBCO high-resolution bathymetry, creating contourlines. data set contains: station, NSBS station name x: longitude, [dgE] y: latitude, [dgN] z: corresponding depths, [m]","code":""},{"path":"/reference/NSBSdensitydata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"dataset **Taxonomy**:  contains taxonomic information original adjusted taxon NSBS$density,  derived World Register Marine Species (WORMS), using R-package worms.","code":""},{"path":"/reference/NSBSdensitydata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"NSBS contains macrofauna data 1986 North Sea Benthos Survey, activity Benthos Ecology Working Group ICES. Benthic samples taken standardised way, regular grid covering whole North Sea, analysed scientists 10 laboratories. Extensive work done standardise taxonomy identifications across different laboratories. Sediment sampled Reineck Boxcorer (0,078 m2). Macrofauna sieved 1 mm mesh.","code":""},{"path":"/reference/NSBSdensitydata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"Karline Soetaert <karline.soetaert@nioz.nl>","code":""},{"path":"/reference/NSBSdensitydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"taxonomic information created using worms package: Jan Holstein (2018). worms: Retrieving Aphia Information World Register Marine Species. R package version 0.2.2. https://CRAN.R-project.org/package=worms Heip, C.H.R.; Basford, D.; Craeymeersch, J..; Dewarumez, J.-M.; Dorjes, J.; de Wilde, P.; Duineveld, G.; Eleftheriou, .; Herman, P.M.J.; Kingston, K.; Niermann, U.; Kunitzer, .; Rachor, E.; Rumohr, H.; Soetaert, K.; Soltwedel, T. (1992). Trends biomass, density diversity North Sea macrofauna. ICES J. Mar. Sci./J. Cons. int. Explor. Mer 49: 13-22","code":""},{"path":[]},{"path":"/reference/NSBSdensitydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The ICES northsea benthic survey (NSBS) from 1986, including abiotic conditions. — Northsea Benthos","text":"","code":"##----------------------------------------------------- ## Show contents of the data set ##-----------------------------------------------------  metadata(NSBS$abiotics) #>               name                       description      units #> 1            depth                       water depth          m #> 2              D50                 Median grain size micrometer #> 3              mud             mud fraction (<63 um)          - #> 4             sand       sand fraction (64 -2000 um)          - #> 5           gravel        gravel fraction (>2000 um)          - #> 6         salinity                          salinity            #> 7         porosity          volumetric water content          - #> 8     permeability                      permeability         m2 #> 9              POC particulate organic C in sediment          % #> 10              TN               total N in sediment          % #> 11   surfaceCarbon particulate organic C in upper cm          % #> 12 surfaceNitrogen               total N in upper cm          % #> 13  orbitalVelMean             mean orbital velocity        m/s #> 14   orbitalVelMax          maximal orbital velocity        m/s #> 15    tidalVelMean               mean tidal velocity        m/s #> 16     tidalVelMax            maximal tidal velocity        m/s #> 17       bedstress                  bed shear stress         Pa #> 18       EUNIScode                         EUNIScode          - #> 19             SAR      swept area ratio (fisheries) m2/m2/year metadata(NSBS$density) #>      name                                description          units #> 1 station                               station name                #> 2    date                    sampling date, a string                #> 3   taxon taxon name, checked by worms, and adjusted                #> 4 density                      species total density individuals/m2  ##----------------------------------------------------- ## SPECIES data ##-----------------------------------------------------  head(NSBS$density) #>   station date          taxon density #> 1 ICES002 1986     Clitellata     1.0 #> 2 ICES002 1986    Thecostraca    24.0 #> 3 ICES003 1986 Ophiura albida     1.3 #> 4 ICES003 1986    Thecostraca   278.0 #> 5 ICES003 1986   Abludomelita     1.3 #> 6 ICES003 1986        Glycera     6.3  # The number of species per station (over all years) Nspecies <- tapply(X     = NSBS$density$taxon,                     INDEX = NSBS$density$station,                     FUN   = function(x)length(unique(x))) summary(Nspecies) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    1.00   30.25   43.00   43.09   55.75   96.00   # The number of times a species has been found Nocc     <- tapply(X     = NSBS$density$station,                     INDEX = NSBS$density$taxon,                     FUN   = length) head(sort(Nocc, decreasing = TRUE))     #most often encountered taxa #>   Spiophanes bombyx   Scoloplos armiger              Pholoe    Goniada maculata  #>                 217                 196                 188                 185  #>        Ampharetidae Amphiura filiformis  #>                 183                 183   # total density per station densstat <- tapply(X     = NSBS$density$density,                     INDEX = list(NSBS$density$station),                     FUN   = sum) hist(densstat, n=30)   ##----------------------------------------------------- ## ABIOTICS ##-----------------------------------------------------  summary(NSBS$abiotics) #>    station              depth             D50               mud            #>  Length:235         Min.   :  4.20   Min.   :0.03516   Min.   :0.0002652   #>  Class :character   1st Qu.: 34.75   1st Qu.:0.14024   1st Qu.:0.0139084   #>  Mode  :character   Median : 57.50   Median :0.18710   Median :0.0349855   #>                     Mean   : 63.76   Mean   :0.29469   Mean   :0.0771892   #>                     3rd Qu.: 84.85   3rd Qu.:0.27823   3rd Qu.:0.0872650   #>                     Max.   :195.20   Max.   :5.58824   Max.   :0.9003331   #>                     NA's   :3        NA's   :1         NA's   :1           #>       sand           gravel             porosity       permeability        #>  Min.   : 9.86   Min.   :0.0000000   Min.   :0.3661   Min.   :-4.771e-08   #>  1st Qu.:85.57   1st Qu.:0.0005157   1st Qu.:0.3925   1st Qu.: 0.000e+00   #>  Median :93.09   Median :0.0055984   Median :0.4110   Median : 0.000e+00   #>  Mean   :88.38   Mean   :0.0389908   Mean   :0.4202   Mean   : 8.635e-08   #>  3rd Qu.:96.71   3rd Qu.:0.0350953   3rd Qu.:0.4358   3rd Qu.: 1.000e-12   #>  Max.   :99.97   Max.   :0.5836318   Max.   :0.7029   Max.   : 1.688e-05   #>  NA's   :1       NA's   :1                                                 #>       POC                TN          surfaceCarbon     surfaceNitrogen   #>  Min.   :0.04682   Min.   :0.01100   Min.   :0.07304   Min.   :0.01815   #>  1st Qu.:0.22743   1st Qu.:0.03796   1st Qu.:0.35539   1st Qu.:0.05845   #>  Median :0.29917   Median :0.04300   Median :0.46386   Median :0.06793   #>  Mean   :0.33695   Mean   :0.04895   Mean   :0.50761   Mean   :0.07394   #>  3rd Qu.:0.41622   3rd Qu.:0.05631   3rd Qu.:0.64319   3rd Qu.:0.08698   #>  Max.   :1.02022   Max.   :0.12488   Max.   :1.40612   Max.   :0.20045   #>  NA's   :1         NA's   :1         NA's   :1         NA's   :1         #>  orbitalVelMean     orbitalVelMax      tidalVelMean      tidalVelMax     #>  Min.   :0.003484   Min.   :0.06843   Min.   :0.07054   Min.   :0.1619   #>  1st Qu.:0.020203   1st Qu.:0.19295   1st Qu.:0.13072   1st Qu.:0.2938   #>  Median :0.037795   Median :0.32866   Median :0.16890   Median :0.3936   #>  Mean   :0.053431   Mean   :0.40298   Mean   :0.21072   Mean   :0.4741   #>  3rd Qu.:0.063635   3rd Qu.:0.51756   3rd Qu.:0.25985   3rd Qu.:0.5859   #>  Max.   :0.660648   Max.   :2.74205   Max.   :0.60274   Max.   :1.2783   #>  NA's   :1          NA's   :1         NA's   :1         NA's   :1        #>    bedstress        EUNIScode              SAR            #>  Min.   :0.00213   Length:235         Min.   : 0.004772   #>  1st Qu.:0.07000   Class :character   1st Qu.: 0.155010   #>  Median :0.14000   Mode  :character   Median : 0.447977   #>  Mean   :0.30296                      Mean   : 1.048422   #>  3rd Qu.:0.33500                      3rd Qu.: 1.339842   #>  Max.   :2.58000                      Max.   :20.729284   #>  NA's   :3                            NA's   :1            NSBSab <- merge(NSBS$stations, NSBS$abiotics) with(NSBSab, mapBtrait(x, y, colvar=mud, contours=NSBS$contours,                         pch=16, main=\"mud fraction\"))   metadata(NSBS$abiotics) #>               name                       description      units #> 1            depth                       water depth          m #> 2              D50                 Median grain size micrometer #> 3              mud             mud fraction (<63 um)          - #> 4             sand       sand fraction (64 -2000 um)          - #> 5           gravel        gravel fraction (>2000 um)          - #> 6         salinity                          salinity            #> 7         porosity          volumetric water content          - #> 8     permeability                      permeability         m2 #> 9              POC particulate organic C in sediment          % #> 10              TN               total N in sediment          % #> 11   surfaceCarbon particulate organic C in upper cm          % #> 12 surfaceNitrogen               total N in upper cm          % #> 13  orbitalVelMean             mean orbital velocity        m/s #> 14   orbitalVelMax          maximal orbital velocity        m/s #> 15    tidalVelMean               mean tidal velocity        m/s #> 16     tidalVelMax            maximal tidal velocity        m/s #> 17       bedstress                  bed shear stress         Pa #> 18       EUNIScode                         EUNIScode          - #> 19             SAR      swept area ratio (fisheries) m2/m2/year  ##----------------------------------------------------- ## COMBINATIONS ##-----------------------------------------------------  NSsp_abi <- merge(NSBS$density, NSBS$abiotics) ECH      <- subset(NSsp_abi, subset=taxon==\"Echinocardium cordatum\") with(ECH, plot(mud, density, pch=16, main=\"E. cordatum\",                 xlab=\"mud fraction\", ylab=\"density, ind/m2\"))   # add station coordinates ECH <- merge(ECH, NSBS$stations)  ##----------------------------------------------------- ## From long format to wide format (stations x species) ##-----------------------------------------------------  NSwide <- with (NSBS$density,           l2wDensity(descriptor = station,    # long2wide for density                     taxon      = taxon,                      value      = density))  PP <- princomp(t(NSwide[,-1])) if (FALSE) {  biplot(PP) }  ##----------------------------------------------------- ## Community mean weighted score for traits. ##-----------------------------------------------------  # Traits estimated for absences, by including taxonomy   Trait.lab <- metadata(Traits_nioz)  trait.cwm <- getTraitDensity(wide           = NSwide,                               trait          = Traits_nioz,                               taxonomy       = NSBS$taxonomy,                              trait.class    = Trait.lab$trait,                               trait.score    = Trait.lab$score,                               scalewithvalue = TRUE)  head(trait.cwm, n=c(3,4))   #>   descriptor Age.at.maturity Annual.fecundity Biodeposition #> 1    ICES002       0.2466667        0.4373333     0.6000000 #> 2    ICES003       0.2898844        0.4404432     0.5120424 #> 3    ICES004       0.1556037        0.3284367     0.1960335  Stations.traits <- merge(NSBS$stations, trait.cwm,                           by.x=\"station\", by.y=\"descriptor\")  par(mfrow=c(2,2))  with(Stations.traits, mapBtrait(x, y, colvar=Biodeposition,                                 main=\"Biodeposition\")) with(Stations.traits, mapBtrait(x, y, colvar=Biodiffusion,                                 main=\"Biodiffusion\")) with(Stations.traits, mapBtrait(x, y, colvar=Biostabilisation,                                 main=\"Biostabilisation\")) with(Stations.traits, mapBtrait(x, y, colvar=Burrow.width,                                 main=\"Burrow width\"))   ##----------------------------------------------------- ## Community mean weighted score for typological groups. ##-----------------------------------------------------  # Groups is in crisp format -> convert to fuzzy   Groups.fuz <- crisp2fuzzy(Groups[,c(\"taxon\", \"typology\")])  head (Groups, n=2) #>                 taxon Functional.group typology      description #> 1 Nephrops norvegicus               11   Deep3D Deep 3D burrower #> 2   Upogebia deltaura               11   Deep3D Deep 3D burrower head (Groups.fuz, n=c(2,5)) #>                 taxon typology_Deep3D typology_DeepTub typology_Epi3D #> 1 Nephrops norvegicus               1                0              0 #> 2   Upogebia deltaura               1                0              0 #>   typology_Foul #> 1             0 #> 2             0  group.cwm <- getTraitDensity(wide           = NSwide,                               trait          = Groups.fuz,                               scalewithvalue = TRUE)  head(group.cwm, n=c(3,4))   #>   descriptor typology_Deep3D typology_DeepTub typology_Epi3D #> 1    ICES002               0       0.00000000              0 #> 2    ICES003               0       0.00000000              0 #> 3    ICES004               0       0.06191872              0  summary(group.cwm) #>   descriptor        typology_Deep3D   typology_DeepTub  typology_Epi3D    #>  Length:234         Min.   :0.00000   Min.   :0.00000   Min.   :0.00000   #>  Class :character   1st Qu.:0.00000   1st Qu.:0.01365   1st Qu.:0.00000   #>  Mode  :character   Median :0.00000   Median :0.05694   Median :0.00000   #>                     Mean   :0.00303   Mean   :0.10945   Mean   :0.00147   #>                     3rd Qu.:0.00000   3rd Qu.:0.14237   3rd Qu.:0.00000   #>                     Max.   :0.07873   Max.   :0.86668   Max.   :0.13739   #>  typology_Foul      typology_MajBiot  typology_MinBiot  typology_Neutral   #>  Min.   :0.000000   Min.   :0.00000   Min.   :0.00000   Min.   :0.000000   #>  1st Qu.:0.000000   1st Qu.:0.06253   1st Qu.:0.04029   1st Qu.:0.000000   #>  Median :0.003142   Median :0.11540   Median :0.07770   Median :0.000000   #>  Mean   :0.051520   Mean   :0.13321   Mean   :0.10534   Mean   :0.003535   #>  3rd Qu.:0.023905   3rd Qu.:0.17352   3rd Qu.:0.13164   3rd Qu.:0.000000   #>  Max.   :1.000000   Max.   :0.55688   Max.   :0.62949   Max.   :0.094942   #>  typology_SesBiot  typology_ShalShel typology_SmalTub  typology_SurfDiff #>  Min.   :0.00000   Min.   :0.00000   Min.   :0.00000   Min.   :0.00000   #>  1st Qu.:0.01020   1st Qu.:0.02826   1st Qu.:0.03659   1st Qu.:0.09536   #>  Median :0.07073   Median :0.08966   Median :0.07601   Median :0.17046   #>  Mean   :0.13557   Mean   :0.12035   Mean   :0.11163   Mean   :0.22490   #>  3rd Qu.:0.23378   3rd Qu.:0.17512   3rd Qu.:0.16814   3rd Qu.:0.31458   #>  Max.   :0.74574   Max.   :0.76394   Max.   :0.47913   Max.   :0.85365    ##----------------------------------------------------- ## Show the depth contours ##-----------------------------------------------------  mapBtrait(contours=NSBS$contours, draw.levels=TRUE, key.levels=TRUE)  # Use a different color scheme collev <- function(n) c(\"black\",        ramp.col(col=c(\"darkgreen\", \"darkblue\"), n=n-1)) mapBtrait(contours=NSBS$contours, draw.levels=TRUE, col.levels=collev,   key.levels=TRUE)"},{"path":"/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"get Summary for station x taxon data (getSummary) — Summary statistics for density","title":"get Summary for station x taxon data (getSummary) — Summary statistics for density","text":"getSummary calculates summaries density data, .e. total densities number taxa.","code":""},{"path":"/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get Summary for station x taxon data (getSummary) — Summary statistics for density","text":"","code":"getSummary(descriptor, taxon, value, averageOver = NULL, taxonomy = NULL,          subset, what=c(\"density\", \"taxa\", \"occurrence\"),          wide.output = FALSE)"},{"path":"/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get Summary for station x taxon data (getSummary) — Summary statistics for density","text":"descriptor name(s) descriptor, .e. ** data taken, e.g. station names. Either vector, list, data.frame matrix (multiple columns). can type numerical, character, factor. data.frame list \"names\" used output; vector, argument name used output. taxon vector describing ** data ; gives taxonomic name (e.g. species). length (number rows ) descriptor. Can list (data.frame one column), vector. data.frame list \"name\" used output; vector, argument name used. value vector list contains *values* data, usually density. length (number rows ) descriptor taxon. function getDensity, value can also multi-column data.frame matrix. averageOver vector *replicates* averages need taken. length (number rows ) descriptor. taxonomy taxonomic information; first column matched taxon, regardless name. subset logical expression indicating elements keep: missing values taken FALSE. NULL, absent, elements used. Note subset taken ** number samples average per descriptor calculated, also work selecting certain taxa may present replicates averaged. summary statistic returned, one \"density\": total density per descriptor, \"taxa\": number taxa per descritpor, \"occurrence\": number occurrences species. wide.output TRUE, recast output wide format (default long format). makes sense descriptor matrix data.frame > 1 column; case, last column make columns.+","code":""},{"path":"/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get Summary for station x taxon data (getSummary) — Summary statistics for density","text":"getSummary returns list, containing mean densities (density)   number taxa (taxa) descriptor, number descriptors   taxa found (occurrence). case wide.output FALSE, data.frame long   format (descriptor, value); TRUE, descriptor feature   rows (bot last descriptor) columns (last descriptor).","code":""},{"path":"/reference/summary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get Summary for station x taxon data (getSummary) — Summary statistics for density","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":[]},{"path":"/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get Summary for station x taxon data (getSummary) — Summary statistics for density","text":"","code":"## ==================================================== ## A small dataset with replicates ## ====================================================  # 2 stations, 2 replicates for st.a, one replicate for st.b Bdata.rep <- data.frame(   station   = c(\"st.a\",\"st.a\",\"st.a\",\"st.b\",\"st.b\",\"st.b\"),   replicate = c(     1,     1,    2,     1,     1,     1),   species   = c(\"sp.1\",\"sp.2\",\"sp.1\",\"sp.3\",\"sp.4\",\"sp.5\"),   density   = c(     1,     2,    3,     3,     1,     3) ) Bdata.rep #>   station replicate species density #> 1    st.a         1    sp.1       1 #> 2    st.a         1    sp.2       2 #> 3    st.a         2    sp.1       3 #> 4    st.b         1    sp.3       3 #> 5    st.b         1    sp.4       1 #> 6    st.b         1    sp.5       3  ##----------------------------------------------------- ## Summary statistics ##-----------------------------------------------------  with (Bdata.rep,     getSummary(descriptor  = cbind(station, replicate),               value       = density,               taxon       = species,               wide.output = FALSE)) #> $density #>   station replicate density #> 1    st.a         1       3 #> 2    st.a         2       3 #> 3    st.b         1       7 #>  #> $taxa #>   station replicate taxa #> 1    st.a         1    2 #> 2    st.a         2    1 #> 3    st.b         1    3 #>  #> $occurrence #>   taxon occurrence #> 1  sp.1          2 #> 2  sp.2          1 #> 3  sp.3          1 #> 4  sp.4          1 #> 5  sp.5          1 #>   with (Bdata.rep,     getSummary(descriptor  = station,               averageOver = replicate,              value       = density,               taxon       = species,               wide.output = FALSE)) #> $density #>   descriptor density #> 1       st.a       3 #> 2       st.b       7 #>  #> $taxa #>   descriptor taxa #> 1       st.a    2 #> 2       st.b    3 #>  #> $occurrence #>   taxon occurrence #> 1  sp.1          1 #> 2  sp.2          1 #> 3  sp.3          1 #> 4  sp.4          1 #> 5  sp.5          1 #>   ## ==================================================== ## Northsea dataset ## ====================================================  NSsumm <- with(MWTL$density,     getSummary(descriptor  = station,               averageOver = year,               taxon       = taxon,               value       = density)) head(NSsumm$density) #>   descriptor   density #> 1  BREEVTN02 1215.5389 #> 2  BREEVTN03  768.3955 #> 3  BREEVTN04 1519.1157 #> 4  BREEVTN05 1944.8397 #> 5  BREEVTN06 1203.5062 #> 6  BREEVTN07 1230.1772 head(NSsumm$taxa) #>   descriptor taxa #> 1  BREEVTN02   88 #> 2  BREEVTN03   74 #> 3  BREEVTN04   69 #> 4  BREEVTN05   66 #> 5  BREEVTN06   60 #> 6  BREEVTN07   65 head(NSsumm$occurrence) #>                   taxon occurrence #> 1 Abludomelita obtusata         12 #> 2             Abra alba         70 #> 3           Abra nitida         34 #> 4       Abra prismatica         30 #> 5           Abra tenuis          3 #> 6 Abyssoninoe hibernica          9"},{"path":"/reference/traitfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"getTrait gets trait information (unique) taxa. fuzzy2crisp translate fuzzy traits crisp traits. crisp2fuzzy translate crisp traits fuzzy traits. Note: makes sense categorical traits. extendTrait expands taxon x trait data based taxonomic composition.","code":""},{"path":"/reference/traitfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"","code":"getTrait(taxon, trait, trait.class=NULL, trait.score=NULL,           taxonomy = NULL, t.column = 1,           standardize = FALSE, verbose = FALSE)  extendTrait(trait, taxonomy, t.column = 1)   fuzzy2crisp(trait, trait.class, trait.score, t.column = 1,          standardize = TRUE)  crisp2fuzzy (trait, t.column = 1)"},{"path":"/reference/traitfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"taxon vector taxon names get trait information. trait (taxon x trait) data (descriptor x trait) data, WIDE format.    Traits can fuzzy coded. default setting, first column contains name taxon, t.column=1. also allowed taxa row.names data.frame - set t.column=0. trait.class indices trait classes, vector. length vector equal number columns trait minus descriptor columns  (nrow(trait) - t.column). NULL, fuzzy traits converted crisp values. trait.score trait values scores, vector. length trait.class. standardize TRUE, standardize trait modalities, trait class sum 1. used trait.class given value. verbose TRUE, write warnings screen. taxonomy taxonomic information (relationships taxa), data.frame; first column matched taxon, regardless name. used estimate traits taxa accounted , estimated based taxa nearest taxonomic level. See details. t.column position(s) name(s) column(s) holds taxon data set. default first column holding taxon. NULL, 0, separate column names, row.names dataset used taxon names.","code":""},{"path":"/reference/traitfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"extendTrait returns trait matrix, augmented higher taxonomic levels, getTrait returns taxon x trait matrix, fuzzy format (trait database fuzzy format). However, trait.class NULL, matrix crisp format. fuzzy2crisp returns trait matrix, crisp format (fuzzy coded), crisp2fuzzy returns trait matrix, fuzzy format. original,fuzzy trait matrix categorical, output include description column, attribute description, use metadata(...) extract .","code":""},{"path":"/reference/traitfun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":[]},{"path":"/reference/traitfun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"taxonomy used fill gaps trait information, assuming closely related taxa share similar traits. done several steps: function extendTrait traits extended information higher taxonomic levels, provided information yet trait database. traits taxonomic level estimated average traits lower level. instance, traits genus level averages known traits species database belonging genus. function *getTrait*, trait database first extended information higher taxonomic levels (using *extendTrait*). , taxon present trait database, traits closest taxonomic level used. instance,  unrecorded species, first checked trait known genus level, , family level . taxon.getTrait, traits unique taxa returned. Traits NA traits present trait database  derived based taxonomic closeness. list taxa whose  traits remain unknown can found attributes(..)$notrait. best, subsequent calculations, remove NAs result,  put 0 (remaining unassigned taxa deemed acceptable).","code":""},{"path":"/reference/traitfun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for working with trait and taxonomic data. — Trait and taxonomic functions","text":"","code":"## ==================================================== ## Small dataset: taxonomy ## ====================================================  Btaxonomy <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.4\",\"sp.5\",\"sp.6\"),   genus   = c( \"g.1\", \"g.2\", \"g.2\", \"g.2\", \"g.3\", \"g.4\"),   family  = c( \"f.1\", \"f.1\", \"f.1\", \"f.1\", \"f.2\", \"f.3\"),   order   = c( \"o.1\", \"o.1\", \"o.1\", \"o.1\", \"o.2\", \"o.2\"),   class   = c( \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\", \"c.1\")   )  ## ==================================================== ## Small dataset: fuzzy-coded traits ## ====================================================  Btraits <- data.frame(   species = c(\"sp.1\",\"sp.2\",\"sp.3\",\"sp.5\",\"sp.6\"),   T1_M1   = c(0     , 0    ,   0  , 0.2  ,     1),   T1_M2   = c(1     , 0    , 0.5  , 0.3  ,     0),   T1_M3   = c(0     , 1    , 0.5  , 0.5  ,     0),   T2_M1   = c(0     , 0    ,   1  , 0.5  ,     1),   T2_M2   = c(1     , 1    ,   0  , 0.5  ,     0) )  # The 'metadata' of this trait database Btraits.lab <- data.frame(   colname  =c(\"T1_M1\",\"T1_M2\",\"T1_M3\",\"T2_M1\",\"T2_M2\"),   trait    =c(\"T1\"   ,\"T1\"   ,\"T1\"   ,\"T2\"   ,\"T2\"),   modality =c(\"M1\"   ,\"M2\"   ,\"M3\"   ,\"M1\"   ,\"M2\"),    score    =c(0      , 0.5   , 1     , 0.2   , 2) )  ##----------------------------------------------------- ## Show traits ##-----------------------------------------------------  # sp.4 is not in Btraits  getTrait (taxon      = \"sp.4\",            trait      = Btraits) #>   taxon T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 #> 1  sp.4    NA    NA    NA    NA    NA  # sp.4 traits derived from taxonomic tree (g.2) getTrait (taxon      = \"sp.4\",            trait      = Btraits,            taxonomy   = Btaxonomy) #>   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 #> 1    sp.4     0  0.25  0.75   0.5   0.5  getTrait (taxon      = c(\"g.2\"),            trait      = Btraits,            taxonomy   = Btaxonomy) #>   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 #> 1     g.2     0  0.25  0.75   0.5   0.5  # g.2 is derived as mean of sp.2, sp.3 and sp.4  getTrait (taxon      = c(\"sp.2\", \"sp.3\", \"sp.4\"),            trait      = Btraits,            taxonomy   = Btaxonomy) #>   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 #> 1    sp.2     0  0.00  1.00   0.0   1.0 #> 2    sp.3     0  0.50  0.50   1.0   0.0 #> 3    sp.4     0  0.25  0.75   0.5   0.5  getTrait (taxon      = c(\"g.2\"),            trait      = Btraits,            taxonomy   = Btaxonomy) #>   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 #> 1     g.2     0  0.25  0.75   0.5   0.5  ##----------------------------------------------------- ## crisp values of traits ##-----------------------------------------------------  # for categoric values: the most abundant category is taken  C1 <- fuzzy2crisp(trait       = Btraits,                     trait.class = Btraits.lab$trait,                     trait.score = Btraits.lab$modality,                     standardize = TRUE)  C1 #>   species T1 T2 #> 1    sp.1 M2 M2 #> 2    sp.2 M3 M2 #> 3    sp.3 M2 M1 #> 4    sp.5 M3 M1 #> 5    sp.6 M1 M1   # the reverse returns a binary-coded value  (C2fuz <- crisp2fuzzy(trait       = C1)) #>   species T1_M1 T1_M2 T1_M3 T2_M1 T2_M2 #> 1    sp.1     0     1     0     0     1 #> 2    sp.2     0     0     1     0     1 #> 3    sp.3     0     1     0     1     0 #> 4    sp.5     0     0     1     1     0 #> 5    sp.6     1     0     0     1     0  metadata(C2fuz) #>     colname trait modality #> T11   T1_M1    T1       M1 #> T12   T1_M2    T1       M2 #> T13   T1_M3    T1       M3 #> T21   T2_M1    T2       M1 #> T22   T2_M2    T2       M2   # for numeric (or binary) values: the weighted mean is calculated  C2 <- fuzzy2crisp(trait       = Btraits,                     trait.class = Btraits.lab$trait,                     trait.score = Btraits.lab$score,                     standardize = TRUE)  C2 #>   species   T1  T2 #> 1    sp.1 0.50 2.0 #> 2    sp.2 1.00 2.0 #> 3    sp.3 0.75 0.2 #> 4    sp.5 0.65 1.1 #> 5    sp.6 0.00 0.2  (C2f <- crisp2fuzzy(C2))  # this has no effect #>   species   T1  T2 #> 1    sp.1 0.50 2.0 #> 2    sp.2 1.00 2.0 #> 3    sp.3 0.75 0.2 #> 4    sp.5 0.65 1.1 #> 5    sp.6 0.00 0.2   ##----------------------------------------------------- ## Extend traits with higher level information ##-----------------------------------------------------  Btraits.ext <- extendTrait (trait    = Btraits,                              taxonomy = Btaxonomy)  Btraits.all <- rbind(Btraits, Btraits.ext) Btraits.all #>    species T1_M1 T1_M2 T1_M3     T2_M1     T2_M2 #> 1     sp.1  0.00  1.00  0.00 0.0000000 1.0000000 #> 2     sp.2  0.00  0.00  1.00 0.0000000 1.0000000 #> 3     sp.3  0.00  0.50  0.50 1.0000000 0.0000000 #> 4     sp.5  0.20  0.30  0.50 0.5000000 0.5000000 #> 5     sp.6  1.00  0.00  0.00 1.0000000 0.0000000 #> 6      g.1  0.00  1.00  0.00 0.0000000 1.0000000 #> 7      g.2  0.00  0.25  0.75 0.5000000 0.5000000 #> 8      g.3  0.20  0.30  0.50 0.5000000 0.5000000 #> 9      g.4  1.00  0.00  0.00 1.0000000 0.0000000 #> 10     f.1  0.00  0.50  0.50 0.3333333 0.6666667 #> 11     f.2  0.20  0.30  0.50 0.5000000 0.5000000 #> 12     f.3  1.00  0.00  0.00 1.0000000 0.0000000 #> 13     o.1  0.00  0.50  0.50 0.3333333 0.6666667 #> 14     o.2  0.60  0.15  0.25 0.7500000 0.2500000 #> 15     c.1  0.24  0.36  0.40 0.5000000 0.5000000  #same, but in crisp format fuzzy2crisp(trait       = Btraits.all,              trait.score = Btraits.lab$score,              trait.class = Btraits.lab$trait) #>    species    T1   T2 #> 1     sp.1 0.500 2.00 #> 2     sp.2 1.000 2.00 #> 3     sp.3 0.750 0.20 #> 4     sp.5 0.650 1.10 #> 5     sp.6 0.000 0.20 #> 6      g.1 0.500 2.00 #> 7      g.2 0.875 1.10 #> 8      g.3 0.650 1.10 #> 9      g.4 0.000 0.20 #> 10     f.1 0.750 1.40 #> 11     f.2 0.650 1.10 #> 12     f.3 0.000 0.20 #> 13     o.1 0.750 1.40 #> 14     o.2 0.325 0.65 #> 15     c.1 0.580 1.10  # In one go, and including sp.4 getTrait (taxon    = c(\"sp.1\", \"sp.2\", \"sp.3\", \"sp.4\", \"sp.5\", \"sp.6\"),           trait    = Btraits,            taxonomy = Btaxonomy,            trait.score = Btraits.lab$score,            trait.class = Btraits.lab$trait) #>   species    T1  T2 #> 1    sp.1 0.500 2.0 #> 2    sp.2 1.000 2.0 #> 3    sp.3 0.750 0.2 #> 4    sp.4 0.875 1.1 #> 5    sp.5 0.650 1.1 #> 6    sp.6 0.000 0.2                       TraitSmall <- data.frame(species=c(\"Alcyonium acaule\",  \"Alcyonium coralloides\"),                          T1.M1=c(0.9,1), T1.M2=c(0.1,0), T1.M3=c(0,0)) TaxSmall <- data.frame(species = c(\"Alcyonium acaule\",  \"Alcyonium coralloides\"),                Genus   = c(\"Alcyonium\", \"Alcyonium\"),                Family  = c(\"Alcyoniidae\", \"Alcyoniidae\"),                order   = c(\"Alcyonacea\", \"Alcyonacea\")) T1 <- extendTrait(trait=TraitSmall, taxonomy=TaxSmall)"},{"path":"/reference/utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","title":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","text":"getTaxonInfo extracts trait information certain taxon trait database. metadata returns description object, .e meaning columns, units, etc...","code":""},{"path":"/reference/utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","text":"","code":"getTaxonInfo(taxon, trait = Traits_nioz, taxonomy = Taxonomy)    getTaxonomy(taxon, taxonomy=Taxonomy)  metadata(object)"},{"path":"/reference/utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","text":"taxon name taxon (vector names) traits need listed. trait trait database wide format; taxon first column, contain description trait database attribute (\"description\"). See Traits_nioz suitable structure. taxonomy taxonomic information; first column matched taxon trait database, regardless name. object object data.frame description attributes.","code":""},{"path":"/reference/utilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","text":"getTaxonInfo returns data.frame traits species whose modalities Null, NULL None.  getTaxonomy returns occurrences taxon within taxonomy.  metadata returns data.frame description contents database.","code":""},{"path":"/reference/utilities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","text":"Karline Soetaert <karline.soetaert@nioz.nl>   Olivier Beauchard","code":""},{"path":[]},{"path":"/reference/utilities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getTaxonInfo gets trait information for a taxon\r\n  \r\n  getTaxonomy gets taxonomic information for a taxon\r\n  \r\n  metadata gets the description of the content of a database. — General utilities for the Btrait package","text":"","code":"## ==================================================== ## Description of the Traits_nioz database ## ==================================================== metadata(Traits_nioz) #>     colname                            trait                modality indic #> 1    ET1.M1    Substratum depth distribution                       0     1 #> 2    ET1.M2    Substratum depth distribution                     0-5     1 #> 3    ET1.M3    Substratum depth distribution                    5-15     1 #> 4    ET1.M4    Substratum depth distribution                   15-30     1 #> 5    ET1.M5    Substratum depth distribution                     >30     1 #> 6    ET2.M1                     Biodiffusion                    Null     2 #> 7    ET2.M2                     Biodiffusion                     Low     2 #> 8    ET2.M3                     Biodiffusion                    High     2 #> 9    ET3.M1               Downward conveying                    Null     3 #> 10   ET3.M2               Downward conveying                     Low     3 #> 11   ET3.M3               Downward conveying                    High     3 #> 12   ET4.M1                 Upward conveying                    Null     4 #> 13   ET4.M2                 Upward conveying                     Low     4 #> 14   ET4.M3                 Upward conveying                    High     4 #> 15   ET5.M1                     Regeneration                    Null     5 #> 16   ET5.M2                     Regeneration                     Low     5 #> 17   ET5.M3                     Regeneration                    High     5 #> 18   ET6.M1                    Biodeposition                    Null     6 #> 19   ET6.M2                    Biodeposition                     Low     6 #> 20   ET6.M3                    Biodeposition                    High     6 #> 21   ET7.M1                       Bioerosion                    Null     7 #> 22   ET7.M2                       Bioerosion                     Low     7 #> 23   ET7.M3                       Bioerosion                    High     7 #> 24   ET8.M1                 Biostabilisation                    Null     8 #> 25   ET8.M2                 Biostabilisation                     Low     8 #> 26   ET8.M3                 Biostabilisation                    High     8 #> 27   ET9.M1              Ventilation/Pumping                    Null     9 #> 28   ET9.M2              Ventilation/Pumping                     Low     9 #> 29   ET9.M3              Ventilation/Pumping                    High     9 #> 30  ET10.M1                     Burrow width                    None    10 #> 31  ET10.M2                     Burrow width                  Narrow    10 #> 32  ET10.M3                     Burrow width            Intermediate    10 #> 33  ET10.M4                     Burrow width                    Wide    10 #> 34  ET11.M1           Endo-3D structure type                    None    11 #> 35  ET11.M2           Endo-3D structure type          Chimney/Funnel    11 #> 36  ET11.M3           Endo-3D structure type                    Tube    11 #> 37  ET11.M4           Endo-3D structure type        IJ-shaped burrow    11 #> 38  ET11.M5           Endo-3D structure type        UY-shaped burrow    11 #> 39  ET11.M6           Endo-3D structure type         Branched burrow    11 #> 40  ET11.M7           Endo-3D structure type      Anastomosed burrow    11 #> 41  ET12.M1          Endo-3D structure depth                    None    12 #> 42  ET12.M2          Endo-3D structure depth                     0-5    12 #> 43  ET12.M3          Endo-3D structure depth                    5-15    12 #> 44  ET12.M4          Endo-3D structure depth                   15-30    12 #> 45  ET12.M5          Endo-3D structure depth                     >30    12 #> 46  ET13.M1            Epi-3D structure type                    None    13 #> 47  ET13.M2            Epi-3D structure type                     Mat    13 #> 48  ET13.M3            Epi-3D structure type                   Mound    13 #> 49  ET13.M4            Epi-3D structure type Tube/Tubular protrusion    13 #> 50  ET13.M5            Epi-3D structure type                   Shell    13 #> 51  ET13.M6            Epi-3D structure type           Stalk/Feather    13 #> 52  ET13.M7            Epi-3D structure type            Protuberance    13 #> 53  ET14.M1       Epi-3D structure extension                    None    14 #> 54  ET14.M2       Epi-3D structure extension        Isolated/Clumped    14 #> 55  ET14.M3       Epi-3D structure extension                Mat/Lawn    14 #> 56  ET14.M4       Epi-3D structure extension             Simple reef    14 #> 57  ET14.M5       Epi-3D structure extension            Complex reef    14 #> 58  ET15.M1            Epi-3D structure size                    None    15 #> 59  ET15.M2            Epi-3D structure size                      <1    15 #> 60  ET15.M3            Epi-3D structure size                     1-3    15 #> 61  ET15.M4            Epi-3D structure size                    3-10    15 #> 62  ET15.M5            Epi-3D structure size                   10-20    15 #> 63  ET15.M6            Epi-3D structure size                   20-50    15 #> 64  ET15.M7            Epi-3D structure size                     >50    15 #> 65   RT1.M1                        Body mass                  <0.001     1 #> 66   RT1.M2                        Body mass             0.001-0.010     1 #> 67   RT1.M3                        Body mass             0.010-0.100     1 #> 68   RT1.M4                        Body mass             0.100-1.000     1 #> 69   RT1.M5                        Body mass                  >1.000     1 #> 70   RT2.M1                      Body length                      <1     2 #> 71   RT2.M2                      Body length                     1-3     2 #> 72   RT2.M3                      Body length                    3-10     2 #> 73   RT2.M4                      Body length                   10-20     2 #> 74   RT2.M5                      Body length                   20-50     2 #> 75   RT3.M1                  Body resistance                Very low     3 #> 76   RT3.M2                  Body resistance                     Low     3 #> 77   RT3.M3                  Body resistance            Intermediate     3 #> 78   RT3.M4                  Body resistance                    High     3 #> 79   RT3.M5                  Body resistance               Very high     3 #> 80   RT4.M1                         Motility                 Sessile     4 #> 81   RT4.M2                         Motility              Tubicolous     4 #> 82   RT4.M3                         Motility                 Crawler     4 #> 83   RT4.M4                         Motility                 Swimmer     4 #> 84   RT5.M1       Burrowing/Sheltering depth                       0     5 #> 85   RT5.M2       Burrowing/Sheltering depth                     0-5     5 #> 86   RT5.M3       Burrowing/Sheltering depth                    5-15     5 #> 87   RT5.M4       Burrowing/Sheltering depth                     >15     5 #> 88   RT6.M1                     Feeding type          Deposit feeder     6 #> 89   RT6.M2                     Feeding type       Suspension feeder     6 #> 90   RT6.M3                     Feeding type        Herbivore/Grazer     6 #> 91   RT6.M4                     Feeding type     Carnivore/Scavenger     6 #> 92   RT7.M1                        Life span                      <1     7 #> 93   RT7.M2                        Life span                     1-3     7 #> 94   RT7.M3                        Life span                    3-10     7 #> 95   RT7.M4                        Life span                   10-20     7 #> 96   RT7.M5                        Life span                     >20     7 #> 97   RT8.M1                  Age at maturity                      <1     8 #> 98   RT8.M2                  Age at maturity                     1-3     8 #> 99   RT8.M3                  Age at maturity                     3-5     8 #> 100  RT9.M1           Reproductive frequency         Sexual seasonal     9 #> 101  RT9.M2           Reproductive frequency       Sexual continuous     9 #> 102 RT10.M1                    Fertilisation            Broadcasting    10 #> 103 RT10.M2                    Fertilisation            Spermcasting    10 #> 104 RT10.M3                    Fertilisation                 Pairing    10 #> 105 RT11.M1                 Annual fecundity                   <10e2    11 #> 106 RT11.M2                 Annual fecundity               10e2-10e3    11 #> 107 RT11.M3                 Annual fecundity               10e3-10e4    11 #> 108 RT11.M4                 Annual fecundity               10e4-10e5    11 #> 109 RT11.M5                 Annual fecundity               10e5-10e6    11 #> 110 RT11.M6                 Annual fecundity                   >10e6    11 #> 111 RT12.M1                   Offspring type                     Egg    12 #> 112 RT12.M2                   Offspring type                   Larva    12 #> 113 RT12.M3                   Offspring type                Juvenile    12 #> 114 RT13.M1                   Offspring size                    <0.1    13 #> 115 RT13.M2                   Offspring size                 0.1-0.5    13 #> 116 RT13.M3                   Offspring size                 0.5-1.5    13 #> 117 RT13.M4                   Offspring size                   1.5-5    13 #> 118 RT14.M1             Offspring protection                    None    14 #> 119 RT14.M2             Offspring protection                     Gel    14 #> 120 RT14.M3             Offspring protection                 Capsule    14 #> 121 RT14.M4             Offspring protection                Burrying    14 #> 122 RT14.M5             Offspring protection        Bearing/Brooding    14 #> 123 RT15.M1            Offspring development          Planktotrophic    15 #> 124 RT15.M2            Offspring development          Lecithotrophic    15 #> 125 RT15.M3            Offspring development    Mixed planktotrophic    15 #> 126 RT15.M4            Offspring development    Mixed lecithotrophic    15 #> 127 RT15.M5            Offspring development                Internal    15 #> 128 RT16.M1 Offspring benthic stage duration                    Null    16 #> 129 RT16.M2 Offspring benthic stage duration                     <15    16 #> 130 RT16.M3 Offspring benthic stage duration                   15-30    16 #> 131 RT16.M4 Offspring benthic stage duration                   30-60    16 #> 132 RT16.M5 Offspring benthic stage duration                     >60    16 #> 133 RT17.M1 Offspring pelagic stage duration                    Null    17 #> 134 RT17.M2 Offspring pelagic stage duration                     <15    17 #> 135 RT17.M3 Offspring pelagic stage duration                   15-30    17 #> 136 RT17.M4 Offspring pelagic stage duration                   30-60    17 #> 137 RT17.M5 Offspring pelagic stage duration                     >60    17 #>            value     score units #> 1   0.000000e+00 1.0000000    cm #> 2   2.500000e+00 0.7500000    cm #> 3   1.000000e+01 0.5000000    cm #> 4   2.250000e+01 0.2500000    cm #> 5   3.000000e+01 0.0000000    cm #> 6   0.000000e+00 0.0000000     - #> 7   5.000000e-01 0.5000000     - #> 8   1.000000e+00 1.0000000     - #> 9   0.000000e+00 0.0000000     - #> 10  5.000000e-01 0.5000000     - #> 11  1.000000e+00 1.0000000     - #> 12  0.000000e+00 0.0000000     - #> 13  5.000000e-01 0.5000000     - #> 14  1.000000e+00 1.0000000     - #> 15  0.000000e+00 0.0000000     - #> 16  5.000000e-01 0.5000000     - #> 17  1.000000e+00 1.0000000     - #> 18  0.000000e+00 0.0000000     - #> 19  5.000000e-01 0.5000000     - #> 20  1.000000e+00 1.0000000     - #> 21  0.000000e+00 0.0000000     - #> 22  5.000000e-01 0.5000000     - #> 23  1.000000e+00 1.0000000     - #> 24  0.000000e+00 0.0000000     - #> 25  5.000000e-01 0.5000000     - #> 26  1.000000e+00 1.0000000     - #> 27  0.000000e+00 0.0000000     - #> 28  5.000000e-01 0.5000000     - #> 29  1.000000e+00 1.0000000     - #> 30  0.000000e+00 0.0000000    mm #> 31  5.000000e+00 0.3333333    mm #> 32  7.500000e+00 0.6666667    mm #> 33  1.250000e+01 1.0000000    mm #> 34  0.000000e+00 0.0000000     - #> 35  1.666667e-01 0.1666667     - #> 36  3.333333e-01 0.3333333     - #> 37  5.000000e-01 0.5000000     - #> 38  6.666667e-01 0.6666667     - #> 39  8.333333e-01 0.8333333     - #> 40  1.000000e+00 1.0000000     - #> 41  0.000000e+00 0.0000000    cm #> 42  2.500000e+00 0.2500000    cm #> 43  1.000000e+01 0.5000000    cm #> 44  2.250000e+01 0.7500000    cm #> 45  3.000000e+01 1.0000000    cm #> 46  0.000000e+00 0.0000000     - #> 47  1.666667e-01 0.1666667     - #> 48  3.333333e-01 0.3333333     - #> 49  5.000000e-01 0.5000000     - #> 50  6.666667e-01 0.6666667     - #> 51  8.333333e-01 0.8333333     - #> 52  1.000000e+00 1.0000000     - #> 53  0.000000e+00 0.0000000     - #> 54  2.500000e-01 0.2500000     - #> 55  5.000000e-01 0.5000000     - #> 56  7.500000e-01 0.7500000     - #> 57  1.000000e+00 1.0000000     - #> 58  0.000000e+00 0.0000000    mm #> 59  1.000000e+00 0.1666667    mm #> 60  2.000000e+00 0.3333333    mm #> 61  6.500000e+00 0.5000000    mm #> 62  1.500000e+01 0.6666667    mm #> 63  3.500000e+01 0.8333333    mm #> 64  5.000000e+01 1.0000000    mm #> 65  5.000000e-04 0.0000000 gADWt #> 66  5.000000e-03 0.2500000 gADWt #> 67  5.000000e-02 0.5000000 gADWt #> 68  5.000000e-01 0.7500000 gADWt #> 69  5.000000e+00 1.0000000 gADWt #> 70  5.000000e-01 0.0000000    mm #> 71  2.000000e+00 0.2500000    mm #> 72  6.500000e+00 0.5000000    mm #> 73  1.500000e+01 0.7500000    mm #> 74  3.500000e+01 1.0000000    mm #> 75  0.000000e+00 1.0000000     - #> 76  2.500000e-01 0.7500000     - #> 77  5.000000e-01 0.5000000     - #> 78  7.500000e-01 0.2500000     - #> 79  1.000000e+00 0.0000000     - #> 80  0.000000e+00 1.0000000     - #> 81  3.333333e-01 0.6666667     - #> 82  6.666667e-01 0.3333333     - #> 83  1.000000e+00 0.0000000     - #> 84  0.000000e+00 1.0000000    cm #> 85  2.500000e+00 0.7500000    cm #> 86  1.000000e+01 0.5000000    cm #> 87  2.000000e+01 0.2500000    cm #> 88  0.000000e+00 0.0000000     - #> 89  3.333333e-01 0.3333333     - #> 90  6.666667e-01 0.6666667     - #> 91  1.000000e+00 1.0000000     - #> 92  5.000000e-01 0.0000000  year #> 93  2.000000e+00 0.2500000  year #> 94  6.500000e+00 0.5000000  year #> 95  1.500000e+01 0.7500000  year #> 96  3.000000e+01 1.0000000  year #> 97  5.000000e-01 0.0000000  year #> 98  2.000000e+00 0.5000000  year #> 99  4.000000e+00 1.0000000  year #> 100 0.000000e+00 0.0000000     - #> 101 1.000000e+00 1.0000000     - #> 102 0.000000e+00 0.0000000     - #> 103 5.000000e-01 0.5000000     - #> 104 1.000000e+00 1.0000000     - #> 105 5.000000e+01 0.0000000     - #> 106 4.500000e+02 0.2000000     - #> 107 4.500000e+03 0.4000000     - #> 108 4.500000e+04 0.6000000     - #> 109 4.500000e+05 0.8000000     - #> 110 1.000000e+06 1.0000000     - #> 111 0.000000e+00 0.0000000     - #> 112 5.000000e-01 0.5000000     - #> 113 1.000000e+00 1.0000000     - #> 114 5.000000e-02 0.0000000    mm #> 115 3.000000e-01 0.3333333    mm #> 116 1.000000e+00 0.6666667    mm #> 117 3.250000e+00 1.0000000    mm #> 118 0.000000e+00 0.0000000     - #> 119 2.500000e-01 0.2500000     - #> 120 5.000000e-01 0.5000000     - #> 121 7.500000e-01 0.7500000     - #> 122 1.000000e+00 1.0000000     - #> 123 0.000000e+00 0.0000000     - #> 124 2.500000e-01 0.2500000     - #> 125 5.000000e-01 0.5000000     - #> 126 7.500000e-01 0.7500000     - #> 127 1.000000e+00 1.0000000     - #> 128 0.000000e+00 0.0000000  days #> 129 7.500000e+00 0.2500000  days #> 130 2.250000e+01 0.5000000  days #> 131 4.500000e+01 0.7500000  days #> 132 6.000000e+01 1.0000000  days #> 133 0.000000e+00 0.0000000  days #> 134 7.500000e+00 0.2500000  days #> 135 2.250000e+01 0.5000000  days #> 136 4.500000e+01 0.7500000  days #> 137 6.000000e+01 1.0000000  days  ## ==================================================== ## Traits for certain taxa ## ====================================================  # Taxonomy of amphiura and related species in the databases. getTaxonomy(\"Amphiura filiformis\") #> [[1]] #>                   taxon    genus      family         order       class #> 112 Amphiura filiformis Amphiura Amphiuridae Amphilepidida Ophiuroidea #>            phylum AphiaID #> 112 Echinodermata  125080 #>  getTaxonomy(\"Amphiura\") #> [[1]] #>                                 taxon    genus      family         order #> 109                          Amphiura Amphiura Amphiuridae Amphilepidida #> 110 Amphiura (Ophiopeltis) securigera Amphiura Amphiuridae Amphilepidida #> 111                  Amphiura chiajei Amphiura Amphiuridae Amphilepidida #> 112               Amphiura filiformis Amphiura Amphiuridae Amphilepidida #>           class        phylum AphiaID #> 109 Ophiuroidea Echinodermata  123613 #> 110 Ophiuroidea Echinodermata  125195 #> 111 Ophiuroidea Echinodermata  125073 #> 112 Ophiuroidea Echinodermata  125080 #>   getTaxonInfo(\"Amphiura filiformis\") #>                  taxon                            trait          modality units #> 1  Amphiura filiformis    Substratum depth distribution               0-5    cm #> 2  Amphiura filiformis    Substratum depth distribution              5-15    cm #> 3  Amphiura filiformis                     Biodiffusion               Low     - #> 7  Amphiura filiformis                    Biodeposition               Low     - #> 10 Amphiura filiformis              Ventilation/Pumping              High     - #> 11 Amphiura filiformis                     Burrow width            Narrow    mm #> 12 Amphiura filiformis                     Burrow width      Intermediate    mm #> 13 Amphiura filiformis           Endo-3D structure type    Chimney/Funnel     - #> 14 Amphiura filiformis           Endo-3D structure type  UY-shaped burrow     - #> 15 Amphiura filiformis          Endo-3D structure depth               0-5    cm #> 16 Amphiura filiformis          Endo-3D structure depth              5-15    cm #> 17 Amphiura filiformis            Epi-3D structure type             Mound     - #> 18 Amphiura filiformis       Epi-3D structure extension  Isolated/Clumped     - #> 19 Amphiura filiformis            Epi-3D structure size                <1    mm #> 20 Amphiura filiformis            Epi-3D structure size               1-3    mm #> 21 Amphiura filiformis                        Body mass       0.001-0.010 gADWt #> 22 Amphiura filiformis                      Body length             20-50    mm #> 23 Amphiura filiformis                  Body resistance               Low     - #> 24 Amphiura filiformis                         Motility           Crawler     - #> 25 Amphiura filiformis       Burrowing/Sheltering depth              5-15    cm #> 26 Amphiura filiformis                     Feeding type    Deposit feeder     - #> 27 Amphiura filiformis                     Feeding type Suspension feeder     - #> 28 Amphiura filiformis                        Life span             10-20  year #> 29 Amphiura filiformis                  Age at maturity               3-5  year #> 30 Amphiura filiformis           Reproductive frequency   Sexual seasonal     - #> 31 Amphiura filiformis                    Fertilisation           Pairing     - #> 32 Amphiura filiformis                 Annual fecundity         10e4-10e5     - #> 33 Amphiura filiformis                   Offspring type               Egg     - #> 34 Amphiura filiformis                   Offspring size              <0.1    mm #> 36 Amphiura filiformis            Offspring development    Planktotrophic     - #> 38 Amphiura filiformis Offspring pelagic stage duration             30-60  days #>    proportion #> 1        0.75 #> 2        0.25 #> 3        1.00 #> 7        1.00 #> 10       1.00 #> 11       0.50 #> 12       0.50 #> 13       0.50 #> 14       0.50 #> 15       0.50 #> 16       0.50 #> 17       1.00 #> 18       1.00 #> 19       0.50 #> 20       0.50 #> 21       1.00 #> 22       1.00 #> 23       1.00 #> 24       1.00 #> 25       1.00 #> 26       0.50 #> 27       0.50 #> 28       1.00 #> 29       1.00 #> 30       1.00 #> 31       1.00 #> 32       1.00 #> 33       1.00 #> 34       1.00 #> 36       1.00 #> 38       1.00 getTaxonInfo(\"Amphiura filiformis\", trait=Traits_cefas) #>                  taxon                      trait                  modality #> 1  Amphiura filiformis               Maximum size                   101-200 #> 2  Amphiura filiformis                 Morphology               Exoskeleton #> 3  Amphiura filiformis                   Lifespan                       >10 #> 4  Amphiura filiformis   Egg development location            Sexual_pelagic #> 5  Amphiura filiformis Larva development location    Pelagic_planktotrophic #> 6  Amphiura filiformis               Living habit               Free_living #> 7  Amphiura filiformis               Living habit Crevice_hole_under_stones #> 8  Amphiura filiformis          Sediment position  Shallow_infauna_0_to_5cm #> 9  Amphiura filiformis               Feeding mode                Suspension #> 10 Amphiura filiformis               Feeding mode           Surface_deposit #> 11 Amphiura filiformis                   Mobility         Crawl_creep_climb #> 12 Amphiura filiformis                   Mobility                  Burrower #> 13 Amphiura filiformis          Bioturbation mode          Diffusive_mixing #> 14 Amphiura filiformis          Bioturbation mode        Surface_deposition #>    units proportion #> 1     mm       1.00 #> 2      -       1.00 #> 3  years       1.00 #> 4      -       1.00 #> 5      -       1.00 #> 6      -       0.75 #> 7      -       0.25 #> 8     cm       1.00 #> 9      -       0.50 #> 10     -       0.50 #> 11     -       0.50 #> 12     -       0.50 #> 13     -       0.50 #> 14     -       0.50  # there is no direct information on the traits of this species in Traits_cefas getTaxonInfo(\"Amphiura filiformis\", trait=Traits_cefas, NULL) #> [1] taxon      trait      modality   units      proportion #> <0 rows> (or 0-length row.names)  ## ==================================================== ## Northsea dataset ## ====================================================  # show its contents metadata(MWTL)           #> $title #> [1] \"The MWTL Northsea macrobenthos data (1995 - 2018)\" #>  #> $originator #> [1] \"Ministerie van Infrastructuur en Milieu, Rijkswaterstaat Centrale Informatievoorziening (RWS, CIV)\" #>  #> $implemented #> [1] \"Karline Soetaert, in the frame of the EMODnet biology project\" #>  metadata(MWTL$density) #>             name                                description          units #> 1        station                               station name                #> 2           date                    sampling date, a string                #> 3          taxon taxon name, checked by worms, and adjusted                #> 4        density                      species total density individuals/m2 #> 5        biomass          species total ash-free dry weight       gAFDW/m2 #> 6 taxon.original                        original taxon name"}]
